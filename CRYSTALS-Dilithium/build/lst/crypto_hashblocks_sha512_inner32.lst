ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 1


   1              	# 0 "crypto_hashblocks_sha512_inner32.s"
   2              	# 1 "C:\\ChibiStudio\\workspace_user\\CRYSTALS-Dilithium//"
   0              	
   0              	
   0              	
   1              	
   2              	# qhasm: int32 input_0
   3              	
   4              	# qhasm: int32 input_1
   5              	
   6              	# qhasm: int32 input_2
   7              	
   8              	# qhasm: int32 input_3
   9              	
  10              	# qhasm: stack32 input_4
  11              	
  12              	# qhasm: stack32 input_5
  13              	
  14              	# qhasm: stack32 input_6
  15              	
  16              	# qhasm: stack32 input_7
  17              	
  18              	# qhasm: int32 caller_r4
  19              	
  20              	# qhasm: int32 caller_r5
  21              	
  22              	# qhasm: int32 caller_r6
  23              	
  24              	# qhasm: int32 caller_r7
  25              	
  26              	# qhasm: int32 caller_r8
  27              	
  28              	# qhasm: int32 caller_r9
  29              	
  30              	# qhasm: int32 caller_r10
  31              	
  32              	# qhasm: int32 caller_r11
  33              	
  34              	# qhasm: int32 caller_r12
  35              	
  36              	# qhasm: int32 caller_r14
  37              	
  38              	# qhasm: startcode
  39              	.text
  40              	.arch armv7
  41              	.fpu fpv4-sp-d16
  42              	.syntax unified
  43              	
  44              	# qhasm: int32 two13
  45              	
  46              	# qhasm: int32 two23
  47              	
  48              	# qhasm: int32 two24
  49              	
  50              	# qhasm: int32 two25
  51              	
  52              	# qhasm: int32 lotmp
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 2


  53              	
  54              	# qhasm: int32 lotmp2
  55              	
  56              	# qhasm: int32 hitmp
  57              	
  58              	# qhasm: int32 hitmp2
  59              	
  60              	# qhasm: int32 lou0
  61              	
  62              	# qhasm: int32 lou1
  63              	
  64              	# qhasm: int32 lou2
  65              	
  66              	# qhasm: int32 lou3
  67              	
  68              	# qhasm: int32 lou4
  69              	
  70              	# qhasm: int32 lou5
  71              	
  72              	# qhasm: int32 hiu0
  73              	
  74              	# qhasm: int32 hiu1
  75              	
  76              	# qhasm: int32 hiu2
  77              	
  78              	# qhasm: int32 hiu3
  79              	
  80              	# qhasm: int32 hiu4
  81              	
  82              	# qhasm: int32 hiu5
  83              	
  84              	# qhasm: stack32 hid0
  85              	
  86              	# qhasm: stack32 hid1
  87              	
  88              	# qhasm: stack32 hid2
  89              	
  90              	# qhasm: stack32 hid3
  91              	
  92              	# qhasm: stack32 hid4
  93              	
  94              	# qhasm: stack32 hid5
  95              	
  96              	# qhasm: stack32 hid6
  97              	
  98              	# qhasm: stack32 hid7
  99              	
 100              	# qhasm: stack32 hid8
 101              	
 102              	# qhasm: stack32 hid9
 103              	
 104              	# qhasm: stack32 hid10
 105              	
 106              	# qhasm: stack32 hid11
 107              	
 108              	# qhasm: stack32 hid12
 109              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 3


 110              	# qhasm: stack32 hid13
 111              	
 112              	# qhasm: stack32 hid14
 113              	
 114              	# qhasm: stack32 hid15
 115              	
 116              	# qhasm: stack32 lod0
 117              	
 118              	# qhasm: stack32 lod1
 119              	
 120              	# qhasm: stack32 lod2
 121              	
 122              	# qhasm: stack32 lod3
 123              	
 124              	# qhasm: stack32 lod4
 125              	
 126              	# qhasm: stack32 lod5
 127              	
 128              	# qhasm: stack32 lod6
 129              	
 130              	# qhasm: stack32 lod7
 131              	
 132              	# qhasm: stack32 lod8
 133              	
 134              	# qhasm: stack32 lod9
 135              	
 136              	# qhasm: stack32 lod10
 137              	
 138              	# qhasm: stack32 lod11
 139              	
 140              	# qhasm: stack32 lod12
 141              	
 142              	# qhasm: stack32 lod13
 143              	
 144              	# qhasm: stack32 lod14
 145              	
 146              	# qhasm: stack32 lod15
 147              	
 148              	# qhasm: stack32 him0
 149              	
 150              	# qhasm: stack32 him1
 151              	
 152              	# qhasm: stack32 him2
 153              	
 154              	# qhasm: stack32 him3
 155              	
 156              	# qhasm: stack32 him4
 157              	
 158              	# qhasm: stack32 him5
 159              	
 160              	# qhasm: stack32 him6
 161              	
 162              	# qhasm: stack32 him7
 163              	
 164              	# qhasm: stack32 him8
 165              	
 166              	# qhasm: stack32 him9
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 4


 167              	
 168              	# qhasm: stack32 him10
 169              	
 170              	# qhasm: stack32 him11
 171              	
 172              	# qhasm: stack32 him12
 173              	
 174              	# qhasm: stack32 him13
 175              	
 176              	# qhasm: stack32 him14
 177              	
 178              	# qhasm: stack32 him15
 179              	
 180              	# qhasm: stack32 lom0
 181              	
 182              	# qhasm: stack32 lom1
 183              	
 184              	# qhasm: stack32 lom2
 185              	
 186              	# qhasm: stack32 lom3
 187              	
 188              	# qhasm: stack32 lom4
 189              	
 190              	# qhasm: stack32 lom5
 191              	
 192              	# qhasm: stack32 lom6
 193              	
 194              	# qhasm: stack32 lom7
 195              	
 196              	# qhasm: stack32 lom8
 197              	
 198              	# qhasm: stack32 lom9
 199              	
 200              	# qhasm: stack32 lom10
 201              	
 202              	# qhasm: stack32 lom11
 203              	
 204              	# qhasm: stack32 lom12
 205              	
 206              	# qhasm: stack32 lom13
 207              	
 208              	# qhasm: stack32 lom14
 209              	
 210              	# qhasm: stack32 lom15
 211              	
 212              	# qhasm: stack32 o0
 213              	
 214              	# qhasm: stack32 o1
 215              	
 216              	# qhasm: stack32 o2
 217              	
 218              	# qhasm: stack32 o3
 219              	
 220              	# qhasm: stack32 o4
 221              	
 222              	# qhasm: rpushenter crypto_hashblocks_sha512_m4nofpu_inner
 223              	.p2align 2
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 5


 224              	.global crypto_hashblocks_sha512_m4nofpu_inner
 225              	.type crypto_hashblocks_sha512_m4nofpu_inner,%function
 226              	.thumb
 227              	.thumb_func
 228              	crypto_hashblocks_sha512_m4nofpu_inner:
 229 0000 2DE9F04F 	push {r4,r5,r6,r7,r8,r9,r10,r11,r14}
 230 0004 ADF5907D 	sub.w sp,sp,#288
 231              	
 232              	# qhasm: o0 = input_0
 233              	# asm 1: str <input_0=int32#1,>o0=stack32#1
 234              	# asm 2: str <input_0=r0,>o0=[sp,#0]
 235              	# copy-collector input: str r0,[sp,#0]
 236              	
 237              	# qhasm: o1 = input_1
 238              	# asm 1: str <input_1=int32#2,>o1=stack32#2
 239              	# asm 2: str <input_1=r1,>o1=[sp,#4]
 240              	# copy-collector input: str r1,[sp,#4]
 241              	
 242              	# qhasm: input_1 = input_2 - 128
 243              	# asm 1: sub >input_1=int32#2,<input_2=int32#3,#128
 244              	# asm 2: sub >input_1=r1,<input_2=r2,#128
 245              	# copy-collector output starts
 246 0008 CDE90001 	strd r0,r1,[sp,#0]
 247              	# copy-collector output ends
 248 000c A2F18001 	sub r1,r2,#128
 249              	
 250              	# qhasm: o2 = input_1
 251              	# asm 1: str <input_1=int32#2,>o2=stack32#3
 252              	# asm 2: str <input_1=r1,>o2=[sp,#8]
 253              	# copy-collector input: str r1,[sp,#8]
 254              	
 255              	# qhasm: o3 = input_3
 256              	# asm 1: str <input_3=int32#4,>o3=stack32#4
 257              	# asm 2: str <input_3=r3,>o3=[sp,#12]
 258              	# copy-collector input: str r3,[sp,#12]
 259              	
 260              	# qhasm: hiu0 = mem32[input_0]
 261              	# asm 1: ldr >hiu0=int32#2,[<input_0=int32#1]
 262              	# asm 2: ldr >hiu0=r1,[<input_0=r0]
 263              	# copy-collector input: ldr r1,[r0]
 264              	
 265              	# qhasm: lou0 = mem32[input_0+4]
 266              	# asm 1: ldr >lou0=int32#3,[<input_0=int32#1,#4]
 267              	# asm 2: ldr >lou0=r2,[<input_0=r0,#4]
 268              	# copy-collector input: ldr r2,[r0,#4]
 269              	
 270              	# qhasm: hiu1 = mem32[input_0+8]
 271              	# asm 1: ldr >hiu1=int32#4,[<input_0=int32#1,#8]
 272              	# asm 2: ldr >hiu1=r3,[<input_0=r0,#8]
 273              	# copy-collector input: ldr r3,[r0,#8]
 274              	
 275              	# qhasm: lou1 = mem32[input_0+12]
 276              	# asm 1: ldr >lou1=int32#5,[<input_0=int32#1,#12]
 277              	# asm 2: ldr >lou1=r4,[<input_0=r0,#12]
 278              	# copy-collector input: ldr r4,[r0,#12]
 279              	
 280              	# qhasm: hiu2 = mem32[input_0+16]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 6


 281              	# asm 1: ldr >hiu2=int32#6,[<input_0=int32#1,#16]
 282              	# asm 2: ldr >hiu2=r5,[<input_0=r0,#16]
 283              	# copy-collector input: ldr r5,[r0,#16]
 284              	
 285              	# qhasm: lou2 = mem32[input_0+20]
 286              	# asm 1: ldr >lou2=int32#7,[<input_0=int32#1,#20]
 287              	# asm 2: ldr >lou2=r6,[<input_0=r0,#20]
 288              	# copy-collector input: ldr r6,[r0,#20]
 289              	
 290              	# qhasm: hiu3 = mem32[input_0+24]
 291              	# asm 1: ldr >hiu3=int32#8,[<input_0=int32#1,#24]
 292              	# asm 2: ldr >hiu3=r7,[<input_0=r0,#24]
 293              	# copy-collector input: ldr r7,[r0,#24]
 294              	
 295              	# qhasm: lou3 = mem32[input_0+28]
 296              	# asm 1: ldr >lou3=int32#9,[<input_0=int32#1,#28]
 297              	# asm 2: ldr >lou3=r8,[<input_0=r0,#28]
 298              	# copy-collector input: ldr r8,[r0,#28]
 299              	
 300              	# qhasm: lou0 = lou0[3]lou0[2]lou0[1]lou0[0]
 301              	# asm 1: rev >lou0=int32#3,<lou0=int32#3
 302              	# asm 2: rev >lou0=r2,<lou0=r2
 303              	# copy-collector output starts
 304 0010 CDE90213 	strd r1,r3,[sp,#8]
 305 0014 0168     	ldr r1,[r0]
 306 0016 4268     	ldr r2,[r0,#4]
 307 0018 8368     	ldr r3,[r0,#8]
 308 001a C468     	ldr r4,[r0,#12]
 309 001c 0569     	ldr r5,[r0,#16]
 310 001e 4669     	ldr r6,[r0,#20]
 311 0020 D0F81870 	ldr.w r7,[r0,#24]
 312 0024 D0F81C80 	ldr r8,[r0,#28]
 313              	# copy-collector output ends
 314 0028 12BA     	rev r2,r2
 315              	
 316              	# qhasm: hiu0 = hiu0[3]hiu0[2]hiu0[1]hiu0[0]
 317              	# asm 1: rev >hiu0=int32#2,<hiu0=int32#2
 318              	# asm 2: rev >hiu0=r1,<hiu0=r1
 319 002a 09BA     	rev r1,r1
 320              	
 321              	# qhasm: lou1 = lou1[3]lou1[2]lou1[1]lou1[0]
 322              	# asm 1: rev >lou1=int32#5,<lou1=int32#5
 323              	# asm 2: rev >lou1=r4,<lou1=r4
 324 002c 24BA     	rev r4,r4
 325              	
 326              	# qhasm: hiu1 = hiu1[3]hiu1[2]hiu1[1]hiu1[0]
 327              	# asm 1: rev >hiu1=int32#4,<hiu1=int32#4
 328              	# asm 2: rev >hiu1=r3,<hiu1=r3
 329 002e 1BBA     	rev r3,r3
 330              	
 331              	# qhasm: lou2 = lou2[3]lou2[2]lou2[1]lou2[0]
 332              	# asm 1: rev >lou2=int32#7,<lou2=int32#7
 333              	# asm 2: rev >lou2=r6,<lou2=r6
 334 0030 36BA     	rev r6,r6
 335              	
 336              	# qhasm: hiu2 = hiu2[3]hiu2[2]hiu2[1]hiu2[0]
 337              	# asm 1: rev >hiu2=int32#6,<hiu2=int32#6
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 7


 338              	# asm 2: rev >hiu2=r5,<hiu2=r5
 339 0032 2DBA     	rev r5,r5
 340              	
 341              	# qhasm: lou3 = lou3[3]lou3[2]lou3[1]lou3[0]
 342              	# asm 1: rev >lou3=int32#9,<lou3=int32#9
 343              	# asm 2: rev >lou3=r8,<lou3=r8
 344 0034 98FA88F8 	rev r8,r8
 345              	
 346              	# qhasm: hiu3 = hiu3[3]hiu3[2]hiu3[1]hiu3[0]
 347              	# asm 1: rev >hiu3=int32#8,<hiu3=int32#8
 348              	# asm 2: rev >hiu3=r7,<hiu3=r7
 349 0038 97FA87F7 	rev.w r7,r7
 350              	
 351              	# qhasm: lom0 = lou0
 352              	# asm 1: str <lou0=int32#3,>lom0=stack32#5
 353              	# asm 2: str <lou0=r2,>lom0=[sp,#16]
 354              	# copy-collector input: str r2,[sp,#16]
 355              	
 356              	# qhasm: him0 = hiu0
 357              	# asm 1: str <hiu0=int32#2,>him0=stack32#6
 358              	# asm 2: str <hiu0=r1,>him0=[sp,#20]
 359              	# copy-collector input: str r1,[sp,#20]
 360              	
 361              	# qhasm: lom1 = lou1
 362              	# asm 1: str <lou1=int32#5,>lom1=stack32#7
 363              	# asm 2: str <lou1=r4,>lom1=[sp,#24]
 364              	# copy-collector input: str r4,[sp,#24]
 365              	
 366              	# qhasm: him1 = hiu1
 367              	# asm 1: str <hiu1=int32#4,>him1=stack32#8
 368              	# asm 2: str <hiu1=r3,>him1=[sp,#28]
 369              	# copy-collector input: str r3,[sp,#28]
 370              	
 371              	# qhasm: lom2 = lou2
 372              	# asm 1: str <lou2=int32#7,>lom2=stack32#9
 373              	# asm 2: str <lou2=r6,>lom2=[sp,#32]
 374              	# copy-collector input: str r6,[sp,#32]
 375              	
 376              	# qhasm: him2 = hiu2
 377              	# asm 1: str <hiu2=int32#6,>him2=stack32#10
 378              	# asm 2: str <hiu2=r5,>him2=[sp,#36]
 379              	# copy-collector input: str r5,[sp,#36]
 380              	
 381              	# qhasm: lom3 = lou3
 382              	# asm 1: str <lou3=int32#9,>lom3=stack32#11
 383              	# asm 2: str <lou3=r8,>lom3=[sp,#40]
 384              	# copy-collector input: str r8,[sp,#40]
 385              	
 386              	# qhasm: him3 = hiu3
 387              	# asm 1: str <hiu3=int32#8,>him3=stack32#12
 388              	# asm 2: str <hiu3=r7,>him3=[sp,#44]
 389              	# copy-collector input: str r7,[sp,#44]
 390              	
 391              	# qhasm: lod0 = lou0
 392              	# asm 1: str <lou0=int32#3,>lod0=stack32#13
 393              	# asm 2: str <lou0=r2,>lod0=[sp,#48]
 394              	# copy-collector input: str r2,[sp,#48]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 8


 395              	
 396              	# qhasm: hid0 = hiu0
 397              	# asm 1: str <hiu0=int32#2,>hid0=stack32#14
 398              	# asm 2: str <hiu0=r1,>hid0=[sp,#52]
 399              	# copy-collector input: str r1,[sp,#52]
 400              	
 401              	# qhasm: lod1 = lou1
 402              	# asm 1: str <lou1=int32#5,>lod1=stack32#15
 403              	# asm 2: str <lou1=r4,>lod1=[sp,#56]
 404              	# copy-collector input: str r4,[sp,#56]
 405              	
 406              	# qhasm: hid1 = hiu1
 407              	# asm 1: str <hiu1=int32#4,>hid1=stack32#16
 408              	# asm 2: str <hiu1=r3,>hid1=[sp,#60]
 409              	# copy-collector input: str r3,[sp,#60]
 410              	
 411              	# qhasm: lod2 = lou2
 412              	# asm 1: str <lou2=int32#7,>lod2=stack32#17
 413              	# asm 2: str <lou2=r6,>lod2=[sp,#64]
 414              	# copy-collector input: str r6,[sp,#64]
 415              	
 416              	# qhasm: hid2 = hiu2
 417              	# asm 1: str <hiu2=int32#6,>hid2=stack32#18
 418              	# asm 2: str <hiu2=r5,>hid2=[sp,#68]
 419              	# copy-collector input: str r5,[sp,#68]
 420              	
 421              	# qhasm: lod3 = lou3
 422              	# asm 1: str <lou3=int32#9,>lod3=stack32#19
 423              	# asm 2: str <lou3=r8,>lod3=[sp,#72]
 424              	# copy-collector input: str r8,[sp,#72]
 425              	
 426              	# qhasm: hid3 = hiu3
 427              	# asm 1: str <hiu3=int32#8,>hid3=stack32#20
 428              	# asm 2: str <hiu3=r7,>hid3=[sp,#76]
 429              	# copy-collector input: str r7,[sp,#76]
 430              	
 431              	# qhasm: hiu0 = mem32[input_0+32]
 432              	# asm 1: ldr >hiu0=int32#2,[<input_0=int32#1,#32]
 433              	# asm 2: ldr >hiu0=r1,[<input_0=r0,#32]
 434              	# copy-collector input: ldr r1,[r0,#32]
 435              	
 436              	# qhasm: lou0 = mem32[input_0+36]
 437              	# asm 1: ldr >lou0=int32#3,[<input_0=int32#1,#36]
 438              	# asm 2: ldr >lou0=r2,[<input_0=r0,#36]
 439              	# copy-collector input: ldr r2,[r0,#36]
 440              	
 441              	# qhasm: hiu1 = mem32[input_0+40]
 442              	# asm 1: ldr >hiu1=int32#4,[<input_0=int32#1,#40]
 443              	# asm 2: ldr >hiu1=r3,[<input_0=r0,#40]
 444              	# copy-collector input: ldr r3,[r0,#40]
 445              	
 446              	# qhasm: lou1 = mem32[input_0+44]
 447              	# asm 1: ldr >lou1=int32#5,[<input_0=int32#1,#44]
 448              	# asm 2: ldr >lou1=r4,[<input_0=r0,#44]
 449              	# copy-collector input: ldr r4,[r0,#44]
 450              	
 451              	# qhasm: hiu2 = mem32[input_0+48]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 9


 452              	# asm 1: ldr >hiu2=int32#6,[<input_0=int32#1,#48]
 453              	# asm 2: ldr >hiu2=r5,[<input_0=r0,#48]
 454              	# copy-collector input: ldr r5,[r0,#48]
 455              	
 456              	# qhasm: lou2 = mem32[input_0+52]
 457              	# asm 1: ldr >lou2=int32#7,[<input_0=int32#1,#52]
 458              	# asm 2: ldr >lou2=r6,[<input_0=r0,#52]
 459              	# copy-collector input: ldr r6,[r0,#52]
 460              	
 461              	# qhasm: hiu3 = mem32[input_0+56]
 462              	# asm 1: ldr >hiu3=int32#8,[<input_0=int32#1,#56]
 463              	# asm 2: ldr >hiu3=r7,[<input_0=r0,#56]
 464              	# copy-collector input: ldr r7,[r0,#56]
 465              	
 466              	# qhasm: lou3 = mem32[input_0+60]
 467              	# asm 1: ldr >lou3=int32#1,[<input_0=int32#1,#60]
 468              	# asm 2: ldr >lou3=r0,[<input_0=r0,#60]
 469              	# copy-collector input: ldr r0,[r0,#60]
 470              	
 471              	# qhasm: lou0 = lou0[3]lou0[2]lou0[1]lou0[0]
 472              	# asm 1: rev >lou0=int32#3,<lou0=int32#3
 473              	# asm 2: rev >lou0=r2,<lou0=r2
 474              	# copy-collector output starts
 475 003c CDE90421 	strd r2,r1,[sp,#16]
 476 0040 CDE90643 	strd r4,r3,[sp,#24]
 477 0044 CDE90865 	strd r6,r5,[sp,#32]
 478 0048 CDE90A87 	strd r8,r7,[sp,#40]
 479 004c CDE90C21 	strd r2,r1,[sp,#48]
 480 0050 CDE90E43 	strd r4,r3,[sp,#56]
 481 0054 CDE91065 	strd r6,r5,[sp,#64]
 482 0058 CDE91287 	strd r8,r7,[sp,#72]
 483 005c 016A     	ldr r1,[r0,#32]
 484 005e 426A     	ldr r2,[r0,#36]
 485 0060 836A     	ldr r3,[r0,#40]
 486 0062 C46A     	ldr r4,[r0,#44]
 487 0064 056B     	ldr r5,[r0,#48]
 488 0066 466B     	ldr r6,[r0,#52]
 489 0068 876B     	ldr r7,[r0,#56]
 490 006a C06B     	ldr r0,[r0,#60]
 491              	# copy-collector output ends
 492 006c 12BA     	rev r2,r2
 493              	
 494              	# qhasm: hiu0 = hiu0[3]hiu0[2]hiu0[1]hiu0[0]
 495              	# asm 1: rev >hiu0=int32#2,<hiu0=int32#2
 496              	# asm 2: rev >hiu0=r1,<hiu0=r1
 497 006e 09BA     	rev r1,r1
 498              	
 499              	# qhasm: lou1 = lou1[3]lou1[2]lou1[1]lou1[0]
 500              	# asm 1: rev >lou1=int32#5,<lou1=int32#5
 501              	# asm 2: rev >lou1=r4,<lou1=r4
 502 0070 24BA     	rev r4,r4
 503              	
 504              	# qhasm: hiu1 = hiu1[3]hiu1[2]hiu1[1]hiu1[0]
 505              	# asm 1: rev >hiu1=int32#4,<hiu1=int32#4
 506              	# asm 2: rev >hiu1=r3,<hiu1=r3
 507 0072 1BBA     	rev r3,r3
 508              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 10


 509              	# qhasm: lou2 = lou2[3]lou2[2]lou2[1]lou2[0]
 510              	# asm 1: rev >lou2=int32#7,<lou2=int32#7
 511              	# asm 2: rev >lou2=r6,<lou2=r6
 512 0074 36BA     	rev r6,r6
 513              	
 514              	# qhasm: hiu2 = hiu2[3]hiu2[2]hiu2[1]hiu2[0]
 515              	# asm 1: rev >hiu2=int32#6,<hiu2=int32#6
 516              	# asm 2: rev >hiu2=r5,<hiu2=r5
 517 0076 2DBA     	rev r5,r5
 518              	
 519              	# qhasm: lou3 = lou3[3]lou3[2]lou3[1]lou3[0]
 520              	# asm 1: rev >lou3=int32#1,<lou3=int32#1
 521              	# asm 2: rev >lou3=r0,<lou3=r0
 522 0078 00BA     	rev r0,r0
 523              	
 524              	# qhasm: hiu3 = hiu3[3]hiu3[2]hiu3[1]hiu3[0]
 525              	# asm 1: rev >hiu3=int32#8,<hiu3=int32#8
 526              	# asm 2: rev >hiu3=r7,<hiu3=r7
 527 007a 3FBA     	rev r7,r7
 528              	
 529              	# qhasm: lom4 = lou0
 530              	# asm 1: str <lou0=int32#3,>lom4=stack32#21
 531              	# asm 2: str <lou0=r2,>lom4=[sp,#80]
 532              	# copy-collector input: str r2,[sp,#80]
 533              	
 534              	# qhasm: him4 = hiu0
 535              	# asm 1: str <hiu0=int32#2,>him4=stack32#22
 536              	# asm 2: str <hiu0=r1,>him4=[sp,#84]
 537              	# copy-collector input: str r1,[sp,#84]
 538              	
 539              	# qhasm: lom5 = lou1
 540              	# asm 1: str <lou1=int32#5,>lom5=stack32#23
 541              	# asm 2: str <lou1=r4,>lom5=[sp,#88]
 542              	# copy-collector input: str r4,[sp,#88]
 543              	
 544              	# qhasm: him5 = hiu1
 545              	# asm 1: str <hiu1=int32#4,>him5=stack32#24
 546              	# asm 2: str <hiu1=r3,>him5=[sp,#92]
 547              	# copy-collector input: str r3,[sp,#92]
 548              	
 549              	# qhasm: lom6 = lou2
 550              	# asm 1: str <lou2=int32#7,>lom6=stack32#25
 551              	# asm 2: str <lou2=r6,>lom6=[sp,#96]
 552              	# copy-collector input: str r6,[sp,#96]
 553              	
 554              	# qhasm: him6 = hiu2
 555              	# asm 1: str <hiu2=int32#6,>him6=stack32#26
 556              	# asm 2: str <hiu2=r5,>him6=[sp,#100]
 557              	# copy-collector input: str r5,[sp,#100]
 558              	
 559              	# qhasm: lom7 = lou3
 560              	# asm 1: str <lou3=int32#1,>lom7=stack32#27
 561              	# asm 2: str <lou3=r0,>lom7=[sp,#104]
 562              	# copy-collector input: str r0,[sp,#104]
 563              	
 564              	# qhasm: him7 = hiu3
 565              	# asm 1: str <hiu3=int32#8,>him7=stack32#28
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 11


 566              	# asm 2: str <hiu3=r7,>him7=[sp,#108]
 567              	# copy-collector input: str r7,[sp,#108]
 568              	
 569              	# qhasm: lod4 = lou0
 570              	# asm 1: str <lou0=int32#3,>lod4=stack32#29
 571              	# asm 2: str <lou0=r2,>lod4=[sp,#112]
 572              	# copy-collector input: str r2,[sp,#112]
 573              	
 574              	# qhasm: hid4 = hiu0
 575              	# asm 1: str <hiu0=int32#2,>hid4=stack32#30
 576              	# asm 2: str <hiu0=r1,>hid4=[sp,#116]
 577              	# copy-collector input: str r1,[sp,#116]
 578              	
 579              	# qhasm: lod5 = lou1
 580              	# asm 1: str <lou1=int32#5,>lod5=stack32#31
 581              	# asm 2: str <lou1=r4,>lod5=[sp,#120]
 582              	# copy-collector input: str r4,[sp,#120]
 583              	
 584              	# qhasm: hid5 = hiu1
 585              	# asm 1: str <hiu1=int32#4,>hid5=stack32#32
 586              	# asm 2: str <hiu1=r3,>hid5=[sp,#124]
 587              	# copy-collector input: str r3,[sp,#124]
 588              	
 589              	# qhasm: lod6 = lou2
 590              	# asm 1: str <lou2=int32#7,>lod6=stack32#33
 591              	# asm 2: str <lou2=r6,>lod6=[sp,#128]
 592              	# copy-collector input: str r6,[sp,#128]
 593              	
 594              	# qhasm: hid6 = hiu2
 595              	# asm 1: str <hiu2=int32#6,>hid6=stack32#34
 596              	# asm 2: str <hiu2=r5,>hid6=[sp,#132]
 597              	# copy-collector input: str r5,[sp,#132]
 598              	
 599              	# qhasm: lod7 = lou3
 600              	# asm 1: str <lou3=int32#1,>lod7=stack32#35
 601              	# asm 2: str <lou3=r0,>lod7=[sp,#136]
 602              	# copy-collector input: str r0,[sp,#136]
 603              	
 604              	# qhasm: hid7 = hiu3
 605              	# asm 1: str <hiu3=int32#8,>hid7=stack32#36
 606              	# asm 2: str <hiu3=r7,>hid7=[sp,#140]
 607              	# copy-collector input: str r7,[sp,#140]
 608              	
 609              	# qhasm: mainloop:
 610              	# copy-collector output starts
 611 007c CDE91421 	strd r2,r1,[sp,#80]
 612 0080 CDE91643 	strd r4,r3,[sp,#88]
 613 0084 CDE91865 	strd r6,r5,[sp,#96]
 614 0088 CDE91A07 	strd r0,r7,[sp,#104]
 615 008c CDE91C21 	strd r2,r1,[sp,#112]
 616 0090 CDE91E43 	strd r4,r3,[sp,#120]
 617 0094 CDE92065 	strd r6,r5,[sp,#128]
 618 0098 CDE92207 	strd r0,r7,[sp,#136]
 619              	# copy-collector output ends
 620              	._mainloop:
 621              	
 622              	# qhasm: input_0 = o1
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 12


 623              	# asm 1: ldr >input_0=int32#1,<o1=stack32#2
 624              	# asm 2: ldr >input_0=r0,<o1=[sp,#4]
 625              	# copy-collector input: ldr r0,[sp,#4]
 626              	
 627              	# qhasm: hiu0 = mem32[input_0]; input_0 += 4
 628              	# asm 1: ldr >hiu0=int32#2,[<input_0=int32#1],#4
 629              	# asm 2: ldr >hiu0=r1,[<input_0=r0],#4
 630              	# copy-collector input: ldr r1,[r0],#4
 631              	
 632              	# qhasm: lou0 = mem32[input_0]; input_0 += 4
 633              	# asm 1: ldr >lou0=int32#3,[<input_0=int32#1],#4
 634              	# asm 2: ldr >lou0=r2,[<input_0=r0],#4
 635              	# copy-collector input: ldr r2,[r0],#4
 636              	
 637              	# qhasm: hiu1 = mem32[input_0]; input_0 += 4
 638              	# asm 1: ldr >hiu1=int32#4,[<input_0=int32#1],#4
 639              	# asm 2: ldr >hiu1=r3,[<input_0=r0],#4
 640              	# copy-collector input: ldr r3,[r0],#4
 641              	
 642              	# qhasm: lou1 = mem32[input_0]; input_0 += 4
 643              	# asm 1: ldr >lou1=int32#5,[<input_0=int32#1],#4
 644              	# asm 2: ldr >lou1=r4,[<input_0=r0],#4
 645              	# copy-collector input: ldr r4,[r0],#4
 646              	
 647              	# qhasm: hiu2 = mem32[input_0]; input_0 += 4
 648              	# asm 1: ldr >hiu2=int32#6,[<input_0=int32#1],#4
 649              	# asm 2: ldr >hiu2=r5,[<input_0=r0],#4
 650              	# copy-collector input: ldr r5,[r0],#4
 651              	
 652              	# qhasm: lou2 = mem32[input_0]; input_0 += 4
 653              	# asm 1: ldr >lou2=int32#7,[<input_0=int32#1],#4
 654              	# asm 2: ldr >lou2=r6,[<input_0=r0],#4
 655              	# copy-collector input: ldr r6,[r0],#4
 656              	
 657              	# qhasm: hiu3 = mem32[input_0]; input_0 += 4
 658              	# asm 1: ldr >hiu3=int32#8,[<input_0=int32#1],#4
 659              	# asm 2: ldr >hiu3=r7,[<input_0=r0],#4
 660              	# copy-collector input: ldr r7,[r0],#4
 661              	
 662              	# qhasm: lou3 = mem32[input_0]; input_0 += 4
 663              	# asm 1: ldr >lou3=int32#9,[<input_0=int32#1],#4
 664              	# asm 2: ldr >lou3=r8,[<input_0=r0],#4
 665              	# copy-collector input: ldr r8,[r0],#4
 666              	
 667              	# qhasm: lou0 = lou0[3]lou0[2]lou0[1]lou0[0]
 668              	# asm 1: rev >lou0=int32#3,<lou0=int32#3
 669              	# asm 2: rev >lou0=r2,<lou0=r2
 670              	# copy-collector output starts
 671 009c DDF80400 	ldr.w r0,[sp,#4]
 672 00a0 50F8041B 	ldr r1,[r0],#4
 673 00a4 50F8042B 	ldr r2,[r0],#4
 674 00a8 50F8043B 	ldr r3,[r0],#4
 675 00ac 50F8044B 	ldr r4,[r0],#4
 676 00b0 50F8045B 	ldr r5,[r0],#4
 677 00b4 50F8046B 	ldr r6,[r0],#4
 678 00b8 50F8047B 	ldr r7,[r0],#4
 679 00bc 50F8048B 	ldr r8,[r0],#4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 13


 680              	# copy-collector output ends
 681 00c0 12BA     	rev r2,r2
 682              	
 683              	# qhasm: hiu0 = hiu0[3]hiu0[2]hiu0[1]hiu0[0]
 684              	# asm 1: rev >hiu0=int32#2,<hiu0=int32#2
 685              	# asm 2: rev >hiu0=r1,<hiu0=r1
 686 00c2 09BA     	rev r1,r1
 687              	
 688              	# qhasm: lou1 = lou1[3]lou1[2]lou1[1]lou1[0]
 689              	# asm 1: rev >lou1=int32#5,<lou1=int32#5
 690              	# asm 2: rev >lou1=r4,<lou1=r4
 691 00c4 24BA     	rev r4,r4
 692              	
 693              	# qhasm: hiu1 = hiu1[3]hiu1[2]hiu1[1]hiu1[0]
 694              	# asm 1: rev >hiu1=int32#4,<hiu1=int32#4
 695              	# asm 2: rev >hiu1=r3,<hiu1=r3
 696 00c6 1BBA     	rev r3,r3
 697              	
 698              	# qhasm: lou2 = lou2[3]lou2[2]lou2[1]lou2[0]
 699              	# asm 1: rev >lou2=int32#7,<lou2=int32#7
 700              	# asm 2: rev >lou2=r6,<lou2=r6
 701 00c8 36BA     	rev r6,r6
 702              	
 703              	# qhasm: hiu2 = hiu2[3]hiu2[2]hiu2[1]hiu2[0]
 704              	# asm 1: rev >hiu2=int32#6,<hiu2=int32#6
 705              	# asm 2: rev >hiu2=r5,<hiu2=r5
 706 00ca 2DBA     	rev r5,r5
 707              	
 708              	# qhasm: lou3 = lou3[3]lou3[2]lou3[1]lou3[0]
 709              	# asm 1: rev >lou3=int32#9,<lou3=int32#9
 710              	# asm 2: rev >lou3=r8,<lou3=r8
 711 00cc 98FA88F8 	rev r8,r8
 712              	
 713              	# qhasm: hiu3 = hiu3[3]hiu3[2]hiu3[1]hiu3[0]
 714              	# asm 1: rev >hiu3=int32#8,<hiu3=int32#8
 715              	# asm 2: rev >hiu3=r7,<hiu3=r7
 716 00d0 97FA87F7 	rev.w r7,r7
 717              	
 718              	# qhasm: lod8 = lou0
 719              	# asm 1: str <lou0=int32#3,>lod8=stack32#37
 720              	# asm 2: str <lou0=r2,>lod8=[sp,#144]
 721              	# copy-collector input: str r2,[sp,#144]
 722              	
 723              	# qhasm: hid8 = hiu0
 724              	# asm 1: str <hiu0=int32#2,>hid8=stack32#38
 725              	# asm 2: str <hiu0=r1,>hid8=[sp,#148]
 726              	# copy-collector input: str r1,[sp,#148]
 727              	
 728              	# qhasm: lod9 = lou1
 729              	# asm 1: str <lou1=int32#5,>lod9=stack32#39
 730              	# asm 2: str <lou1=r4,>lod9=[sp,#152]
 731              	# copy-collector input: str r4,[sp,#152]
 732              	
 733              	# qhasm: hid9 = hiu1
 734              	# asm 1: str <hiu1=int32#4,>hid9=stack32#40
 735              	# asm 2: str <hiu1=r3,>hid9=[sp,#156]
 736              	# copy-collector input: str r3,[sp,#156]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 14


 737              	
 738              	# qhasm: lod10 = lou2
 739              	# asm 1: str <lou2=int32#7,>lod10=stack32#41
 740              	# asm 2: str <lou2=r6,>lod10=[sp,#160]
 741              	# copy-collector input: str r6,[sp,#160]
 742              	
 743              	# qhasm: hid10 = hiu2
 744              	# asm 1: str <hiu2=int32#6,>hid10=stack32#42
 745              	# asm 2: str <hiu2=r5,>hid10=[sp,#164]
 746              	# copy-collector input: str r5,[sp,#164]
 747              	
 748              	# qhasm: lod11 = lou3
 749              	# asm 1: str <lou3=int32#9,>lod11=stack32#43
 750              	# asm 2: str <lou3=r8,>lod11=[sp,#168]
 751              	# copy-collector input: str r8,[sp,#168]
 752              	
 753              	# qhasm: hid11 = hiu3
 754              	# asm 1: str <hiu3=int32#8,>hid11=stack32#44
 755              	# asm 2: str <hiu3=r7,>hid11=[sp,#172]
 756              	# copy-collector input: str r7,[sp,#172]
 757              	
 758              	# qhasm: hiu0 = mem32[input_0]; input_0 += 4
 759              	# asm 1: ldr >hiu0=int32#2,[<input_0=int32#1],#4
 760              	# asm 2: ldr >hiu0=r1,[<input_0=r0],#4
 761              	# copy-collector input: ldr r1,[r0],#4
 762              	
 763              	# qhasm: lou0 = mem32[input_0]; input_0 += 4
 764              	# asm 1: ldr >lou0=int32#3,[<input_0=int32#1],#4
 765              	# asm 2: ldr >lou0=r2,[<input_0=r0],#4
 766              	# copy-collector input: ldr r2,[r0],#4
 767              	
 768              	# qhasm: hiu1 = mem32[input_0]; input_0 += 4
 769              	# asm 1: ldr >hiu1=int32#4,[<input_0=int32#1],#4
 770              	# asm 2: ldr >hiu1=r3,[<input_0=r0],#4
 771              	# copy-collector input: ldr r3,[r0],#4
 772              	
 773              	# qhasm: lou1 = mem32[input_0]; input_0 += 4
 774              	# asm 1: ldr >lou1=int32#5,[<input_0=int32#1],#4
 775              	# asm 2: ldr >lou1=r4,[<input_0=r0],#4
 776              	# copy-collector input: ldr r4,[r0],#4
 777              	
 778              	# qhasm: hiu2 = mem32[input_0]; input_0 += 4
 779              	# asm 1: ldr >hiu2=int32#6,[<input_0=int32#1],#4
 780              	# asm 2: ldr >hiu2=r5,[<input_0=r0],#4
 781              	# copy-collector input: ldr r5,[r0],#4
 782              	
 783              	# qhasm: lou2 = mem32[input_0]; input_0 += 4
 784              	# asm 1: ldr >lou2=int32#7,[<input_0=int32#1],#4
 785              	# asm 2: ldr >lou2=r6,[<input_0=r0],#4
 786              	# copy-collector input: ldr r6,[r0],#4
 787              	
 788              	# qhasm: hiu3 = mem32[input_0]; input_0 += 4
 789              	# asm 1: ldr >hiu3=int32#8,[<input_0=int32#1],#4
 790              	# asm 2: ldr >hiu3=r7,[<input_0=r0],#4
 791              	# copy-collector input: ldr r7,[r0],#4
 792              	
 793              	# qhasm: lou3 = mem32[input_0]; input_0 += 4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 15


 794              	# asm 1: ldr >lou3=int32#9,[<input_0=int32#1],#4
 795              	# asm 2: ldr >lou3=r8,[<input_0=r0],#4
 796              	# copy-collector input: ldr r8,[r0],#4
 797              	
 798              	# qhasm: lou0 = lou0[3]lou0[2]lou0[1]lou0[0]
 799              	# asm 1: rev >lou0=int32#3,<lou0=int32#3
 800              	# asm 2: rev >lou0=r2,<lou0=r2
 801              	# copy-collector output starts
 802 00d4 CDE92421 	strd r2,r1,[sp,#144]
 803 00d8 CDE92643 	strd r4,r3,[sp,#152]
 804 00dc CDE92865 	strd r6,r5,[sp,#160]
 805 00e0 CDE92A87 	strd r8,r7,[sp,#168]
 806 00e4 50F8041B 	ldr r1,[r0],#4
 807 00e8 50F8042B 	ldr r2,[r0],#4
 808 00ec 50F8043B 	ldr r3,[r0],#4
 809 00f0 50F8044B 	ldr r4,[r0],#4
 810 00f4 50F8045B 	ldr r5,[r0],#4
 811 00f8 50F8046B 	ldr r6,[r0],#4
 812 00fc 50F8047B 	ldr r7,[r0],#4
 813 0100 50F8048B 	ldr r8,[r0],#4
 814              	# copy-collector output ends
 815 0104 12BA     	rev r2,r2
 816              	
 817              	# qhasm: hiu0 = hiu0[3]hiu0[2]hiu0[1]hiu0[0]
 818              	# asm 1: rev >hiu0=int32#2,<hiu0=int32#2
 819              	# asm 2: rev >hiu0=r1,<hiu0=r1
 820 0106 09BA     	rev r1,r1
 821              	
 822              	# qhasm: lou1 = lou1[3]lou1[2]lou1[1]lou1[0]
 823              	# asm 1: rev >lou1=int32#5,<lou1=int32#5
 824              	# asm 2: rev >lou1=r4,<lou1=r4
 825 0108 24BA     	rev r4,r4
 826              	
 827              	# qhasm: hiu1 = hiu1[3]hiu1[2]hiu1[1]hiu1[0]
 828              	# asm 1: rev >hiu1=int32#4,<hiu1=int32#4
 829              	# asm 2: rev >hiu1=r3,<hiu1=r3
 830 010a 1BBA     	rev r3,r3
 831              	
 832              	# qhasm: lou2 = lou2[3]lou2[2]lou2[1]lou2[0]
 833              	# asm 1: rev >lou2=int32#7,<lou2=int32#7
 834              	# asm 2: rev >lou2=r6,<lou2=r6
 835 010c 36BA     	rev r6,r6
 836              	
 837              	# qhasm: hiu2 = hiu2[3]hiu2[2]hiu2[1]hiu2[0]
 838              	# asm 1: rev >hiu2=int32#6,<hiu2=int32#6
 839              	# asm 2: rev >hiu2=r5,<hiu2=r5
 840 010e 2DBA     	rev r5,r5
 841              	
 842              	# qhasm: lou3 = lou3[3]lou3[2]lou3[1]lou3[0]
 843              	# asm 1: rev >lou3=int32#9,<lou3=int32#9
 844              	# asm 2: rev >lou3=r8,<lou3=r8
 845 0110 98FA88F8 	rev r8,r8
 846              	
 847              	# qhasm: hiu3 = hiu3[3]hiu3[2]hiu3[1]hiu3[0]
 848              	# asm 1: rev >hiu3=int32#8,<hiu3=int32#8
 849              	# asm 2: rev >hiu3=r7,<hiu3=r7
 850 0114 97FA87F7 	rev.w r7,r7
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 16


 851              	
 852              	# qhasm: lod12 = lou0
 853              	# asm 1: str <lou0=int32#3,>lod12=stack32#45
 854              	# asm 2: str <lou0=r2,>lod12=[sp,#176]
 855              	# copy-collector input: str r2,[sp,#176]
 856              	
 857              	# qhasm: hid12 = hiu0
 858              	# asm 1: str <hiu0=int32#2,>hid12=stack32#46
 859              	# asm 2: str <hiu0=r1,>hid12=[sp,#180]
 860              	# copy-collector input: str r1,[sp,#180]
 861              	
 862              	# qhasm: lod13 = lou1
 863              	# asm 1: str <lou1=int32#5,>lod13=stack32#47
 864              	# asm 2: str <lou1=r4,>lod13=[sp,#184]
 865              	# copy-collector input: str r4,[sp,#184]
 866              	
 867              	# qhasm: hid13 = hiu1
 868              	# asm 1: str <hiu1=int32#4,>hid13=stack32#48
 869              	# asm 2: str <hiu1=r3,>hid13=[sp,#188]
 870              	# copy-collector input: str r3,[sp,#188]
 871              	
 872              	# qhasm: lod14 = lou2
 873              	# asm 1: str <lou2=int32#7,>lod14=stack32#49
 874              	# asm 2: str <lou2=r6,>lod14=[sp,#192]
 875              	# copy-collector input: str r6,[sp,#192]
 876              	
 877              	# qhasm: hid14 = hiu2
 878              	# asm 1: str <hiu2=int32#6,>hid14=stack32#50
 879              	# asm 2: str <hiu2=r5,>hid14=[sp,#196]
 880              	# copy-collector input: str r5,[sp,#196]
 881              	
 882              	# qhasm: lod15 = lou3
 883              	# asm 1: str <lou3=int32#9,>lod15=stack32#51
 884              	# asm 2: str <lou3=r8,>lod15=[sp,#200]
 885              	# copy-collector input: str r8,[sp,#200]
 886              	
 887              	# qhasm: hid15 = hiu3
 888              	# asm 1: str <hiu3=int32#8,>hid15=stack32#52
 889              	# asm 2: str <hiu3=r7,>hid15=[sp,#204]
 890              	# copy-collector input: str r7,[sp,#204]
 891              	
 892              	# qhasm: hiu0 = mem32[input_0]; input_0 += 4
 893              	# asm 1: ldr >hiu0=int32#2,[<input_0=int32#1],#4
 894              	# asm 2: ldr >hiu0=r1,[<input_0=r0],#4
 895              	# copy-collector input: ldr r1,[r0],#4
 896              	
 897              	# qhasm: lou0 = mem32[input_0]; input_0 += 4
 898              	# asm 1: ldr >lou0=int32#3,[<input_0=int32#1],#4
 899              	# asm 2: ldr >lou0=r2,[<input_0=r0],#4
 900              	# copy-collector input: ldr r2,[r0],#4
 901              	
 902              	# qhasm: hiu1 = mem32[input_0]; input_0 += 4
 903              	# asm 1: ldr >hiu1=int32#4,[<input_0=int32#1],#4
 904              	# asm 2: ldr >hiu1=r3,[<input_0=r0],#4
 905              	# copy-collector input: ldr r3,[r0],#4
 906              	
 907              	# qhasm: lou1 = mem32[input_0]; input_0 += 4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 17


 908              	# asm 1: ldr >lou1=int32#5,[<input_0=int32#1],#4
 909              	# asm 2: ldr >lou1=r4,[<input_0=r0],#4
 910              	# copy-collector input: ldr r4,[r0],#4
 911              	
 912              	# qhasm: hiu2 = mem32[input_0]; input_0 += 4
 913              	# asm 1: ldr >hiu2=int32#6,[<input_0=int32#1],#4
 914              	# asm 2: ldr >hiu2=r5,[<input_0=r0],#4
 915              	# copy-collector input: ldr r5,[r0],#4
 916              	
 917              	# qhasm: lou2 = mem32[input_0]; input_0 += 4
 918              	# asm 1: ldr >lou2=int32#7,[<input_0=int32#1],#4
 919              	# asm 2: ldr >lou2=r6,[<input_0=r0],#4
 920              	# copy-collector input: ldr r6,[r0],#4
 921              	
 922              	# qhasm: hiu3 = mem32[input_0]; input_0 += 4
 923              	# asm 1: ldr >hiu3=int32#8,[<input_0=int32#1],#4
 924              	# asm 2: ldr >hiu3=r7,[<input_0=r0],#4
 925              	# copy-collector input: ldr r7,[r0],#4
 926              	
 927              	# qhasm: lou3 = mem32[input_0]; input_0 += 4
 928              	# asm 1: ldr >lou3=int32#9,[<input_0=int32#1],#4
 929              	# asm 2: ldr >lou3=r8,[<input_0=r0],#4
 930              	# copy-collector input: ldr r8,[r0],#4
 931              	
 932              	# qhasm: lou0 = lou0[3]lou0[2]lou0[1]lou0[0]
 933              	# asm 1: rev >lou0=int32#3,<lou0=int32#3
 934              	# asm 2: rev >lou0=r2,<lou0=r2
 935              	# copy-collector output starts
 936 0118 CDE92C21 	strd r2,r1,[sp,#176]
 937 011c CDE92E43 	strd r4,r3,[sp,#184]
 938 0120 CDE93065 	strd r6,r5,[sp,#192]
 939 0124 CDE93287 	strd r8,r7,[sp,#200]
 940 0128 50F8041B 	ldr r1,[r0],#4
 941 012c 50F8042B 	ldr r2,[r0],#4
 942 0130 50F8043B 	ldr r3,[r0],#4
 943 0134 50F8044B 	ldr r4,[r0],#4
 944 0138 50F8045B 	ldr r5,[r0],#4
 945 013c 50F8046B 	ldr r6,[r0],#4
 946 0140 50F8047B 	ldr r7,[r0],#4
 947 0144 50F8048B 	ldr r8,[r0],#4
 948              	# copy-collector output ends
 949 0148 12BA     	rev r2,r2
 950              	
 951              	# qhasm: hiu0 = hiu0[3]hiu0[2]hiu0[1]hiu0[0]
 952              	# asm 1: rev >hiu0=int32#2,<hiu0=int32#2
 953              	# asm 2: rev >hiu0=r1,<hiu0=r1
 954 014a 09BA     	rev r1,r1
 955              	
 956              	# qhasm: lou1 = lou1[3]lou1[2]lou1[1]lou1[0]
 957              	# asm 1: rev >lou1=int32#5,<lou1=int32#5
 958              	# asm 2: rev >lou1=r4,<lou1=r4
 959 014c 24BA     	rev r4,r4
 960              	
 961              	# qhasm: hiu1 = hiu1[3]hiu1[2]hiu1[1]hiu1[0]
 962              	# asm 1: rev >hiu1=int32#4,<hiu1=int32#4
 963              	# asm 2: rev >hiu1=r3,<hiu1=r3
 964 014e 1BBA     	rev r3,r3
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 18


 965              	
 966              	# qhasm: lou2 = lou2[3]lou2[2]lou2[1]lou2[0]
 967              	# asm 1: rev >lou2=int32#7,<lou2=int32#7
 968              	# asm 2: rev >lou2=r6,<lou2=r6
 969 0150 36BA     	rev r6,r6
 970              	
 971              	# qhasm: hiu2 = hiu2[3]hiu2[2]hiu2[1]hiu2[0]
 972              	# asm 1: rev >hiu2=int32#6,<hiu2=int32#6
 973              	# asm 2: rev >hiu2=r5,<hiu2=r5
 974 0152 2DBA     	rev r5,r5
 975              	
 976              	# qhasm: lou3 = lou3[3]lou3[2]lou3[1]lou3[0]
 977              	# asm 1: rev >lou3=int32#9,<lou3=int32#9
 978              	# asm 2: rev >lou3=r8,<lou3=r8
 979 0154 98FA88F8 	rev r8,r8
 980              	
 981              	# qhasm: hiu3 = hiu3[3]hiu3[2]hiu3[1]hiu3[0]
 982              	# asm 1: rev >hiu3=int32#8,<hiu3=int32#8
 983              	# asm 2: rev >hiu3=r7,<hiu3=r7
 984 0158 97FA87F7 	rev.w r7,r7
 985              	
 986              	# qhasm: lom8 = lou0
 987              	# asm 1: str <lou0=int32#3,>lom8=stack32#53
 988              	# asm 2: str <lou0=r2,>lom8=[sp,#208]
 989              	# copy-collector input: str r2,[sp,#208]
 990              	
 991              	# qhasm: him8 = hiu0
 992              	# asm 1: str <hiu0=int32#2,>him8=stack32#54
 993              	# asm 2: str <hiu0=r1,>him8=[sp,#212]
 994              	# copy-collector input: str r1,[sp,#212]
 995              	
 996              	# qhasm: lom9 = lou1
 997              	# asm 1: str <lou1=int32#5,>lom9=stack32#55
 998              	# asm 2: str <lou1=r4,>lom9=[sp,#216]
 999              	# copy-collector input: str r4,[sp,#216]
 1000              	
 1001              	# qhasm: him9 = hiu1
 1002              	# asm 1: str <hiu1=int32#4,>him9=stack32#56
 1003              	# asm 2: str <hiu1=r3,>him9=[sp,#220]
 1004              	# copy-collector input: str r3,[sp,#220]
 1005              	
 1006              	# qhasm: lom10 = lou2
 1007              	# asm 1: str <lou2=int32#7,>lom10=stack32#57
 1008              	# asm 2: str <lou2=r6,>lom10=[sp,#224]
 1009              	# copy-collector input: str r6,[sp,#224]
 1010              	
 1011              	# qhasm: him10 = hiu2
 1012              	# asm 1: str <hiu2=int32#6,>him10=stack32#58
 1013              	# asm 2: str <hiu2=r5,>him10=[sp,#228]
 1014              	# copy-collector input: str r5,[sp,#228]
 1015              	
 1016              	# qhasm: lom11 = lou3
 1017              	# asm 1: str <lou3=int32#9,>lom11=stack32#59
 1018              	# asm 2: str <lou3=r8,>lom11=[sp,#232]
 1019              	# copy-collector input: str r8,[sp,#232]
 1020              	
 1021              	# qhasm: him11 = hiu3
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 19


 1022              	# asm 1: str <hiu3=int32#8,>him11=stack32#60
 1023              	# asm 2: str <hiu3=r7,>him11=[sp,#236]
 1024              	# copy-collector input: str r7,[sp,#236]
 1025              	
 1026              	# qhasm: hiu0 = mem32[input_0]; input_0 += 4
 1027              	# asm 1: ldr >hiu0=int32#2,[<input_0=int32#1],#4
 1028              	# asm 2: ldr >hiu0=r1,[<input_0=r0],#4
 1029              	# copy-collector input: ldr r1,[r0],#4
 1030              	
 1031              	# qhasm: lou0 = mem32[input_0]; input_0 += 4
 1032              	# asm 1: ldr >lou0=int32#3,[<input_0=int32#1],#4
 1033              	# asm 2: ldr >lou0=r2,[<input_0=r0],#4
 1034              	# copy-collector input: ldr r2,[r0],#4
 1035              	
 1036              	# qhasm: hiu1 = mem32[input_0]; input_0 += 4
 1037              	# asm 1: ldr >hiu1=int32#4,[<input_0=int32#1],#4
 1038              	# asm 2: ldr >hiu1=r3,[<input_0=r0],#4
 1039              	# copy-collector input: ldr r3,[r0],#4
 1040              	
 1041              	# qhasm: lou1 = mem32[input_0]; input_0 += 4
 1042              	# asm 1: ldr >lou1=int32#5,[<input_0=int32#1],#4
 1043              	# asm 2: ldr >lou1=r4,[<input_0=r0],#4
 1044              	# copy-collector input: ldr r4,[r0],#4
 1045              	
 1046              	# qhasm: hiu2 = mem32[input_0]; input_0 += 4
 1047              	# asm 1: ldr >hiu2=int32#6,[<input_0=int32#1],#4
 1048              	# asm 2: ldr >hiu2=r5,[<input_0=r0],#4
 1049              	# copy-collector input: ldr r5,[r0],#4
 1050              	
 1051              	# qhasm: lou2 = mem32[input_0]; input_0 += 4
 1052              	# asm 1: ldr >lou2=int32#7,[<input_0=int32#1],#4
 1053              	# asm 2: ldr >lou2=r6,[<input_0=r0],#4
 1054              	# copy-collector input: ldr r6,[r0],#4
 1055              	
 1056              	# qhasm: hiu3 = mem32[input_0]; input_0 += 4
 1057              	# asm 1: ldr >hiu3=int32#8,[<input_0=int32#1],#4
 1058              	# asm 2: ldr >hiu3=r7,[<input_0=r0],#4
 1059              	# copy-collector input: ldr r7,[r0],#4
 1060              	
 1061              	# qhasm: lou3 = mem32[input_0]; input_0 += 4
 1062              	# asm 1: ldr >lou3=int32#9,[<input_0=int32#1],#4
 1063              	# asm 2: ldr >lou3=r8,[<input_0=r0],#4
 1064              	# copy-collector input: ldr r8,[r0],#4
 1065              	
 1066              	# qhasm: lou0 = lou0[3]lou0[2]lou0[1]lou0[0]
 1067              	# asm 1: rev >lou0=int32#3,<lou0=int32#3
 1068              	# asm 2: rev >lou0=r2,<lou0=r2
 1069              	# copy-collector output starts
 1070 015c CDE93421 	strd r2,r1,[sp,#208]
 1071 0160 CDE93643 	strd r4,r3,[sp,#216]
 1072 0164 CDE93865 	strd r6,r5,[sp,#224]
 1073 0168 CDE93A87 	strd r8,r7,[sp,#232]
 1074 016c 50F8041B 	ldr r1,[r0],#4
 1075 0170 50F8042B 	ldr r2,[r0],#4
 1076 0174 50F8043B 	ldr r3,[r0],#4
 1077 0178 50F8044B 	ldr r4,[r0],#4
 1078 017c 50F8045B 	ldr r5,[r0],#4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 20


 1079 0180 50F8046B 	ldr r6,[r0],#4
 1080 0184 50F8047B 	ldr r7,[r0],#4
 1081 0188 50F8048B 	ldr r8,[r0],#4
 1082              	# copy-collector output ends
 1083 018c 12BA     	rev r2,r2
 1084              	
 1085              	# qhasm: hiu0 = hiu0[3]hiu0[2]hiu0[1]hiu0[0]
 1086              	# asm 1: rev >hiu0=int32#2,<hiu0=int32#2
 1087              	# asm 2: rev >hiu0=r1,<hiu0=r1
 1088 018e 09BA     	rev r1,r1
 1089              	
 1090              	# qhasm: lou1 = lou1[3]lou1[2]lou1[1]lou1[0]
 1091              	# asm 1: rev >lou1=int32#5,<lou1=int32#5
 1092              	# asm 2: rev >lou1=r4,<lou1=r4
 1093 0190 24BA     	rev r4,r4
 1094              	
 1095              	# qhasm: hiu1 = hiu1[3]hiu1[2]hiu1[1]hiu1[0]
 1096              	# asm 1: rev >hiu1=int32#4,<hiu1=int32#4
 1097              	# asm 2: rev >hiu1=r3,<hiu1=r3
 1098 0192 1BBA     	rev r3,r3
 1099              	
 1100              	# qhasm: lou2 = lou2[3]lou2[2]lou2[1]lou2[0]
 1101              	# asm 1: rev >lou2=int32#7,<lou2=int32#7
 1102              	# asm 2: rev >lou2=r6,<lou2=r6
 1103 0194 36BA     	rev r6,r6
 1104              	
 1105              	# qhasm: hiu2 = hiu2[3]hiu2[2]hiu2[1]hiu2[0]
 1106              	# asm 1: rev >hiu2=int32#6,<hiu2=int32#6
 1107              	# asm 2: rev >hiu2=r5,<hiu2=r5
 1108 0196 2DBA     	rev r5,r5
 1109              	
 1110              	# qhasm: lou3 = lou3[3]lou3[2]lou3[1]lou3[0]
 1111              	# asm 1: rev >lou3=int32#9,<lou3=int32#9
 1112              	# asm 2: rev >lou3=r8,<lou3=r8
 1113 0198 98FA88F8 	rev r8,r8
 1114              	
 1115              	# qhasm: hiu3 = hiu3[3]hiu3[2]hiu3[1]hiu3[0]
 1116              	# asm 1: rev >hiu3=int32#8,<hiu3=int32#8
 1117              	# asm 2: rev >hiu3=r7,<hiu3=r7
 1118 019c 97FA87F7 	rev.w r7,r7
 1119              	
 1120              	# qhasm: lom12 = lou0
 1121              	# asm 1: str <lou0=int32#3,>lom12=stack32#61
 1122              	# asm 2: str <lou0=r2,>lom12=[sp,#240]
 1123              	# copy-collector input: str r2,[sp,#240]
 1124              	
 1125              	# qhasm: him12 = hiu0
 1126              	# asm 1: str <hiu0=int32#2,>him12=stack32#62
 1127              	# asm 2: str <hiu0=r1,>him12=[sp,#244]
 1128              	# copy-collector input: str r1,[sp,#244]
 1129              	
 1130              	# qhasm: lom13 = lou1
 1131              	# asm 1: str <lou1=int32#5,>lom13=stack32#63
 1132              	# asm 2: str <lou1=r4,>lom13=[sp,#248]
 1133              	# copy-collector input: str r4,[sp,#248]
 1134              	
 1135              	# qhasm: him13 = hiu1
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 21


 1136              	# asm 1: str <hiu1=int32#4,>him13=stack32#64
 1137              	# asm 2: str <hiu1=r3,>him13=[sp,#252]
 1138              	# copy-collector input: str r3,[sp,#252]
 1139              	
 1140              	# qhasm: lom14 = lou2
 1141              	# asm 1: str <lou2=int32#7,>lom14=stack32#65
 1142              	# asm 2: str <lou2=r6,>lom14=[sp,#256]
 1143              	# copy-collector input: str r6,[sp,#256]
 1144              	
 1145              	# qhasm: him14 = hiu2
 1146              	# asm 1: str <hiu2=int32#6,>him14=stack32#66
 1147              	# asm 2: str <hiu2=r5,>him14=[sp,#260]
 1148              	# copy-collector input: str r5,[sp,#260]
 1149              	
 1150              	# qhasm: lom15 = lou3
 1151              	# asm 1: str <lou3=int32#9,>lom15=stack32#67
 1152              	# asm 2: str <lou3=r8,>lom15=[sp,#264]
 1153              	# copy-collector input: str r8,[sp,#264]
 1154              	
 1155              	# qhasm: him15 = hiu3
 1156              	# asm 1: str <hiu3=int32#8,>him15=stack32#68
 1157              	# asm 2: str <hiu3=r7,>him15=[sp,#268]
 1158              	# copy-collector input: str r7,[sp,#268]
 1159              	
 1160              	# qhasm: o1 = input_0
 1161              	# asm 1: str <input_0=int32#1,>o1=stack32#2
 1162              	# asm 2: str <input_0=r0,>o1=[sp,#4]
 1163              	# copy-collector input: str r0,[sp,#4]
 1164              	
 1165              	# qhasm: input_0 = 80 simple
 1166              	# asm 1: mov >input_0=int32#1,80
 1167              	# asm 2: mov >input_0=r0,80
 1168              	# copy-collector output starts
 1169 01a0 CDE93C21 	strd r2,r1,[sp,#240]
 1170 01a4 CDE93E43 	strd r4,r3,[sp,#248]
 1171 01a8 CDE94065 	strd r6,r5,[sp,#256]
 1172 01ac CDE94287 	strd r8,r7,[sp,#264]
 1173 01b0 0190     	str r0,[sp,#4]
 1174              	# copy-collector output ends
 1175 01b2 4FF05000 	mov r0,80
 1176              	
 1177              	# qhasm: o4 = input_0
 1178              	# asm 1: str <input_0=int32#1,>o4=stack32#69
 1179              	# asm 2: str <input_0=r0,>o4=[sp,#272]
 1180              	# copy-collector input: str r0,[sp,#272]
 1181              	
 1182              	# qhasm: innerloop:
 1183              	# copy-collector output starts
 1184 01b6 4490     	str r0,[sp,#272]
 1185              	# copy-collector output ends
 1186              	._innerloop:
 1187              	
 1188              	# qhasm: input_0 = o3
 1189              	# asm 1: ldr >input_0=int32#1,<o3=stack32#4
 1190              	# asm 2: ldr >input_0=r0,<o3=[sp,#12]
 1191              	# copy-collector input: ldr r0,[sp,#12]
 1192              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 22


 1193              	# qhasm: lou0 = lod3
 1194              	# asm 1: ldr >lou0=int32#2,<lod3=stack32#19
 1195              	# asm 2: ldr >lou0=r1,<lod3=[sp,#72]
 1196              	# copy-collector input: ldr r1,[sp,#72]
 1197              	
 1198              	# qhasm: hiu0 = hid3
 1199              	# asm 1: ldr >hiu0=int32#3,<hid3=stack32#20
 1200              	# asm 2: ldr >hiu0=r2,<hid3=[sp,#76]
 1201              	# copy-collector input: ldr r2,[sp,#76]
 1202              	
 1203              	# qhasm: lou1 = lod4
 1204              	# asm 1: ldr >lou1=int32#4,<lod4=stack32#29
 1205              	# asm 2: ldr >lou1=r3,<lod4=[sp,#112]
 1206              	# copy-collector input: ldr r3,[sp,#112]
 1207              	
 1208              	# qhasm: hiu1 = hid4
 1209              	# asm 1: ldr >hiu1=int32#5,<hid4=stack32#30
 1210              	# asm 2: ldr >hiu1=r4,<hid4=[sp,#116]
 1211              	# copy-collector input: ldr r4,[sp,#116]
 1212              	
 1213              	# qhasm: lou2 = lod5
 1214              	# asm 1: ldr >lou2=int32#6,<lod5=stack32#31
 1215              	# asm 2: ldr >lou2=r5,<lod5=[sp,#120]
 1216              	# copy-collector input: ldr r5,[sp,#120]
 1217              	
 1218              	# qhasm: hiu2 = hid5
 1219              	# asm 1: ldr >hiu2=int32#7,<hid5=stack32#32
 1220              	# asm 2: ldr >hiu2=r6,<hid5=[sp,#124]
 1221              	# copy-collector input: ldr r6,[sp,#124]
 1222              	
 1223              	# qhasm: lou3 = lod6
 1224              	# asm 1: ldr >lou3=int32#8,<lod6=stack32#33
 1225              	# asm 2: ldr >lou3=r7,<lod6=[sp,#128]
 1226              	# copy-collector input: ldr r7,[sp,#128]
 1227              	
 1228              	# qhasm: hiu3 = hid6
 1229              	# asm 1: ldr >hiu3=int32#9,<hid6=stack32#34
 1230              	# asm 2: ldr >hiu3=r8,<hid6=[sp,#132]
 1231              	# copy-collector input: ldr r8,[sp,#132]
 1232              	
 1233              	# qhasm: lou4 = lod7
 1234              	# asm 1: ldr >lou4=int32#10,<lod7=stack32#35
 1235              	# asm 2: ldr >lou4=r9,<lod7=[sp,#136]
 1236              	# copy-collector input: ldr r9,[sp,#136]
 1237              	
 1238              	# qhasm: hiu4 = hid7
 1239              	# asm 1: ldr >hiu4=int32#11,<hid7=stack32#36
 1240              	# asm 2: ldr >hiu4=r10,<hid7=[sp,#140]
 1241              	# copy-collector input: ldr r10,[sp,#140]
 1242              	
 1243              	# qhasm: lou5 = lod8
 1244              	# asm 1: ldr >lou5=int32#12,<lod8=stack32#37
 1245              	# asm 2: ldr >lou5=r11,<lod8=[sp,#144]
 1246              	# copy-collector input: ldr r11,[sp,#144]
 1247              	
 1248              	# qhasm: hiu5 = hid8
 1249              	# asm 1: ldr >hiu5=int32#13,<hid8=stack32#38
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 23


 1250              	# asm 2: ldr >hiu5=r12,<hid8=[sp,#148]
 1251              	# copy-collector input: ldr r12,[sp,#148]
 1252              	
 1253              	# qhasm: two23 = 0x800000 simple
 1254              	# asm 1: mov >two23=int32#14,0x800000
 1255              	# asm 2: mov >two23=r14,0x800000
 1256              	# copy-collector output starts
 1257 01b8 0398     	ldr r0,[sp,#12]
 1258 01ba 1299     	ldr r1,[sp,#72]
 1259 01bc 139A     	ldr r2,[sp,#76]
 1260 01be 1C9B     	ldr r3,[sp,#112]
 1261 01c0 1D9C     	ldr r4,[sp,#116]
 1262 01c2 1E9D     	ldr r5,[sp,#120]
 1263 01c4 1F9E     	ldr r6,[sp,#124]
 1264 01c6 209F     	ldr r7,[sp,#128]
 1265 01c8 DDF88480 	ldr r8,[sp,#132]
 1266 01cc DDF88890 	ldr r9,[sp,#136]
 1267 01d0 DDF88CA0 	ldr r10,[sp,#140]
 1268 01d4 DDF890B0 	ldr r11,[sp,#144]
 1269 01d8 DDF894C0 	ldr r12,[sp,#148]
 1270              	# copy-collector output ends
 1271 01dc 4FF4000E 	mov r14,0x800000
 1272              	
 1273              	# qhasm: carry?  lou4 += lou5
 1274              	# asm 1: adds >lou4=int32#10,<lou4=int32#10,<lou5=int32#12
 1275              	# asm 2: adds >lou4=r9,<lou4=r9,<lou5=r11
 1276 01e0 19EB0B09 	adds r9,r9,r11
 1277              	
 1278              	# qhasm: hiu4 += hiu5 + carry
 1279              	# asm 1: adc >hiu4=int32#11,<hiu4=int32#11,<hiu5=int32#13
 1280              	# asm 2: adc >hiu4=r10,<hiu4=r10,<hiu5=r12
 1281 01e4 4AEB0C0A 	adc r10,r10,r12
 1282              	
 1283              	# qhasm: lotmp = mem32[input_0]; input_0 += 4
 1284              	# asm 1: ldr >lotmp=int32#12,[<input_0=int32#1],#4
 1285              	# asm 2: ldr >lotmp=r11,[<input_0=r0],#4
 1286              	# copy-collector input: ldr r11,[r0],#4
 1287              	
 1288              	# qhasm: hitmp = mem32[input_0]; input_0 += 4
 1289              	# asm 1: ldr >hitmp=int32#13,[<input_0=int32#1],#4
 1290              	# asm 2: ldr >hitmp=r12,[<input_0=r0],#4
 1291              	# copy-collector input: ldr r12,[r0],#4
 1292              	
 1293              	# qhasm: carry? lou4 += lotmp
 1294              	# asm 1: adds >lou4=int32#10,<lou4=int32#10,<lotmp=int32#12
 1295              	# asm 2: adds >lou4=r9,<lou4=r9,<lotmp=r11
 1296              	# copy-collector output starts
 1297 01e8 50F804BB 	ldr r11,[r0],#4
 1298 01ec 50F804CB 	ldr r12,[r0],#4
 1299              	# copy-collector output ends
 1300 01f0 19EB0B09 	adds r9,r9,r11
 1301              	
 1302              	# qhasm: hiu4 += hitmp + carry
 1303              	# asm 1: adc >hiu4=int32#11,<hiu4=int32#11,<hitmp=int32#13
 1304              	# asm 2: adc >hiu4=r10,<hiu4=r10,<hitmp=r12
 1305 01f4 4AEB0C0A 	adc r10,r10,r12
 1306              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 24


 1307              	# qhasm: hitmp lotmp = lou1 * two23
 1308              	# asm 1: umull >lotmp=int32#13,>hitmp=int32#12,<lou1=int32#4,<two23=int32#14
 1309              	# asm 2: umull >lotmp=r12,>hitmp=r11,<lou1=r3,<two23=r14
 1310 01f8 A3FB0ECB 	umull r12,r11,r3,r14
 1311              	
 1312              	# qhasm: lotmp hitmp += hiu1 * two23
 1313              	# asm 1: umlal <hitmp=int32#12,<lotmp=int32#13,<hiu1=int32#5,<two23=int32#14
 1314              	# asm 2: umlal <hitmp=r11,<lotmp=r12,<hiu1=r4,<two23=r14
 1315 01fc E4FB0EBC 	umlal r11,r12,r4,r14
 1316              	
 1317              	# qhasm: lotmp ^= (lou1 unsigned>> 18)
 1318              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou1=int32#4,LSR #18
 1319              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou1=r3,LSR #18
 1320 0200 8CEA934C 	eor r12,r12,r3,LSR #18
 1321              	
 1322              	# qhasm: lotmp ^= (hiu1 << 14)
 1323              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu1=int32#5,LSL #14
 1324              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu1=r4,LSL #14
 1325 0204 8CEA843C 	eor r12,r12,r4,LSL #14
 1326              	
 1327              	# qhasm: lotmp ^= (lou1 unsigned>> 14)
 1328              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou1=int32#4,LSR #14
 1329              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou1=r3,LSR #14
 1330 0208 8CEA933C 	eor r12,r12,r3,LSR #14
 1331              	
 1332              	# qhasm: lotmp ^= (hiu1 << 18)
 1333              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu1=int32#5,LSL #18
 1334              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu1=r4,LSL #18
 1335 020c 8CEA844C 	eor r12,r12,r4,LSL #18
 1336              	
 1337              	# qhasm: hitmp ^= (hiu1 unsigned>> 18)
 1338              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu1=int32#5,LSR #18
 1339              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu1=r4,LSR #18
 1340 0210 8BEA944B 	eor r11,r11,r4,LSR #18
 1341              	
 1342              	# qhasm: hitmp ^= (lou1 << 14)
 1343              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou1=int32#4,LSL #14
 1344              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou1=r3,LSL #14
 1345 0214 8BEA833B 	eor r11,r11,r3,LSL #14
 1346              	
 1347              	# qhasm: hitmp ^= (hiu1 unsigned>> 14)
 1348              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu1=int32#5,LSR #14
 1349              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu1=r4,LSR #14
 1350 0218 8BEA943B 	eor r11,r11,r4,LSR #14
 1351              	
 1352              	# qhasm: hitmp ^= (lou1 << 18)
 1353              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou1=int32#4,LSL #18
 1354              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou1=r3,LSL #18
 1355 021c 8BEA834B 	eor r11,r11,r3,LSL #18
 1356              	
 1357              	# qhasm: carry? lou4 += lotmp
 1358              	# asm 1: adds >lou4=int32#10,<lou4=int32#10,<lotmp=int32#13
 1359              	# asm 2: adds >lou4=r9,<lou4=r9,<lotmp=r12
 1360 0220 19EB0C09 	adds r9,r9,r12
 1361              	
 1362              	# qhasm: hiu4 += hitmp + carry
 1363              	# asm 1: adc >hiu4=int32#11,<hiu4=int32#11,<hitmp=int32#12
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 25


 1364              	# asm 2: adc >hiu4=r10,<hiu4=r10,<hitmp=r11
 1365 0224 4AEB0B0A 	adc r10,r10,r11
 1366              	
 1367              	# qhasm: lotmp = lou1 & lou2
 1368              	# asm 1: and >lotmp=int32#6,<lou1=int32#4,<lou2=int32#6
 1369              	# asm 2: and >lotmp=r5,<lou1=r3,<lou2=r5
 1370 0228 03EA0505 	and r5,r3,r5
 1371              	
 1372              	# qhasm: lotmp2 = lou3 & ~lou1
 1373              	# asm 1: bic >lotmp2=int32#4,<lou3=int32#8,<lou1=int32#4
 1374              	# asm 2: bic >lotmp2=r3,<lou3=r7,<lou1=r3
 1375 022c 27EA0303 	bic r3,r7,r3
 1376              	
 1377              	# qhasm: lotmp ^= lotmp2
 1378              	# asm 1: eor >lotmp=int32#4,<lotmp=int32#6,<lotmp2=int32#4
 1379              	# asm 2: eor >lotmp=r3,<lotmp=r5,<lotmp2=r3
 1380 0230 85EA0303 	eor r3,r5,r3
 1381              	
 1382              	# qhasm: carry? lou4 += lotmp
 1383              	# asm 1: adds >lou4=int32#4,<lou4=int32#10,<lotmp=int32#4
 1384              	# asm 2: adds >lou4=r3,<lou4=r9,<lotmp=r3
 1385 0234 19EB0303 	adds r3,r9,r3
 1386              	
 1387              	# qhasm: hitmp = hiu1 & hiu2
 1388              	# asm 1: and >hitmp=int32#6,<hiu1=int32#5,<hiu2=int32#7
 1389              	# asm 2: and >hitmp=r5,<hiu1=r4,<hiu2=r6
 1390 0238 04EA0605 	and r5,r4,r6
 1391              	
 1392              	# qhasm: hitmp2 = hiu3 & ~hiu1
 1393              	# asm 1: bic >hitmp2=int32#5,<hiu3=int32#9,<hiu1=int32#5
 1394              	# asm 2: bic >hitmp2=r4,<hiu3=r8,<hiu1=r4
 1395 023c 28EA0404 	bic r4,r8,r4
 1396              	
 1397              	# qhasm: hitmp ^= hitmp2
 1398              	# asm 1: eor >hitmp=int32#5,<hitmp=int32#6,<hitmp2=int32#5
 1399              	# asm 2: eor >hitmp=r4,<hitmp=r5,<hitmp2=r4
 1400 0240 85EA0404 	eor r4,r5,r4
 1401              	
 1402              	# qhasm: hiu4 += hitmp + carry
 1403              	# asm 1: adc >hiu4=int32#5,<hiu4=int32#11,<hitmp=int32#5
 1404              	# asm 2: adc >hiu4=r4,<hiu4=r10,<hitmp=r4
 1405 0244 4AEB0404 	adc r4,r10,r4
 1406              	
 1407              	# qhasm: carry? lou0 += lou4
 1408              	# asm 1: adds >lou0=int32#2,<lou0=int32#2,<lou4=int32#4
 1409              	# asm 2: adds >lou0=r1,<lou0=r1,<lou4=r3
 1410 0248 C918     	adds r1,r1,r3
 1411              	
 1412              	# qhasm: hiu0 += hiu4 + carry
 1413              	# asm 1: adc >hiu0=int32#3,<hiu0=int32#3,<hiu4=int32#5
 1414              	# asm 2: adc >hiu0=r2,<hiu0=r2,<hiu4=r4
 1415 024a 42EB0402 	adc r2,r2,r4
 1416              	
 1417              	# qhasm: lod3 = lou0
 1418              	# asm 1: str <lou0=int32#2,>lod3=stack32#4
 1419              	# asm 2: str <lou0=r1,>lod3=[sp,#12]
 1420              	# copy-collector input: str r1,[sp,#12]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 26


 1421              	
 1422              	# qhasm: hid3 = hiu0
 1423              	# asm 1: str <hiu0=int32#3,>hid3=stack32#19
 1424              	# asm 2: str <hiu0=r2,>hid3=[sp,#72]
 1425              	# copy-collector input: str r2,[sp,#72]
 1426              	
 1427              	# qhasm: lou1 = lod0
 1428              	# asm 1: ldr >lou1=int32#6,<lod0=stack32#13
 1429              	# asm 2: ldr >lou1=r5,<lod0=[sp,#48]
 1430              	# copy-collector input: ldr r5,[sp,#48]
 1431              	
 1432              	# qhasm: hiu1 = hid0
 1433              	# asm 1: ldr >hiu1=int32#7,<hid0=stack32#14
 1434              	# asm 2: ldr >hiu1=r6,<hid0=[sp,#52]
 1435              	# copy-collector input: ldr r6,[sp,#52]
 1436              	
 1437              	# qhasm: lou2 = lod1
 1438              	# asm 1: ldr >lou2=int32#8,<lod1=stack32#15
 1439              	# asm 2: ldr >lou2=r7,<lod1=[sp,#56]
 1440              	# copy-collector input: ldr r7,[sp,#56]
 1441              	
 1442              	# qhasm: hiu2 = hid1
 1443              	# asm 1: ldr >hiu2=int32#9,<hid1=stack32#16
 1444              	# asm 2: ldr >hiu2=r8,<hid1=[sp,#60]
 1445              	# copy-collector input: ldr r8,[sp,#60]
 1446              	
 1447              	# qhasm: lou3 = lod2
 1448              	# asm 1: ldr >lou3=int32#10,<lod2=stack32#17
 1449              	# asm 2: ldr >lou3=r9,<lod2=[sp,#64]
 1450              	# copy-collector input: ldr r9,[sp,#64]
 1451              	
 1452              	# qhasm: hiu3 = hid2
 1453              	# asm 1: ldr >hiu3=int32#11,<hid2=stack32#18
 1454              	# asm 2: ldr >hiu3=r10,<hid2=[sp,#68]
 1455              	# copy-collector input: ldr r10,[sp,#68]
 1456              	
 1457              	# qhasm: two25 = 0x2000000 simple
 1458              	# asm 1: mov >two25=int32#12,0x2000000
 1459              	# asm 2: mov >two25=r11,0x2000000
 1460              	# copy-collector output starts
 1461 024e 0391     	str r1,[sp,#12]
 1462 0250 1292     	str r2,[sp,#72]
 1463 0252 0C9D     	ldr r5,[sp,#48]
 1464 0254 0D9E     	ldr r6,[sp,#52]
 1465 0256 0E9F     	ldr r7,[sp,#56]
 1466 0258 DDF83C80 	ldr r8,[sp,#60]
 1467 025c DDF84090 	ldr r9,[sp,#64]
 1468 0260 DDF844A0 	ldr r10,[sp,#68]
 1469              	# copy-collector output ends
 1470 0264 4FF0007B 	mov r11,0x2000000
 1471              	
 1472              	# qhasm: hitmp lotmp = lou1 * two25
 1473              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<lou1=int32#6,<two25=int32#12
 1474              	# asm 2: umull >lotmp=r14,>hitmp=r12,<lou1=r5,<two25=r11
 1475 0268 A5FB0BEC 	umull r14,r12,r5,r11
 1476              	
 1477              	# qhasm: lotmp hitmp += hiu1 * two25
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 27


 1478              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<hiu1=int32#7,<two25=int32#12
 1479              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<hiu1=r6,<two25=r11
 1480 026c E6FB0BCE 	umlal r12,r14,r6,r11
 1481              	
 1482              	# qhasm: lotmp ^= (hiu1 unsigned>> 2)
 1483              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#14,<hiu1=int32#7,LSR #2
 1484              	# asm 2: eor >lotmp=r11,<lotmp=r14,<hiu1=r6,LSR #2
 1485 0270 8EEA960B 	eor r11,r14,r6,LSR #2
 1486              	
 1487              	# qhasm: lotmp ^= (lou1 << 30)
 1488              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou1=int32#6,LSL #30
 1489              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou1=r5,LSL #30
 1490 0274 8BEA857B 	eor r11,r11,r5,LSL #30
 1491              	
 1492              	# qhasm: lotmp ^= (lou1 unsigned>> 28)
 1493              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou1=int32#6,LSR #28
 1494              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou1=r5,LSR #28
 1495 0278 8BEA157B 	eor r11,r11,r5,LSR #28
 1496              	
 1497              	# qhasm: lotmp ^= (hiu1 << 4)
 1498              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu1=int32#7,LSL #4
 1499              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu1=r6,LSL #4
 1500 027c 8BEA061B 	eor r11,r11,r6,LSL #4
 1501              	
 1502              	# qhasm: hitmp ^= (lou1 unsigned>> 2)
 1503              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou1=int32#6,LSR #2
 1504              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou1=r5,LSR #2
 1505 0280 8CEA950C 	eor r12,r12,r5,LSR #2
 1506              	
 1507              	# qhasm: hitmp ^= (hiu1 << 30)
 1508              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu1=int32#7,LSL #30
 1509              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu1=r6,LSL #30
 1510 0284 8CEA867C 	eor r12,r12,r6,LSL #30
 1511              	
 1512              	# qhasm: hitmp ^= (hiu1 unsigned>> 28)
 1513              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu1=int32#7,LSR #28
 1514              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu1=r6,LSR #28
 1515 0288 8CEA167C 	eor r12,r12,r6,LSR #28
 1516              	
 1517              	# qhasm: hitmp ^= (lou1 << 4)
 1518              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou1=int32#6,LSL #4
 1519              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou1=r5,LSL #4
 1520 028c 8CEA051C 	eor r12,r12,r5,LSL #4
 1521              	
 1522              	# qhasm: carry? lou4 += lotmp
 1523              	# asm 1: adds >lou4=int32#4,<lou4=int32#4,<lotmp=int32#12
 1524              	# asm 2: adds >lou4=r3,<lou4=r3,<lotmp=r11
 1525 0290 13EB0B03 	adds r3,r3,r11
 1526              	
 1527              	# qhasm: hiu4 += hitmp + carry
 1528              	# asm 1: adc >hiu4=int32#5,<hiu4=int32#5,<hitmp=int32#13
 1529              	# asm 2: adc >hiu4=r4,<hiu4=r4,<hitmp=r12
 1530 0294 44EB0C04 	adc r4,r4,r12
 1531              	
 1532              	# qhasm: lotmp = lou2 ^ lou3
 1533              	# asm 1: eor >lotmp=int32#12,<lou2=int32#8,<lou3=int32#10
 1534              	# asm 2: eor >lotmp=r11,<lou2=r7,<lou3=r9
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 28


 1535 0298 87EA090B 	eor r11,r7,r9
 1536              	
 1537              	# qhasm: lotmp &= lou1
 1538              	# asm 1: and >lotmp=int32#6,<lotmp=int32#12,<lou1=int32#6
 1539              	# asm 2: and >lotmp=r5,<lotmp=r11,<lou1=r5
 1540 029c 0BEA0505 	and r5,r11,r5
 1541              	
 1542              	# qhasm: lotmp2 = lou2 & lou3
 1543              	# asm 1: and >lotmp2=int32#8,<lou2=int32#8,<lou3=int32#10
 1544              	# asm 2: and >lotmp2=r7,<lou2=r7,<lou3=r9
 1545 02a0 07EA0907 	and r7,r7,r9
 1546              	
 1547              	# qhasm: lotmp ^= lotmp2
 1548              	# asm 1: eor >lotmp=int32#6,<lotmp=int32#6,<lotmp2=int32#8
 1549              	# asm 2: eor >lotmp=r5,<lotmp=r5,<lotmp2=r7
 1550 02a4 85EA0705 	eor r5,r5,r7
 1551              	
 1552              	# qhasm: carry? lou4 += lotmp
 1553              	# asm 1: adds >lou4=int32#4,<lou4=int32#4,<lotmp=int32#6
 1554              	# asm 2: adds >lou4=r3,<lou4=r3,<lotmp=r5
 1555 02a8 13EB0503 	adds.w r3,r3,r5
 1556              	
 1557              	# qhasm: hitmp = hiu2 ^ hiu3
 1558              	# asm 1: eor >hitmp=int32#6,<hiu2=int32#9,<hiu3=int32#11
 1559              	# asm 2: eor >hitmp=r5,<hiu2=r8,<hiu3=r10
 1560 02ac 88EA0A05 	eor r5,r8,r10
 1561              	
 1562              	# qhasm: hitmp &= hiu1
 1563              	# asm 1: and >hitmp=int32#6,<hitmp=int32#6,<hiu1=int32#7
 1564              	# asm 2: and >hitmp=r5,<hitmp=r5,<hiu1=r6
 1565 02b0 05EA0605 	and r5,r5,r6
 1566              	
 1567              	# qhasm: hitmp2 = hiu2 & hiu3
 1568              	# asm 1: and >hitmp2=int32#7,<hiu2=int32#9,<hiu3=int32#11
 1569              	# asm 2: and >hitmp2=r6,<hiu2=r8,<hiu3=r10
 1570 02b4 08EA0A06 	and r6,r8,r10
 1571              	
 1572              	# qhasm: hitmp ^= hitmp2
 1573              	# asm 1: eor >hitmp=int32#6,<hitmp=int32#6,<hitmp2=int32#7
 1574              	# asm 2: eor >hitmp=r5,<hitmp=r5,<hitmp2=r6
 1575 02b8 85EA0605 	eor r5,r5,r6
 1576              	
 1577              	# qhasm: hiu4 += hitmp + carry
 1578              	# asm 1: adc >hiu4=int32#5,<hiu4=int32#5,<hitmp=int32#6
 1579              	# asm 2: adc >hiu4=r4,<hiu4=r4,<hitmp=r5
 1580 02bc 44EB0504 	adc r4,r4,r5
 1581              	
 1582              	# qhasm: lod7 = lou4
 1583              	# asm 1: str <lou4=int32#4,>lod7=stack32#17
 1584              	# asm 2: str <lou4=r3,>lod7=[sp,#64]
 1585              	# copy-collector input: str r3,[sp,#64]
 1586              	
 1587              	# qhasm: hid7 = hiu4
 1588              	# asm 1: str <hiu4=int32#5,>hid7=stack32#18
 1589              	# asm 2: str <hiu4=r4,>hid7=[sp,#68]
 1590              	# copy-collector input: str r4,[sp,#68]
 1591              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 29


 1592              	# qhasm: lou1 = lod4
 1593              	# asm 1: ldr >lou1=int32#4,<lod4=stack32#29
 1594              	# asm 2: ldr >lou1=r3,<lod4=[sp,#112]
 1595              	# copy-collector input: ldr r3,[sp,#112]
 1596              	
 1597              	# qhasm: hiu1 = hid4
 1598              	# asm 1: ldr >hiu1=int32#5,<hid4=stack32#30
 1599              	# asm 2: ldr >hiu1=r4,<hid4=[sp,#116]
 1600              	# copy-collector input: ldr r4,[sp,#116]
 1601              	
 1602              	# qhasm: lou2 = lod5
 1603              	# asm 1: ldr >lou2=int32#6,<lod5=stack32#31
 1604              	# asm 2: ldr >lou2=r5,<lod5=[sp,#120]
 1605              	# copy-collector input: ldr r5,[sp,#120]
 1606              	
 1607              	# qhasm: hiu2 = hid5
 1608              	# asm 1: ldr >hiu2=int32#7,<hid5=stack32#32
 1609              	# asm 2: ldr >hiu2=r6,<hid5=[sp,#124]
 1610              	# copy-collector input: ldr r6,[sp,#124]
 1611              	
 1612              	# qhasm: lou4 = lod6
 1613              	# asm 1: ldr >lou4=int32#8,<lod6=stack32#33
 1614              	# asm 2: ldr >lou4=r7,<lod6=[sp,#128]
 1615              	# copy-collector input: ldr r7,[sp,#128]
 1616              	
 1617              	# qhasm: hiu4 = hid6
 1618              	# asm 1: ldr >hiu4=int32#9,<hid6=stack32#34
 1619              	# asm 2: ldr >hiu4=r8,<hid6=[sp,#132]
 1620              	# copy-collector input: ldr r8,[sp,#132]
 1621              	
 1622              	# qhasm: lou5 = lod9
 1623              	# asm 1: ldr >lou5=int32#12,<lod9=stack32#39
 1624              	# asm 2: ldr >lou5=r11,<lod9=[sp,#152]
 1625              	# copy-collector input: ldr r11,[sp,#152]
 1626              	
 1627              	# qhasm: hiu5 = hid9
 1628              	# asm 1: ldr >hiu5=int32#13,<hid9=stack32#40
 1629              	# asm 2: ldr >hiu5=r12,<hid9=[sp,#156]
 1630              	# copy-collector input: ldr r12,[sp,#156]
 1631              	
 1632              	# qhasm: two23 = 0x800000 simple
 1633              	# asm 1: mov >two23=int32#14,0x800000
 1634              	# asm 2: mov >two23=r14,0x800000
 1635              	# copy-collector output starts
 1636 02c0 CDE91034 	strd r3,r4,[sp,#64]
 1637 02c4 1C9B     	ldr r3,[sp,#112]
 1638 02c6 1D9C     	ldr r4,[sp,#116]
 1639 02c8 1E9D     	ldr r5,[sp,#120]
 1640 02ca 1F9E     	ldr r6,[sp,#124]
 1641 02cc DDF88070 	ldr.w r7,[sp,#128]
 1642 02d0 DDF88480 	ldr r8,[sp,#132]
 1643 02d4 DDF898B0 	ldr r11,[sp,#152]
 1644 02d8 DDF89CC0 	ldr r12,[sp,#156]
 1645              	# copy-collector output ends
 1646 02dc 4FF4000E 	mov r14,0x800000
 1647              	
 1648              	# qhasm: carry?  lou4 += lou5
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 30


 1649              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lou5=int32#12
 1650              	# asm 2: adds >lou4=r7,<lou4=r7,<lou5=r11
 1651 02e0 17EB0B07 	adds r7,r7,r11
 1652              	
 1653              	# qhasm: hiu4 += hiu5 + carry
 1654              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hiu5=int32#13
 1655              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hiu5=r12
 1656 02e4 48EB0C08 	adc r8,r8,r12
 1657              	
 1658              	# qhasm: lotmp = mem32[input_0]; input_0 += 4
 1659              	# asm 1: ldr >lotmp=int32#12,[<input_0=int32#1],#4
 1660              	# asm 2: ldr >lotmp=r11,[<input_0=r0],#4
 1661              	# copy-collector input: ldr r11,[r0],#4
 1662              	
 1663              	# qhasm: hitmp = mem32[input_0]; input_0 += 4
 1664              	# asm 1: ldr >hitmp=int32#13,[<input_0=int32#1],#4
 1665              	# asm 2: ldr >hitmp=r12,[<input_0=r0],#4
 1666              	# copy-collector input: ldr r12,[r0],#4
 1667              	
 1668              	# qhasm: carry? lou4 += lotmp
 1669              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#12
 1670              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r11
 1671              	# copy-collector output starts
 1672 02e8 50F804BB 	ldr r11,[r0],#4
 1673 02ec 50F804CB 	ldr r12,[r0],#4
 1674              	# copy-collector output ends
 1675 02f0 17EB0B07 	adds r7,r7,r11
 1676              	
 1677              	# qhasm: hiu4 += hitmp + carry
 1678              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#13
 1679              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r12
 1680 02f4 48EB0C08 	adc r8,r8,r12
 1681              	
 1682              	# qhasm: hitmp lotmp = lou0 * two23
 1683              	# asm 1: umull >lotmp=int32#13,>hitmp=int32#12,<lou0=int32#2,<two23=int32#14
 1684              	# asm 2: umull >lotmp=r12,>hitmp=r11,<lou0=r1,<two23=r14
 1685 02f8 A1FB0ECB 	umull r12,r11,r1,r14
 1686              	
 1687              	# qhasm: lotmp hitmp += hiu0 * two23
 1688              	# asm 1: umlal <hitmp=int32#12,<lotmp=int32#13,<hiu0=int32#3,<two23=int32#14
 1689              	# asm 2: umlal <hitmp=r11,<lotmp=r12,<hiu0=r2,<two23=r14
 1690 02fc E2FB0EBC 	umlal r11,r12,r2,r14
 1691              	
 1692              	# qhasm: lotmp ^= (lou0 unsigned>> 18)
 1693              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou0=int32#2,LSR #18
 1694              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou0=r1,LSR #18
 1695 0300 8CEA914C 	eor r12,r12,r1,LSR #18
 1696              	
 1697              	# qhasm: lotmp ^= (hiu0 << 14)
 1698              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu0=int32#3,LSL #14
 1699              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu0=r2,LSL #14
 1700 0304 8CEA823C 	eor r12,r12,r2,LSL #14
 1701              	
 1702              	# qhasm: lotmp ^= (lou0 unsigned>> 14)
 1703              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou0=int32#2,LSR #14
 1704              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou0=r1,LSR #14
 1705 0308 8CEA913C 	eor r12,r12,r1,LSR #14
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 31


 1706              	
 1707              	# qhasm: lotmp ^= (hiu0 << 18)
 1708              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu0=int32#3,LSL #18
 1709              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu0=r2,LSL #18
 1710 030c 8CEA824C 	eor r12,r12,r2,LSL #18
 1711              	
 1712              	# qhasm: hitmp ^= (hiu0 unsigned>> 18)
 1713              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu0=int32#3,LSR #18
 1714              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu0=r2,LSR #18
 1715 0310 8BEA924B 	eor r11,r11,r2,LSR #18
 1716              	
 1717              	# qhasm: hitmp ^= (lou0 << 14)
 1718              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou0=int32#2,LSL #14
 1719              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou0=r1,LSL #14
 1720 0314 8BEA813B 	eor r11,r11,r1,LSL #14
 1721              	
 1722              	# qhasm: hitmp ^= (hiu0 unsigned>> 14)
 1723              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu0=int32#3,LSR #14
 1724              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu0=r2,LSR #14
 1725 0318 8BEA923B 	eor r11,r11,r2,LSR #14
 1726              	
 1727              	# qhasm: hitmp ^= (lou0 << 18)
 1728              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou0=int32#2,LSL #18
 1729              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou0=r1,LSL #18
 1730 031c 8BEA814B 	eor r11,r11,r1,LSL #18
 1731              	
 1732              	# qhasm: carry? lou4 += lotmp
 1733              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#13
 1734              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r12
 1735 0320 17EB0C07 	adds r7,r7,r12
 1736              	
 1737              	# qhasm: hiu4 += hitmp + carry
 1738              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#12
 1739              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r11
 1740 0324 48EB0B08 	adc r8,r8,r11
 1741              	
 1742              	# qhasm: lotmp = lou0 & lou1
 1743              	# asm 1: and >lotmp=int32#4,<lou0=int32#2,<lou1=int32#4
 1744              	# asm 2: and >lotmp=r3,<lou0=r1,<lou1=r3
 1745 0328 01EA0303 	and r3,r1,r3
 1746              	
 1747              	# qhasm: lotmp2 = lou2 & ~lou0
 1748              	# asm 1: bic >lotmp2=int32#2,<lou2=int32#6,<lou0=int32#2
 1749              	# asm 2: bic >lotmp2=r1,<lou2=r5,<lou0=r1
 1750 032c 25EA0101 	bic r1,r5,r1
 1751              	
 1752              	# qhasm: lotmp ^= lotmp2
 1753              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#4,<lotmp2=int32#2
 1754              	# asm 2: eor >lotmp=r1,<lotmp=r3,<lotmp2=r1
 1755 0330 83EA0101 	eor r1,r3,r1
 1756              	
 1757              	# qhasm: carry? lou4 += lotmp
 1758              	# asm 1: adds >lou4=int32#2,<lou4=int32#8,<lotmp=int32#2
 1759              	# asm 2: adds >lou4=r1,<lou4=r7,<lotmp=r1
 1760 0334 17EB0101 	adds.w r1,r7,r1
 1761              	
 1762              	# qhasm: hitmp = hiu0 & hiu1
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 32


 1763              	# asm 1: and >hitmp=int32#4,<hiu0=int32#3,<hiu1=int32#5
 1764              	# asm 2: and >hitmp=r3,<hiu0=r2,<hiu1=r4
 1765 0338 02EA0403 	and r3,r2,r4
 1766              	
 1767              	# qhasm: hitmp2 = hiu2 & ~hiu0
 1768              	# asm 1: bic >hitmp2=int32#3,<hiu2=int32#7,<hiu0=int32#3
 1769              	# asm 2: bic >hitmp2=r2,<hiu2=r6,<hiu0=r2
 1770 033c 26EA0202 	bic r2,r6,r2
 1771              	
 1772              	# qhasm: hitmp ^= hitmp2
 1773              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#4,<hitmp2=int32#3
 1774              	# asm 2: eor >hitmp=r2,<hitmp=r3,<hitmp2=r2
 1775 0340 83EA0202 	eor r2,r3,r2
 1776              	
 1777              	# qhasm: hiu4 += hitmp + carry
 1778              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#9,<hitmp=int32#3
 1779              	# asm 2: adc >hiu4=r2,<hiu4=r8,<hitmp=r2
 1780 0344 48EB0202 	adc r2,r8,r2
 1781              	
 1782              	# qhasm: carry? lou3 += lou4
 1783              	# asm 1: adds >lou3=int32#4,<lou3=int32#10,<lou4=int32#2
 1784              	# asm 2: adds >lou3=r3,<lou3=r9,<lou4=r1
 1785 0348 19EB0103 	adds r3,r9,r1
 1786              	
 1787              	# qhasm: hiu3 += hiu4 + carry
 1788              	# asm 1: adc >hiu3=int32#5,<hiu3=int32#11,<hiu4=int32#3
 1789              	# asm 2: adc >hiu3=r4,<hiu3=r10,<hiu4=r2
 1790 034c 4AEB0204 	adc r4,r10,r2
 1791              	
 1792              	# qhasm: lod2 = lou3
 1793              	# asm 1: str <lou3=int32#4,>lod2=stack32#33
 1794              	# asm 2: str <lou3=r3,>lod2=[sp,#128]
 1795              	# copy-collector input: str r3,[sp,#128]
 1796              	
 1797              	# qhasm: hid2 = hiu3
 1798              	# asm 1: str <hiu3=int32#5,>hid2=stack32#34
 1799              	# asm 2: str <hiu3=r4,>hid2=[sp,#132]
 1800              	# copy-collector input: str r4,[sp,#132]
 1801              	
 1802              	# qhasm: lou0 = lod7
 1803              	# asm 1: ldr >lou0=int32#6,<lod7=stack32#17
 1804              	# asm 2: ldr >lou0=r5,<lod7=[sp,#64]
 1805              	# copy-collector input: ldr r5,[sp,#64]
 1806              	
 1807              	# qhasm: hiu0 = hid7
 1808              	# asm 1: ldr >hiu0=int32#7,<hid7=stack32#18
 1809              	# asm 2: ldr >hiu0=r6,<hid7=[sp,#68]
 1810              	# copy-collector input: ldr r6,[sp,#68]
 1811              	
 1812              	# qhasm: lou1 = lod0
 1813              	# asm 1: ldr >lou1=int32#8,<lod0=stack32#13
 1814              	# asm 2: ldr >lou1=r7,<lod0=[sp,#48]
 1815              	# copy-collector input: ldr r7,[sp,#48]
 1816              	
 1817              	# qhasm: hiu1 = hid0
 1818              	# asm 1: ldr >hiu1=int32#9,<hid0=stack32#14
 1819              	# asm 2: ldr >hiu1=r8,<hid0=[sp,#52]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 33


 1820              	# copy-collector input: ldr r8,[sp,#52]
 1821              	
 1822              	# qhasm: lou2 = lod1
 1823              	# asm 1: ldr >lou2=int32#10,<lod1=stack32#15
 1824              	# asm 2: ldr >lou2=r9,<lod1=[sp,#56]
 1825              	# copy-collector input: ldr r9,[sp,#56]
 1826              	
 1827              	# qhasm: hiu2 = hid1
 1828              	# asm 1: ldr >hiu2=int32#11,<hid1=stack32#16
 1829              	# asm 2: ldr >hiu2=r10,<hid1=[sp,#60]
 1830              	# copy-collector input: ldr r10,[sp,#60]
 1831              	
 1832              	# qhasm: two25 = 0x2000000 simple
 1833              	# asm 1: mov >two25=int32#12,0x2000000
 1834              	# asm 2: mov >two25=r11,0x2000000
 1835              	# copy-collector output starts
 1836 0350 CDE92034 	strd r3,r4,[sp,#128]
 1837 0354 109D     	ldr r5,[sp,#64]
 1838 0356 119E     	ldr r6,[sp,#68]
 1839 0358 DDF83070 	ldr.w r7,[sp,#48]
 1840 035c DDF83480 	ldr r8,[sp,#52]
 1841 0360 DDF83890 	ldr r9,[sp,#56]
 1842 0364 DDF83CA0 	ldr r10,[sp,#60]
 1843              	# copy-collector output ends
 1844 0368 4FF0007B 	mov r11,0x2000000
 1845              	
 1846              	# qhasm: hitmp lotmp = lou0 * two25
 1847              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<lou0=int32#6,<two25=int32#12
 1848              	# asm 2: umull >lotmp=r14,>hitmp=r12,<lou0=r5,<two25=r11
 1849 036c A5FB0BEC 	umull r14,r12,r5,r11
 1850              	
 1851              	# qhasm: lotmp hitmp += hiu0 * two25
 1852              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<hiu0=int32#7,<two25=int32#12
 1853              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<hiu0=r6,<two25=r11
 1854 0370 E6FB0BCE 	umlal r12,r14,r6,r11
 1855              	
 1856              	# qhasm: lotmp ^= (hiu0 unsigned>> 2)
 1857              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#14,<hiu0=int32#7,LSR #2
 1858              	# asm 2: eor >lotmp=r11,<lotmp=r14,<hiu0=r6,LSR #2
 1859 0374 8EEA960B 	eor r11,r14,r6,LSR #2
 1860              	
 1861              	# qhasm: lotmp ^= (lou0 << 30)
 1862              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSL #30
 1863              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSL #30
 1864 0378 8BEA857B 	eor r11,r11,r5,LSL #30
 1865              	
 1866              	# qhasm: lotmp ^= (lou0 unsigned>> 28)
 1867              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSR #28
 1868              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSR #28
 1869 037c 8BEA157B 	eor r11,r11,r5,LSR #28
 1870              	
 1871              	# qhasm: lotmp ^= (hiu0 << 4)
 1872              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu0=int32#7,LSL #4
 1873              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu0=r6,LSL #4
 1874 0380 8BEA061B 	eor r11,r11,r6,LSL #4
 1875              	
 1876              	# qhasm: hitmp ^= (lou0 unsigned>> 2)
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 34


 1877              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSR #2
 1878              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSR #2
 1879 0384 8CEA950C 	eor r12,r12,r5,LSR #2
 1880              	
 1881              	# qhasm: hitmp ^= (hiu0 << 30)
 1882              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSL #30
 1883              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSL #30
 1884 0388 8CEA867C 	eor r12,r12,r6,LSL #30
 1885              	
 1886              	# qhasm: hitmp ^= (hiu0 unsigned>> 28)
 1887              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSR #28
 1888              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSR #28
 1889 038c 8CEA167C 	eor r12,r12,r6,LSR #28
 1890              	
 1891              	# qhasm: hitmp ^= (lou0 << 4)
 1892              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSL #4
 1893              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSL #4
 1894 0390 8CEA051C 	eor r12,r12,r5,LSL #4
 1895              	
 1896              	# qhasm: carry? lou4 += lotmp
 1897              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#12
 1898              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r11
 1899 0394 11EB0B01 	adds r1,r1,r11
 1900              	
 1901              	# qhasm: hiu4 += hitmp + carry
 1902              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#13
 1903              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r12
 1904 0398 42EB0C02 	adc r2,r2,r12
 1905              	
 1906              	# qhasm: lotmp = lou1 ^ lou2
 1907              	# asm 1: eor >lotmp=int32#12,<lou1=int32#8,<lou2=int32#10
 1908              	# asm 2: eor >lotmp=r11,<lou1=r7,<lou2=r9
 1909 039c 87EA090B 	eor r11,r7,r9
 1910              	
 1911              	# qhasm: lotmp &= lou0
 1912              	# asm 1: and >lotmp=int32#6,<lotmp=int32#12,<lou0=int32#6
 1913              	# asm 2: and >lotmp=r5,<lotmp=r11,<lou0=r5
 1914 03a0 0BEA0505 	and r5,r11,r5
 1915              	
 1916              	# qhasm: lotmp2 = lou1 & lou2
 1917              	# asm 1: and >lotmp2=int32#8,<lou1=int32#8,<lou2=int32#10
 1918              	# asm 2: and >lotmp2=r7,<lou1=r7,<lou2=r9
 1919 03a4 07EA0907 	and r7,r7,r9
 1920              	
 1921              	# qhasm: lotmp ^= lotmp2
 1922              	# asm 1: eor >lotmp=int32#6,<lotmp=int32#6,<lotmp2=int32#8
 1923              	# asm 2: eor >lotmp=r5,<lotmp=r5,<lotmp2=r7
 1924 03a8 85EA0705 	eor r5,r5,r7
 1925              	
 1926              	# qhasm: carry? lou4 += lotmp
 1927              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#6
 1928              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r5
 1929 03ac 11EB0501 	adds.w r1,r1,r5
 1930              	
 1931              	# qhasm: hitmp = hiu1 ^ hiu2
 1932              	# asm 1: eor >hitmp=int32#6,<hiu1=int32#9,<hiu2=int32#11
 1933              	# asm 2: eor >hitmp=r5,<hiu1=r8,<hiu2=r10
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 35


 1934 03b0 88EA0A05 	eor r5,r8,r10
 1935              	
 1936              	# qhasm: hitmp &= hiu0
 1937              	# asm 1: and >hitmp=int32#6,<hitmp=int32#6,<hiu0=int32#7
 1938              	# asm 2: and >hitmp=r5,<hitmp=r5,<hiu0=r6
 1939 03b4 05EA0605 	and r5,r5,r6
 1940              	
 1941              	# qhasm: hitmp2 = hiu1 & hiu2
 1942              	# asm 1: and >hitmp2=int32#7,<hiu1=int32#9,<hiu2=int32#11
 1943              	# asm 2: and >hitmp2=r6,<hiu1=r8,<hiu2=r10
 1944 03b8 08EA0A06 	and r6,r8,r10
 1945              	
 1946              	# qhasm: hitmp ^= hitmp2
 1947              	# asm 1: eor >hitmp=int32#6,<hitmp=int32#6,<hitmp2=int32#7
 1948              	# asm 2: eor >hitmp=r5,<hitmp=r5,<hitmp2=r6
 1949 03bc 85EA0605 	eor r5,r5,r6
 1950              	
 1951              	# qhasm: hiu4 += hitmp + carry
 1952              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#6
 1953              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r5
 1954 03c0 42EB0502 	adc r2,r2,r5
 1955              	
 1956              	# qhasm: lod6 = lou4
 1957              	# asm 1: str <lou4=int32#2,>lod6=stack32#15
 1958              	# asm 2: str <lou4=r1,>lod6=[sp,#56]
 1959              	# copy-collector input: str r1,[sp,#56]
 1960              	
 1961              	# qhasm: hid6 = hiu4
 1962              	# asm 1: str <hiu4=int32#3,>hid6=stack32#16
 1963              	# asm 2: str <hiu4=r2,>hid6=[sp,#60]
 1964              	# copy-collector input: str r2,[sp,#60]
 1965              	
 1966              	# qhasm: lou0 = lod3
 1967              	# asm 1: ldr >lou0=int32#2,<lod3=stack32#4
 1968              	# asm 2: ldr >lou0=r1,<lod3=[sp,#12]
 1969              	# copy-collector input: ldr r1,[sp,#12]
 1970              	
 1971              	# qhasm: hiu0 = hid3
 1972              	# asm 1: ldr >hiu0=int32#3,<hid3=stack32#19
 1973              	# asm 2: ldr >hiu0=r2,<hid3=[sp,#72]
 1974              	# copy-collector input: ldr r2,[sp,#72]
 1975              	
 1976              	# qhasm: lou1 = lod4
 1977              	# asm 1: ldr >lou1=int32#6,<lod4=stack32#29
 1978              	# asm 2: ldr >lou1=r5,<lod4=[sp,#112]
 1979              	# copy-collector input: ldr r5,[sp,#112]
 1980              	
 1981              	# qhasm: hiu1 = hid4
 1982              	# asm 1: ldr >hiu1=int32#7,<hid4=stack32#30
 1983              	# asm 2: ldr >hiu1=r6,<hid4=[sp,#116]
 1984              	# copy-collector input: ldr r6,[sp,#116]
 1985              	
 1986              	# qhasm: lou4 = lod5
 1987              	# asm 1: ldr >lou4=int32#8,<lod5=stack32#31
 1988              	# asm 2: ldr >lou4=r7,<lod5=[sp,#120]
 1989              	# copy-collector input: ldr r7,[sp,#120]
 1990              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 36


 1991              	# qhasm: hiu4 = hid5
 1992              	# asm 1: ldr >hiu4=int32#9,<hid5=stack32#32
 1993              	# asm 2: ldr >hiu4=r8,<hid5=[sp,#124]
 1994              	# copy-collector input: ldr r8,[sp,#124]
 1995              	
 1996              	# qhasm: lou5 = lod10
 1997              	# asm 1: ldr >lou5=int32#12,<lod10=stack32#41
 1998              	# asm 2: ldr >lou5=r11,<lod10=[sp,#160]
 1999              	# copy-collector input: ldr r11,[sp,#160]
 2000              	
 2001              	# qhasm: hiu5 = hid10
 2002              	# asm 1: ldr >hiu5=int32#13,<hid10=stack32#42
 2003              	# asm 2: ldr >hiu5=r12,<hid10=[sp,#164]
 2004              	# copy-collector input: ldr r12,[sp,#164]
 2005              	
 2006              	# qhasm: two23 = 0x800000 simple
 2007              	# asm 1: mov >two23=int32#14,0x800000
 2008              	# asm 2: mov >two23=r14,0x800000
 2009              	# copy-collector output starts
 2010 03c4 CDE90E12 	strd r1,r2,[sp,#56]
 2011 03c8 0399     	ldr r1,[sp,#12]
 2012 03ca 129A     	ldr r2,[sp,#72]
 2013 03cc 1C9D     	ldr r5,[sp,#112]
 2014 03ce 1D9E     	ldr r6,[sp,#116]
 2015 03d0 DDF87870 	ldr.w r7,[sp,#120]
 2016 03d4 DDF87C80 	ldr r8,[sp,#124]
 2017 03d8 DDF8A0B0 	ldr r11,[sp,#160]
 2018 03dc DDF8A4C0 	ldr r12,[sp,#164]
 2019              	# copy-collector output ends
 2020 03e0 4FF4000E 	mov r14,0x800000
 2021              	
 2022              	# qhasm: carry?  lou4 += lou5
 2023              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lou5=int32#12
 2024              	# asm 2: adds >lou4=r7,<lou4=r7,<lou5=r11
 2025 03e4 17EB0B07 	adds r7,r7,r11
 2026              	
 2027              	# qhasm: hiu4 += hiu5 + carry
 2028              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hiu5=int32#13
 2029              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hiu5=r12
 2030 03e8 48EB0C08 	adc r8,r8,r12
 2031              	
 2032              	# qhasm: lotmp = mem32[input_0]; input_0 += 4
 2033              	# asm 1: ldr >lotmp=int32#12,[<input_0=int32#1],#4
 2034              	# asm 2: ldr >lotmp=r11,[<input_0=r0],#4
 2035              	# copy-collector input: ldr r11,[r0],#4
 2036              	
 2037              	# qhasm: hitmp = mem32[input_0]; input_0 += 4
 2038              	# asm 1: ldr >hitmp=int32#13,[<input_0=int32#1],#4
 2039              	# asm 2: ldr >hitmp=r12,[<input_0=r0],#4
 2040              	# copy-collector input: ldr r12,[r0],#4
 2041              	
 2042              	# qhasm: carry? lou4 += lotmp
 2043              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#12
 2044              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r11
 2045              	# copy-collector output starts
 2046 03ec 50F804BB 	ldr r11,[r0],#4
 2047 03f0 50F804CB 	ldr r12,[r0],#4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 37


 2048              	# copy-collector output ends
 2049 03f4 17EB0B07 	adds r7,r7,r11
 2050              	
 2051              	# qhasm: hiu4 += hitmp + carry
 2052              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#13
 2053              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r12
 2054 03f8 48EB0C08 	adc r8,r8,r12
 2055              	
 2056              	# qhasm: hitmp lotmp = lou3 * two23
 2057              	# asm 1: umull >lotmp=int32#13,>hitmp=int32#12,<lou3=int32#4,<two23=int32#14
 2058              	# asm 2: umull >lotmp=r12,>hitmp=r11,<lou3=r3,<two23=r14
 2059 03fc A3FB0ECB 	umull r12,r11,r3,r14
 2060              	
 2061              	# qhasm: lotmp hitmp += hiu3 * two23
 2062              	# asm 1: umlal <hitmp=int32#12,<lotmp=int32#13,<hiu3=int32#5,<two23=int32#14
 2063              	# asm 2: umlal <hitmp=r11,<lotmp=r12,<hiu3=r4,<two23=r14
 2064 0400 E4FB0EBC 	umlal r11,r12,r4,r14
 2065              	
 2066              	# qhasm: lotmp ^= (lou3 unsigned>> 18)
 2067              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou3=int32#4,LSR #18
 2068              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou3=r3,LSR #18
 2069 0404 8CEA934C 	eor r12,r12,r3,LSR #18
 2070              	
 2071              	# qhasm: lotmp ^= (hiu3 << 14)
 2072              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu3=int32#5,LSL #14
 2073              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu3=r4,LSL #14
 2074 0408 8CEA843C 	eor r12,r12,r4,LSL #14
 2075              	
 2076              	# qhasm: lotmp ^= (lou3 unsigned>> 14)
 2077              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou3=int32#4,LSR #14
 2078              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou3=r3,LSR #14
 2079 040c 8CEA933C 	eor r12,r12,r3,LSR #14
 2080              	
 2081              	# qhasm: lotmp ^= (hiu3 << 18)
 2082              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu3=int32#5,LSL #18
 2083              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu3=r4,LSL #18
 2084 0410 8CEA844C 	eor r12,r12,r4,LSL #18
 2085              	
 2086              	# qhasm: hitmp ^= (hiu3 unsigned>> 18)
 2087              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu3=int32#5,LSR #18
 2088              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu3=r4,LSR #18
 2089 0414 8BEA944B 	eor r11,r11,r4,LSR #18
 2090              	
 2091              	# qhasm: hitmp ^= (lou3 << 14)
 2092              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou3=int32#4,LSL #14
 2093              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou3=r3,LSL #14
 2094 0418 8BEA833B 	eor r11,r11,r3,LSL #14
 2095              	
 2096              	# qhasm: hitmp ^= (hiu3 unsigned>> 14)
 2097              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu3=int32#5,LSR #14
 2098              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu3=r4,LSR #14
 2099 041c 8BEA943B 	eor r11,r11,r4,LSR #14
 2100              	
 2101              	# qhasm: hitmp ^= (lou3 << 18)
 2102              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou3=int32#4,LSL #18
 2103              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou3=r3,LSL #18
 2104 0420 8BEA834B 	eor r11,r11,r3,LSL #18
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 38


 2105              	
 2106              	# qhasm: carry? lou4 += lotmp
 2107              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#13
 2108              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r12
 2109 0424 17EB0C07 	adds r7,r7,r12
 2110              	
 2111              	# qhasm: hiu4 += hitmp + carry
 2112              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#12
 2113              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r11
 2114 0428 48EB0B08 	adc r8,r8,r11
 2115              	
 2116              	# qhasm: lotmp = lou3 & lou0
 2117              	# asm 1: and >lotmp=int32#2,<lou3=int32#4,<lou0=int32#2
 2118              	# asm 2: and >lotmp=r1,<lou3=r3,<lou0=r1
 2119 042c 03EA0101 	and r1,r3,r1
 2120              	
 2121              	# qhasm: lotmp2 = lou1 & ~lou3
 2122              	# asm 1: bic >lotmp2=int32#4,<lou1=int32#6,<lou3=int32#4
 2123              	# asm 2: bic >lotmp2=r3,<lou1=r5,<lou3=r3
 2124 0430 25EA0303 	bic r3,r5,r3
 2125              	
 2126              	# qhasm: lotmp ^= lotmp2
 2127              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#2,<lotmp2=int32#4
 2128              	# asm 2: eor >lotmp=r1,<lotmp=r1,<lotmp2=r3
 2129 0434 81EA0301 	eor r1,r1,r3
 2130              	
 2131              	# qhasm: carry? lou4 += lotmp
 2132              	# asm 1: adds >lou4=int32#2,<lou4=int32#8,<lotmp=int32#2
 2133              	# asm 2: adds >lou4=r1,<lou4=r7,<lotmp=r1
 2134 0438 17EB0101 	adds.w r1,r7,r1
 2135              	
 2136              	# qhasm: hitmp = hiu3 & hiu0
 2137              	# asm 1: and >hitmp=int32#3,<hiu3=int32#5,<hiu0=int32#3
 2138              	# asm 2: and >hitmp=r2,<hiu3=r4,<hiu0=r2
 2139 043c 04EA0202 	and r2,r4,r2
 2140              	
 2141              	# qhasm: hitmp2 = hiu1 & ~hiu3
 2142              	# asm 1: bic >hitmp2=int32#4,<hiu1=int32#7,<hiu3=int32#5
 2143              	# asm 2: bic >hitmp2=r3,<hiu1=r6,<hiu3=r4
 2144 0440 26EA0403 	bic r3,r6,r4
 2145              	
 2146              	# qhasm: hitmp ^= hitmp2
 2147              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<hitmp2=int32#4
 2148              	# asm 2: eor >hitmp=r2,<hitmp=r2,<hitmp2=r3
 2149 0444 82EA0302 	eor r2,r2,r3
 2150              	
 2151              	# qhasm: hiu4 += hitmp + carry
 2152              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#9,<hitmp=int32#3
 2153              	# asm 2: adc >hiu4=r2,<hiu4=r8,<hitmp=r2
 2154 0448 48EB0202 	adc r2,r8,r2
 2155              	
 2156              	# qhasm: carry? lou2 += lou4
 2157              	# asm 1: adds >lou2=int32#4,<lou2=int32#10,<lou4=int32#2
 2158              	# asm 2: adds >lou2=r3,<lou2=r9,<lou4=r1
 2159 044c 19EB0103 	adds r3,r9,r1
 2160              	
 2161              	# qhasm: hiu2 += hiu4 + carry
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 39


 2162              	# asm 1: adc >hiu2=int32#5,<hiu2=int32#11,<hiu4=int32#3
 2163              	# asm 2: adc >hiu2=r4,<hiu2=r10,<hiu4=r2
 2164 0450 4AEB0204 	adc r4,r10,r2
 2165              	
 2166              	# qhasm: lod1 = lou2
 2167              	# asm 1: str <lou2=int32#4,>lod1=stack32#31
 2168              	# asm 2: str <lou2=r3,>lod1=[sp,#120]
 2169              	# copy-collector input: str r3,[sp,#120]
 2170              	
 2171              	# qhasm: hid1 = hiu2
 2172              	# asm 1: str <hiu2=int32#5,>hid1=stack32#32
 2173              	# asm 2: str <hiu2=r4,>hid1=[sp,#124]
 2174              	# copy-collector input: str r4,[sp,#124]
 2175              	
 2176              	# qhasm: lou0 = lod6
 2177              	# asm 1: ldr >lou0=int32#6,<lod6=stack32#15
 2178              	# asm 2: ldr >lou0=r5,<lod6=[sp,#56]
 2179              	# copy-collector input: ldr r5,[sp,#56]
 2180              	
 2181              	# qhasm: hiu0 = hid6
 2182              	# asm 1: ldr >hiu0=int32#7,<hid6=stack32#16
 2183              	# asm 2: ldr >hiu0=r6,<hid6=[sp,#60]
 2184              	# copy-collector input: ldr r6,[sp,#60]
 2185              	
 2186              	# qhasm: lou1 = lod7
 2187              	# asm 1: ldr >lou1=int32#8,<lod7=stack32#17
 2188              	# asm 2: ldr >lou1=r7,<lod7=[sp,#64]
 2189              	# copy-collector input: ldr r7,[sp,#64]
 2190              	
 2191              	# qhasm: hiu1 = hid7
 2192              	# asm 1: ldr >hiu1=int32#9,<hid7=stack32#18
 2193              	# asm 2: ldr >hiu1=r8,<hid7=[sp,#68]
 2194              	# copy-collector input: ldr r8,[sp,#68]
 2195              	
 2196              	# qhasm: lou3 = lod0
 2197              	# asm 1: ldr >lou3=int32#10,<lod0=stack32#13
 2198              	# asm 2: ldr >lou3=r9,<lod0=[sp,#48]
 2199              	# copy-collector input: ldr r9,[sp,#48]
 2200              	
 2201              	# qhasm: hiu3 = hid0
 2202              	# asm 1: ldr >hiu3=int32#11,<hid0=stack32#14
 2203              	# asm 2: ldr >hiu3=r10,<hid0=[sp,#52]
 2204              	# copy-collector input: ldr r10,[sp,#52]
 2205              	
 2206              	# qhasm: two25 = 0x2000000 simple
 2207              	# asm 1: mov >two25=int32#12,0x2000000
 2208              	# asm 2: mov >two25=r11,0x2000000
 2209              	# copy-collector output starts
 2210 0454 CDE91E34 	strd r3,r4,[sp,#120]
 2211 0458 0E9D     	ldr r5,[sp,#56]
 2212 045a 0F9E     	ldr r6,[sp,#60]
 2213 045c DDF84070 	ldr.w r7,[sp,#64]
 2214 0460 DDF84480 	ldr r8,[sp,#68]
 2215 0464 DDF83090 	ldr r9,[sp,#48]
 2216 0468 DDF834A0 	ldr r10,[sp,#52]
 2217              	# copy-collector output ends
 2218 046c 4FF0007B 	mov r11,0x2000000
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 40


 2219              	
 2220              	# qhasm: hitmp lotmp = lou0 * two25
 2221              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<lou0=int32#6,<two25=int32#12
 2222              	# asm 2: umull >lotmp=r14,>hitmp=r12,<lou0=r5,<two25=r11
 2223 0470 A5FB0BEC 	umull r14,r12,r5,r11
 2224              	
 2225              	# qhasm: lotmp hitmp += hiu0 * two25
 2226              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<hiu0=int32#7,<two25=int32#12
 2227              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<hiu0=r6,<two25=r11
 2228 0474 E6FB0BCE 	umlal r12,r14,r6,r11
 2229              	
 2230              	# qhasm: lotmp ^= (hiu0 unsigned>> 2)
 2231              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#14,<hiu0=int32#7,LSR #2
 2232              	# asm 2: eor >lotmp=r11,<lotmp=r14,<hiu0=r6,LSR #2
 2233 0478 8EEA960B 	eor r11,r14,r6,LSR #2
 2234              	
 2235              	# qhasm: lotmp ^= (lou0 << 30)
 2236              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSL #30
 2237              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSL #30
 2238 047c 8BEA857B 	eor r11,r11,r5,LSL #30
 2239              	
 2240              	# qhasm: lotmp ^= (lou0 unsigned>> 28)
 2241              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSR #28
 2242              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSR #28
 2243 0480 8BEA157B 	eor r11,r11,r5,LSR #28
 2244              	
 2245              	# qhasm: lotmp ^= (hiu0 << 4)
 2246              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu0=int32#7,LSL #4
 2247              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu0=r6,LSL #4
 2248 0484 8BEA061B 	eor r11,r11,r6,LSL #4
 2249              	
 2250              	# qhasm: hitmp ^= (lou0 unsigned>> 2)
 2251              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSR #2
 2252              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSR #2
 2253 0488 8CEA950C 	eor r12,r12,r5,LSR #2
 2254              	
 2255              	# qhasm: hitmp ^= (hiu0 << 30)
 2256              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSL #30
 2257              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSL #30
 2258 048c 8CEA867C 	eor r12,r12,r6,LSL #30
 2259              	
 2260              	# qhasm: hitmp ^= (hiu0 unsigned>> 28)
 2261              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSR #28
 2262              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSR #28
 2263 0490 8CEA167C 	eor r12,r12,r6,LSR #28
 2264              	
 2265              	# qhasm: hitmp ^= (lou0 << 4)
 2266              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSL #4
 2267              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSL #4
 2268 0494 8CEA051C 	eor r12,r12,r5,LSL #4
 2269              	
 2270              	# qhasm: carry? lou4 += lotmp
 2271              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#12
 2272              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r11
 2273 0498 11EB0B01 	adds r1,r1,r11
 2274              	
 2275              	# qhasm: hiu4 += hitmp + carry
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 41


 2276              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#13
 2277              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r12
 2278 049c 42EB0C02 	adc r2,r2,r12
 2279              	
 2280              	# qhasm: lotmp = lou1 ^ lou3
 2281              	# asm 1: eor >lotmp=int32#12,<lou1=int32#8,<lou3=int32#10
 2282              	# asm 2: eor >lotmp=r11,<lou1=r7,<lou3=r9
 2283 04a0 87EA090B 	eor r11,r7,r9
 2284              	
 2285              	# qhasm: lotmp &= lou0
 2286              	# asm 1: and >lotmp=int32#6,<lotmp=int32#12,<lou0=int32#6
 2287              	# asm 2: and >lotmp=r5,<lotmp=r11,<lou0=r5
 2288 04a4 0BEA0505 	and r5,r11,r5
 2289              	
 2290              	# qhasm: lotmp2 = lou1 & lou3
 2291              	# asm 1: and >lotmp2=int32#8,<lou1=int32#8,<lou3=int32#10
 2292              	# asm 2: and >lotmp2=r7,<lou1=r7,<lou3=r9
 2293 04a8 07EA0907 	and r7,r7,r9
 2294              	
 2295              	# qhasm: lotmp ^= lotmp2
 2296              	# asm 1: eor >lotmp=int32#6,<lotmp=int32#6,<lotmp2=int32#8
 2297              	# asm 2: eor >lotmp=r5,<lotmp=r5,<lotmp2=r7
 2298 04ac 85EA0705 	eor r5,r5,r7
 2299              	
 2300              	# qhasm: carry? lou4 += lotmp
 2301              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#6
 2302              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r5
 2303 04b0 11EB0501 	adds.w r1,r1,r5
 2304              	
 2305              	# qhasm: hitmp = hiu1 ^ hiu3
 2306              	# asm 1: eor >hitmp=int32#6,<hiu1=int32#9,<hiu3=int32#11
 2307              	# asm 2: eor >hitmp=r5,<hiu1=r8,<hiu3=r10
 2308 04b4 88EA0A05 	eor r5,r8,r10
 2309              	
 2310              	# qhasm: hitmp &= hiu0
 2311              	# asm 1: and >hitmp=int32#6,<hitmp=int32#6,<hiu0=int32#7
 2312              	# asm 2: and >hitmp=r5,<hitmp=r5,<hiu0=r6
 2313 04b8 05EA0605 	and r5,r5,r6
 2314              	
 2315              	# qhasm: hitmp2 = hiu1 & hiu3
 2316              	# asm 1: and >hitmp2=int32#7,<hiu1=int32#9,<hiu3=int32#11
 2317              	# asm 2: and >hitmp2=r6,<hiu1=r8,<hiu3=r10
 2318 04bc 08EA0A06 	and r6,r8,r10
 2319              	
 2320              	# qhasm: hitmp ^= hitmp2
 2321              	# asm 1: eor >hitmp=int32#6,<hitmp=int32#6,<hitmp2=int32#7
 2322              	# asm 2: eor >hitmp=r5,<hitmp=r5,<hitmp2=r6
 2323 04c0 85EA0605 	eor r5,r5,r6
 2324              	
 2325              	# qhasm: hiu4 += hitmp + carry
 2326              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#6
 2327              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r5
 2328 04c4 42EB0502 	adc r2,r2,r5
 2329              	
 2330              	# qhasm: lod5 = lou4
 2331              	# asm 1: str <lou4=int32#2,>lod5=stack32#13
 2332              	# asm 2: str <lou4=r1,>lod5=[sp,#48]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 42


 2333              	# copy-collector input: str r1,[sp,#48]
 2334              	
 2335              	# qhasm: hid5 = hiu4
 2336              	# asm 1: str <hiu4=int32#3,>hid5=stack32#14
 2337              	# asm 2: str <hiu4=r2,>hid5=[sp,#52]
 2338              	# copy-collector input: str r2,[sp,#52]
 2339              	
 2340              	# qhasm: lou0 = lod2
 2341              	# asm 1: ldr >lou0=int32#2,<lod2=stack32#33
 2342              	# asm 2: ldr >lou0=r1,<lod2=[sp,#128]
 2343              	# copy-collector input: ldr r1,[sp,#128]
 2344              	
 2345              	# qhasm: hiu0 = hid2
 2346              	# asm 1: ldr >hiu0=int32#3,<hid2=stack32#34
 2347              	# asm 2: ldr >hiu0=r2,<hid2=[sp,#132]
 2348              	# copy-collector input: ldr r2,[sp,#132]
 2349              	
 2350              	# qhasm: lou1 = lod3
 2351              	# asm 1: ldr >lou1=int32#6,<lod3=stack32#4
 2352              	# asm 2: ldr >lou1=r5,<lod3=[sp,#12]
 2353              	# copy-collector input: ldr r5,[sp,#12]
 2354              	
 2355              	# qhasm: hiu1 = hid3
 2356              	# asm 1: ldr >hiu1=int32#7,<hid3=stack32#19
 2357              	# asm 2: ldr >hiu1=r6,<hid3=[sp,#72]
 2358              	# copy-collector input: ldr r6,[sp,#72]
 2359              	
 2360              	# qhasm: lou4 = lod4
 2361              	# asm 1: ldr >lou4=int32#8,<lod4=stack32#29
 2362              	# asm 2: ldr >lou4=r7,<lod4=[sp,#112]
 2363              	# copy-collector input: ldr r7,[sp,#112]
 2364              	
 2365              	# qhasm: hiu4 = hid4
 2366              	# asm 1: ldr >hiu4=int32#9,<hid4=stack32#30
 2367              	# asm 2: ldr >hiu4=r8,<hid4=[sp,#116]
 2368              	# copy-collector input: ldr r8,[sp,#116]
 2369              	
 2370              	# qhasm: lou5 = lod11
 2371              	# asm 1: ldr >lou5=int32#12,<lod11=stack32#43
 2372              	# asm 2: ldr >lou5=r11,<lod11=[sp,#168]
 2373              	# copy-collector input: ldr r11,[sp,#168]
 2374              	
 2375              	# qhasm: hiu5 = hid11
 2376              	# asm 1: ldr >hiu5=int32#13,<hid11=stack32#44
 2377              	# asm 2: ldr >hiu5=r12,<hid11=[sp,#172]
 2378              	# copy-collector input: ldr r12,[sp,#172]
 2379              	
 2380              	# qhasm: two23 = 0x800000 simple
 2381              	# asm 1: mov >two23=int32#14,0x800000
 2382              	# asm 2: mov >two23=r14,0x800000
 2383              	# copy-collector output starts
 2384 04c8 CDE90C12 	strd r1,r2,[sp,#48]
 2385 04cc 2099     	ldr r1,[sp,#128]
 2386 04ce 219A     	ldr r2,[sp,#132]
 2387 04d0 039D     	ldr r5,[sp,#12]
 2388 04d2 129E     	ldr r6,[sp,#72]
 2389 04d4 DDF87070 	ldr.w r7,[sp,#112]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 43


 2390 04d8 DDF87480 	ldr r8,[sp,#116]
 2391 04dc DDF8A8B0 	ldr r11,[sp,#168]
 2392 04e0 DDF8ACC0 	ldr r12,[sp,#172]
 2393              	# copy-collector output ends
 2394 04e4 4FF4000E 	mov r14,0x800000
 2395              	
 2396              	# qhasm: carry?  lou4 += lou5
 2397              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lou5=int32#12
 2398              	# asm 2: adds >lou4=r7,<lou4=r7,<lou5=r11
 2399 04e8 17EB0B07 	adds r7,r7,r11
 2400              	
 2401              	# qhasm: hiu4 += hiu5 + carry
 2402              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hiu5=int32#13
 2403              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hiu5=r12
 2404 04ec 48EB0C08 	adc r8,r8,r12
 2405              	
 2406              	# qhasm: lotmp = mem32[input_0]; input_0 += 4
 2407              	# asm 1: ldr >lotmp=int32#12,[<input_0=int32#1],#4
 2408              	# asm 2: ldr >lotmp=r11,[<input_0=r0],#4
 2409              	# copy-collector input: ldr r11,[r0],#4
 2410              	
 2411              	# qhasm: hitmp = mem32[input_0]; input_0 += 4
 2412              	# asm 1: ldr >hitmp=int32#13,[<input_0=int32#1],#4
 2413              	# asm 2: ldr >hitmp=r12,[<input_0=r0],#4
 2414              	# copy-collector input: ldr r12,[r0],#4
 2415              	
 2416              	# qhasm: carry? lou4 += lotmp
 2417              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#12
 2418              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r11
 2419              	# copy-collector output starts
 2420 04f0 50F804BB 	ldr r11,[r0],#4
 2421 04f4 50F804CB 	ldr r12,[r0],#4
 2422              	# copy-collector output ends
 2423 04f8 17EB0B07 	adds r7,r7,r11
 2424              	
 2425              	# qhasm: hiu4 += hitmp + carry
 2426              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#13
 2427              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r12
 2428 04fc 48EB0C08 	adc r8,r8,r12
 2429              	
 2430              	# qhasm: hitmp lotmp = lou2 * two23
 2431              	# asm 1: umull >lotmp=int32#13,>hitmp=int32#12,<lou2=int32#4,<two23=int32#14
 2432              	# asm 2: umull >lotmp=r12,>hitmp=r11,<lou2=r3,<two23=r14
 2433 0500 A3FB0ECB 	umull r12,r11,r3,r14
 2434              	
 2435              	# qhasm: lotmp hitmp += hiu2 * two23
 2436              	# asm 1: umlal <hitmp=int32#12,<lotmp=int32#13,<hiu2=int32#5,<two23=int32#14
 2437              	# asm 2: umlal <hitmp=r11,<lotmp=r12,<hiu2=r4,<two23=r14
 2438 0504 E4FB0EBC 	umlal r11,r12,r4,r14
 2439              	
 2440              	# qhasm: lotmp ^= (lou2 unsigned>> 18)
 2441              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou2=int32#4,LSR #18
 2442              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou2=r3,LSR #18
 2443 0508 8CEA934C 	eor r12,r12,r3,LSR #18
 2444              	
 2445              	# qhasm: lotmp ^= (hiu2 << 14)
 2446              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu2=int32#5,LSL #14
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 44


 2447              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu2=r4,LSL #14
 2448 050c 8CEA843C 	eor r12,r12,r4,LSL #14
 2449              	
 2450              	# qhasm: lotmp ^= (lou2 unsigned>> 14)
 2451              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou2=int32#4,LSR #14
 2452              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou2=r3,LSR #14
 2453 0510 8CEA933C 	eor r12,r12,r3,LSR #14
 2454              	
 2455              	# qhasm: lotmp ^= (hiu2 << 18)
 2456              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu2=int32#5,LSL #18
 2457              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu2=r4,LSL #18
 2458 0514 8CEA844C 	eor r12,r12,r4,LSL #18
 2459              	
 2460              	# qhasm: hitmp ^= (hiu2 unsigned>> 18)
 2461              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu2=int32#5,LSR #18
 2462              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu2=r4,LSR #18
 2463 0518 8BEA944B 	eor r11,r11,r4,LSR #18
 2464              	
 2465              	# qhasm: hitmp ^= (lou2 << 14)
 2466              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou2=int32#4,LSL #14
 2467              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou2=r3,LSL #14
 2468 051c 8BEA833B 	eor r11,r11,r3,LSL #14
 2469              	
 2470              	# qhasm: hitmp ^= (hiu2 unsigned>> 14)
 2471              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu2=int32#5,LSR #14
 2472              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu2=r4,LSR #14
 2473 0520 8BEA943B 	eor r11,r11,r4,LSR #14
 2474              	
 2475              	# qhasm: hitmp ^= (lou2 << 18)
 2476              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou2=int32#4,LSL #18
 2477              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou2=r3,LSL #18
 2478 0524 8BEA834B 	eor r11,r11,r3,LSL #18
 2479              	
 2480              	# qhasm: carry? lou4 += lotmp
 2481              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#13
 2482              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r12
 2483 0528 17EB0C07 	adds r7,r7,r12
 2484              	
 2485              	# qhasm: hiu4 += hitmp + carry
 2486              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#12
 2487              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r11
 2488 052c 48EB0B08 	adc r8,r8,r11
 2489              	
 2490              	# qhasm: lotmp = lou2 & lou0
 2491              	# asm 1: and >lotmp=int32#2,<lou2=int32#4,<lou0=int32#2
 2492              	# asm 2: and >lotmp=r1,<lou2=r3,<lou0=r1
 2493 0530 03EA0101 	and r1,r3,r1
 2494              	
 2495              	# qhasm: lotmp2 = lou1 & ~lou2
 2496              	# asm 1: bic >lotmp2=int32#4,<lou1=int32#6,<lou2=int32#4
 2497              	# asm 2: bic >lotmp2=r3,<lou1=r5,<lou2=r3
 2498 0534 25EA0303 	bic r3,r5,r3
 2499              	
 2500              	# qhasm: lotmp ^= lotmp2
 2501              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#2,<lotmp2=int32#4
 2502              	# asm 2: eor >lotmp=r1,<lotmp=r1,<lotmp2=r3
 2503 0538 81EA0301 	eor r1,r1,r3
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 45


 2504              	
 2505              	# qhasm: carry? lou4 += lotmp
 2506              	# asm 1: adds >lou4=int32#2,<lou4=int32#8,<lotmp=int32#2
 2507              	# asm 2: adds >lou4=r1,<lou4=r7,<lotmp=r1
 2508 053c 17EB0101 	adds.w r1,r7,r1
 2509              	
 2510              	# qhasm: hitmp = hiu2 & hiu0
 2511              	# asm 1: and >hitmp=int32#3,<hiu2=int32#5,<hiu0=int32#3
 2512              	# asm 2: and >hitmp=r2,<hiu2=r4,<hiu0=r2
 2513 0540 04EA0202 	and r2,r4,r2
 2514              	
 2515              	# qhasm: hitmp2 = hiu1 & ~hiu2
 2516              	# asm 1: bic >hitmp2=int32#4,<hiu1=int32#7,<hiu2=int32#5
 2517              	# asm 2: bic >hitmp2=r3,<hiu1=r6,<hiu2=r4
 2518 0544 26EA0403 	bic r3,r6,r4
 2519              	
 2520              	# qhasm: hitmp ^= hitmp2
 2521              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<hitmp2=int32#4
 2522              	# asm 2: eor >hitmp=r2,<hitmp=r2,<hitmp2=r3
 2523 0548 82EA0302 	eor r2,r2,r3
 2524              	
 2525              	# qhasm: hiu4 += hitmp + carry
 2526              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#9,<hitmp=int32#3
 2527              	# asm 2: adc >hiu4=r2,<hiu4=r8,<hitmp=r2
 2528 054c 48EB0202 	adc r2,r8,r2
 2529              	
 2530              	# qhasm: carry? lou3 += lou4
 2531              	# asm 1: adds >lou3=int32#4,<lou3=int32#10,<lou4=int32#2
 2532              	# asm 2: adds >lou3=r3,<lou3=r9,<lou4=r1
 2533 0550 19EB0103 	adds r3,r9,r1
 2534              	
 2535              	# qhasm: hiu3 += hiu4 + carry
 2536              	# asm 1: adc >hiu3=int32#5,<hiu3=int32#11,<hiu4=int32#3
 2537              	# asm 2: adc >hiu3=r4,<hiu3=r10,<hiu4=r2
 2538 0554 4AEB0204 	adc r4,r10,r2
 2539              	
 2540              	# qhasm: lod0 = lou3
 2541              	# asm 1: str <lou3=int32#4,>lod0=stack32#29
 2542              	# asm 2: str <lou3=r3,>lod0=[sp,#112]
 2543              	# copy-collector input: str r3,[sp,#112]
 2544              	
 2545              	# qhasm: hid0 = hiu3
 2546              	# asm 1: str <hiu3=int32#5,>hid0=stack32#30
 2547              	# asm 2: str <hiu3=r4,>hid0=[sp,#116]
 2548              	# copy-collector input: str r4,[sp,#116]
 2549              	
 2550              	# qhasm: lou0 = lod5
 2551              	# asm 1: ldr >lou0=int32#6,<lod5=stack32#13
 2552              	# asm 2: ldr >lou0=r5,<lod5=[sp,#48]
 2553              	# copy-collector input: ldr r5,[sp,#48]
 2554              	
 2555              	# qhasm: hiu0 = hid5
 2556              	# asm 1: ldr >hiu0=int32#7,<hid5=stack32#14
 2557              	# asm 2: ldr >hiu0=r6,<hid5=[sp,#52]
 2558              	# copy-collector input: ldr r6,[sp,#52]
 2559              	
 2560              	# qhasm: lou1 = lod6
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 46


 2561              	# asm 1: ldr >lou1=int32#8,<lod6=stack32#15
 2562              	# asm 2: ldr >lou1=r7,<lod6=[sp,#56]
 2563              	# copy-collector input: ldr r7,[sp,#56]
 2564              	
 2565              	# qhasm: hiu1 = hid6
 2566              	# asm 1: ldr >hiu1=int32#9,<hid6=stack32#16
 2567              	# asm 2: ldr >hiu1=r8,<hid6=[sp,#60]
 2568              	# copy-collector input: ldr r8,[sp,#60]
 2569              	
 2570              	# qhasm: lou2 = lod7
 2571              	# asm 1: ldr >lou2=int32#10,<lod7=stack32#17
 2572              	# asm 2: ldr >lou2=r9,<lod7=[sp,#64]
 2573              	# copy-collector input: ldr r9,[sp,#64]
 2574              	
 2575              	# qhasm: hiu2 = hid7
 2576              	# asm 1: ldr >hiu2=int32#11,<hid7=stack32#18
 2577              	# asm 2: ldr >hiu2=r10,<hid7=[sp,#68]
 2578              	# copy-collector input: ldr r10,[sp,#68]
 2579              	
 2580              	# qhasm: two25 = 0x2000000 simple
 2581              	# asm 1: mov >two25=int32#12,0x2000000
 2582              	# asm 2: mov >two25=r11,0x2000000
 2583              	# copy-collector output starts
 2584 0558 CDE91C34 	strd r3,r4,[sp,#112]
 2585 055c 0C9D     	ldr r5,[sp,#48]
 2586 055e 0D9E     	ldr r6,[sp,#52]
 2587 0560 DDF83870 	ldr.w r7,[sp,#56]
 2588 0564 DDF83C80 	ldr r8,[sp,#60]
 2589 0568 DDF84090 	ldr r9,[sp,#64]
 2590 056c DDF844A0 	ldr r10,[sp,#68]
 2591              	# copy-collector output ends
 2592 0570 4FF0007B 	mov r11,0x2000000
 2593              	
 2594              	# qhasm: hitmp lotmp = lou0 * two25
 2595              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<lou0=int32#6,<two25=int32#12
 2596              	# asm 2: umull >lotmp=r14,>hitmp=r12,<lou0=r5,<two25=r11
 2597 0574 A5FB0BEC 	umull r14,r12,r5,r11
 2598              	
 2599              	# qhasm: lotmp hitmp += hiu0 * two25
 2600              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<hiu0=int32#7,<two25=int32#12
 2601              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<hiu0=r6,<two25=r11
 2602 0578 E6FB0BCE 	umlal r12,r14,r6,r11
 2603              	
 2604              	# qhasm: lotmp ^= (hiu0 unsigned>> 2)
 2605              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#14,<hiu0=int32#7,LSR #2
 2606              	# asm 2: eor >lotmp=r11,<lotmp=r14,<hiu0=r6,LSR #2
 2607 057c 8EEA960B 	eor r11,r14,r6,LSR #2
 2608              	
 2609              	# qhasm: lotmp ^= (lou0 << 30)
 2610              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSL #30
 2611              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSL #30
 2612 0580 8BEA857B 	eor r11,r11,r5,LSL #30
 2613              	
 2614              	# qhasm: lotmp ^= (lou0 unsigned>> 28)
 2615              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSR #28
 2616              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSR #28
 2617 0584 8BEA157B 	eor r11,r11,r5,LSR #28
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 47


 2618              	
 2619              	# qhasm: lotmp ^= (hiu0 << 4)
 2620              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu0=int32#7,LSL #4
 2621              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu0=r6,LSL #4
 2622 0588 8BEA061B 	eor r11,r11,r6,LSL #4
 2623              	
 2624              	# qhasm: hitmp ^= (lou0 unsigned>> 2)
 2625              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSR #2
 2626              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSR #2
 2627 058c 8CEA950C 	eor r12,r12,r5,LSR #2
 2628              	
 2629              	# qhasm: hitmp ^= (hiu0 << 30)
 2630              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSL #30
 2631              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSL #30
 2632 0590 8CEA867C 	eor r12,r12,r6,LSL #30
 2633              	
 2634              	# qhasm: hitmp ^= (hiu0 unsigned>> 28)
 2635              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSR #28
 2636              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSR #28
 2637 0594 8CEA167C 	eor r12,r12,r6,LSR #28
 2638              	
 2639              	# qhasm: hitmp ^= (lou0 << 4)
 2640              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSL #4
 2641              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSL #4
 2642 0598 8CEA051C 	eor r12,r12,r5,LSL #4
 2643              	
 2644              	# qhasm: carry? lou4 += lotmp
 2645              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#12
 2646              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r11
 2647 059c 11EB0B01 	adds r1,r1,r11
 2648              	
 2649              	# qhasm: hiu4 += hitmp + carry
 2650              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#13
 2651              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r12
 2652 05a0 42EB0C02 	adc r2,r2,r12
 2653              	
 2654              	# qhasm: lotmp = lou1 ^ lou2
 2655              	# asm 1: eor >lotmp=int32#12,<lou1=int32#8,<lou2=int32#10
 2656              	# asm 2: eor >lotmp=r11,<lou1=r7,<lou2=r9
 2657 05a4 87EA090B 	eor r11,r7,r9
 2658              	
 2659              	# qhasm: lotmp &= lou0
 2660              	# asm 1: and >lotmp=int32#6,<lotmp=int32#12,<lou0=int32#6
 2661              	# asm 2: and >lotmp=r5,<lotmp=r11,<lou0=r5
 2662 05a8 0BEA0505 	and r5,r11,r5
 2663              	
 2664              	# qhasm: lotmp2 = lou1 & lou2
 2665              	# asm 1: and >lotmp2=int32#8,<lou1=int32#8,<lou2=int32#10
 2666              	# asm 2: and >lotmp2=r7,<lou1=r7,<lou2=r9
 2667 05ac 07EA0907 	and r7,r7,r9
 2668              	
 2669              	# qhasm: lotmp ^= lotmp2
 2670              	# asm 1: eor >lotmp=int32#6,<lotmp=int32#6,<lotmp2=int32#8
 2671              	# asm 2: eor >lotmp=r5,<lotmp=r5,<lotmp2=r7
 2672 05b0 85EA0705 	eor r5,r5,r7
 2673              	
 2674              	# qhasm: carry? lou4 += lotmp
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 48


 2675              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#6
 2676              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r5
 2677 05b4 11EB0501 	adds.w r1,r1,r5
 2678              	
 2679              	# qhasm: hitmp = hiu1 ^ hiu2
 2680              	# asm 1: eor >hitmp=int32#6,<hiu1=int32#9,<hiu2=int32#11
 2681              	# asm 2: eor >hitmp=r5,<hiu1=r8,<hiu2=r10
 2682 05b8 88EA0A05 	eor r5,r8,r10
 2683              	
 2684              	# qhasm: hitmp &= hiu0
 2685              	# asm 1: and >hitmp=int32#6,<hitmp=int32#6,<hiu0=int32#7
 2686              	# asm 2: and >hitmp=r5,<hitmp=r5,<hiu0=r6
 2687 05bc 05EA0605 	and r5,r5,r6
 2688              	
 2689              	# qhasm: hitmp2 = hiu1 & hiu2
 2690              	# asm 1: and >hitmp2=int32#7,<hiu1=int32#9,<hiu2=int32#11
 2691              	# asm 2: and >hitmp2=r6,<hiu1=r8,<hiu2=r10
 2692 05c0 08EA0A06 	and r6,r8,r10
 2693              	
 2694              	# qhasm: hitmp ^= hitmp2
 2695              	# asm 1: eor >hitmp=int32#6,<hitmp=int32#6,<hitmp2=int32#7
 2696              	# asm 2: eor >hitmp=r5,<hitmp=r5,<hitmp2=r6
 2697 05c4 85EA0605 	eor r5,r5,r6
 2698              	
 2699              	# qhasm: hiu4 += hitmp + carry
 2700              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#6
 2701              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r5
 2702 05c8 42EB0502 	adc r2,r2,r5
 2703              	
 2704              	# qhasm: lod4 = lou4
 2705              	# asm 1: str <lou4=int32#2,>lod4=stack32#70
 2706              	# asm 2: str <lou4=r1,>lod4=[sp,#276]
 2707              	# copy-collector input: str r1,[sp,#276]
 2708              	
 2709              	# qhasm: hid4 = hiu4
 2710              	# asm 1: str <hiu4=int32#3,>hid4=stack32#71
 2711              	# asm 2: str <hiu4=r2,>hid4=[sp,#280]
 2712              	# copy-collector input: str r2,[sp,#280]
 2713              	
 2714              	# qhasm: lou0 = lod1
 2715              	# asm 1: ldr >lou0=int32#2,<lod1=stack32#31
 2716              	# asm 2: ldr >lou0=r1,<lod1=[sp,#120]
 2717              	# copy-collector input: ldr r1,[sp,#120]
 2718              	
 2719              	# qhasm: hiu0 = hid1
 2720              	# asm 1: ldr >hiu0=int32#3,<hid1=stack32#32
 2721              	# asm 2: ldr >hiu0=r2,<hid1=[sp,#124]
 2722              	# copy-collector input: ldr r2,[sp,#124]
 2723              	
 2724              	# qhasm: lou1 = lod2
 2725              	# asm 1: ldr >lou1=int32#6,<lod2=stack32#33
 2726              	# asm 2: ldr >lou1=r5,<lod2=[sp,#128]
 2727              	# copy-collector input: ldr r5,[sp,#128]
 2728              	
 2729              	# qhasm: hiu1 = hid2
 2730              	# asm 1: ldr >hiu1=int32#7,<hid2=stack32#34
 2731              	# asm 2: ldr >hiu1=r6,<hid2=[sp,#132]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 49


 2732              	# copy-collector input: ldr r6,[sp,#132]
 2733              	
 2734              	# qhasm: lou4 = lod3
 2735              	# asm 1: ldr >lou4=int32#8,<lod3=stack32#4
 2736              	# asm 2: ldr >lou4=r7,<lod3=[sp,#12]
 2737              	# copy-collector input: ldr r7,[sp,#12]
 2738              	
 2739              	# qhasm: hiu4 = hid3
 2740              	# asm 1: ldr >hiu4=int32#9,<hid3=stack32#19
 2741              	# asm 2: ldr >hiu4=r8,<hid3=[sp,#72]
 2742              	# copy-collector input: ldr r8,[sp,#72]
 2743              	
 2744              	# qhasm: lou5 = lod12
 2745              	# asm 1: ldr >lou5=int32#12,<lod12=stack32#45
 2746              	# asm 2: ldr >lou5=r11,<lod12=[sp,#176]
 2747              	# copy-collector input: ldr r11,[sp,#176]
 2748              	
 2749              	# qhasm: hiu5 = hid12
 2750              	# asm 1: ldr >hiu5=int32#13,<hid12=stack32#46
 2751              	# asm 2: ldr >hiu5=r12,<hid12=[sp,#180]
 2752              	# copy-collector input: ldr r12,[sp,#180]
 2753              	
 2754              	# qhasm: two23 = 0x800000 simple
 2755              	# asm 1: mov >two23=int32#14,0x800000
 2756              	# asm 2: mov >two23=r14,0x800000
 2757              	# copy-collector output starts
 2758 05cc CDE94512 	strd r1,r2,[sp,#276]
 2759 05d0 1E99     	ldr r1,[sp,#120]
 2760 05d2 1F9A     	ldr r2,[sp,#124]
 2761 05d4 209D     	ldr r5,[sp,#128]
 2762 05d6 219E     	ldr r6,[sp,#132]
 2763 05d8 DDF80C70 	ldr.w r7,[sp,#12]
 2764 05dc DDF84880 	ldr r8,[sp,#72]
 2765 05e0 DDF8B0B0 	ldr r11,[sp,#176]
 2766 05e4 DDF8B4C0 	ldr r12,[sp,#180]
 2767              	# copy-collector output ends
 2768 05e8 4FF4000E 	mov r14,0x800000
 2769              	
 2770              	# qhasm: carry?  lou4 += lou5
 2771              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lou5=int32#12
 2772              	# asm 2: adds >lou4=r7,<lou4=r7,<lou5=r11
 2773 05ec 17EB0B07 	adds r7,r7,r11
 2774              	
 2775              	# qhasm: hiu4 += hiu5 + carry
 2776              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hiu5=int32#13
 2777              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hiu5=r12
 2778 05f0 48EB0C08 	adc r8,r8,r12
 2779              	
 2780              	# qhasm: lotmp = mem32[input_0]; input_0 += 4
 2781              	# asm 1: ldr >lotmp=int32#12,[<input_0=int32#1],#4
 2782              	# asm 2: ldr >lotmp=r11,[<input_0=r0],#4
 2783              	# copy-collector input: ldr r11,[r0],#4
 2784              	
 2785              	# qhasm: hitmp = mem32[input_0]; input_0 += 4
 2786              	# asm 1: ldr >hitmp=int32#13,[<input_0=int32#1],#4
 2787              	# asm 2: ldr >hitmp=r12,[<input_0=r0],#4
 2788              	# copy-collector input: ldr r12,[r0],#4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 50


 2789              	
 2790              	# qhasm: carry? lou4 += lotmp
 2791              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#12
 2792              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r11
 2793              	# copy-collector output starts
 2794 05f4 50F804BB 	ldr r11,[r0],#4
 2795 05f8 50F804CB 	ldr r12,[r0],#4
 2796              	# copy-collector output ends
 2797 05fc 17EB0B07 	adds r7,r7,r11
 2798              	
 2799              	# qhasm: hiu4 += hitmp + carry
 2800              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#13
 2801              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r12
 2802 0600 48EB0C08 	adc r8,r8,r12
 2803              	
 2804              	# qhasm: hitmp lotmp = lou3 * two23
 2805              	# asm 1: umull >lotmp=int32#13,>hitmp=int32#12,<lou3=int32#4,<two23=int32#14
 2806              	# asm 2: umull >lotmp=r12,>hitmp=r11,<lou3=r3,<two23=r14
 2807 0604 A3FB0ECB 	umull r12,r11,r3,r14
 2808              	
 2809              	# qhasm: lotmp hitmp += hiu3 * two23
 2810              	# asm 1: umlal <hitmp=int32#12,<lotmp=int32#13,<hiu3=int32#5,<two23=int32#14
 2811              	# asm 2: umlal <hitmp=r11,<lotmp=r12,<hiu3=r4,<two23=r14
 2812 0608 E4FB0EBC 	umlal r11,r12,r4,r14
 2813              	
 2814              	# qhasm: lotmp ^= (lou3 unsigned>> 18)
 2815              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou3=int32#4,LSR #18
 2816              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou3=r3,LSR #18
 2817 060c 8CEA934C 	eor r12,r12,r3,LSR #18
 2818              	
 2819              	# qhasm: lotmp ^= (hiu3 << 14)
 2820              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu3=int32#5,LSL #14
 2821              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu3=r4,LSL #14
 2822 0610 8CEA843C 	eor r12,r12,r4,LSL #14
 2823              	
 2824              	# qhasm: lotmp ^= (lou3 unsigned>> 14)
 2825              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou3=int32#4,LSR #14
 2826              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou3=r3,LSR #14
 2827 0614 8CEA933C 	eor r12,r12,r3,LSR #14
 2828              	
 2829              	# qhasm: lotmp ^= (hiu3 << 18)
 2830              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu3=int32#5,LSL #18
 2831              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu3=r4,LSL #18
 2832 0618 8CEA844C 	eor r12,r12,r4,LSL #18
 2833              	
 2834              	# qhasm: hitmp ^= (hiu3 unsigned>> 18)
 2835              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu3=int32#5,LSR #18
 2836              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu3=r4,LSR #18
 2837 061c 8BEA944B 	eor r11,r11,r4,LSR #18
 2838              	
 2839              	# qhasm: hitmp ^= (lou3 << 14)
 2840              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou3=int32#4,LSL #14
 2841              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou3=r3,LSL #14
 2842 0620 8BEA833B 	eor r11,r11,r3,LSL #14
 2843              	
 2844              	# qhasm: hitmp ^= (hiu3 unsigned>> 14)
 2845              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu3=int32#5,LSR #14
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 51


 2846              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu3=r4,LSR #14
 2847 0624 8BEA943B 	eor r11,r11,r4,LSR #14
 2848              	
 2849              	# qhasm: hitmp ^= (lou3 << 18)
 2850              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou3=int32#4,LSL #18
 2851              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou3=r3,LSL #18
 2852 0628 8BEA834B 	eor r11,r11,r3,LSL #18
 2853              	
 2854              	# qhasm: carry? lou4 += lotmp
 2855              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#13
 2856              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r12
 2857 062c 17EB0C07 	adds r7,r7,r12
 2858              	
 2859              	# qhasm: hiu4 += hitmp + carry
 2860              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#12
 2861              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r11
 2862 0630 48EB0B08 	adc r8,r8,r11
 2863              	
 2864              	# qhasm: lotmp = lou3 & lou0
 2865              	# asm 1: and >lotmp=int32#2,<lou3=int32#4,<lou0=int32#2
 2866              	# asm 2: and >lotmp=r1,<lou3=r3,<lou0=r1
 2867 0634 03EA0101 	and r1,r3,r1
 2868              	
 2869              	# qhasm: lotmp2 = lou1 & ~lou3
 2870              	# asm 1: bic >lotmp2=int32#4,<lou1=int32#6,<lou3=int32#4
 2871              	# asm 2: bic >lotmp2=r3,<lou1=r5,<lou3=r3
 2872 0638 25EA0303 	bic r3,r5,r3
 2873              	
 2874              	# qhasm: lotmp ^= lotmp2
 2875              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#2,<lotmp2=int32#4
 2876              	# asm 2: eor >lotmp=r1,<lotmp=r1,<lotmp2=r3
 2877 063c 81EA0301 	eor r1,r1,r3
 2878              	
 2879              	# qhasm: carry? lou4 += lotmp
 2880              	# asm 1: adds >lou4=int32#2,<lou4=int32#8,<lotmp=int32#2
 2881              	# asm 2: adds >lou4=r1,<lou4=r7,<lotmp=r1
 2882 0640 17EB0101 	adds.w r1,r7,r1
 2883              	
 2884              	# qhasm: hitmp = hiu3 & hiu0
 2885              	# asm 1: and >hitmp=int32#3,<hiu3=int32#5,<hiu0=int32#3
 2886              	# asm 2: and >hitmp=r2,<hiu3=r4,<hiu0=r2
 2887 0644 04EA0202 	and r2,r4,r2
 2888              	
 2889              	# qhasm: hitmp2 = hiu1 & ~hiu3
 2890              	# asm 1: bic >hitmp2=int32#4,<hiu1=int32#7,<hiu3=int32#5
 2891              	# asm 2: bic >hitmp2=r3,<hiu1=r6,<hiu3=r4
 2892 0648 26EA0403 	bic r3,r6,r4
 2893              	
 2894              	# qhasm: hitmp ^= hitmp2
 2895              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<hitmp2=int32#4
 2896              	# asm 2: eor >hitmp=r2,<hitmp=r2,<hitmp2=r3
 2897 064c 82EA0302 	eor r2,r2,r3
 2898              	
 2899              	# qhasm: hiu4 += hitmp + carry
 2900              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#9,<hitmp=int32#3
 2901              	# asm 2: adc >hiu4=r2,<hiu4=r8,<hitmp=r2
 2902 0650 48EB0202 	adc r2,r8,r2
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 52


 2903              	
 2904              	# qhasm: carry? lou2 += lou4
 2905              	# asm 1: adds >lou2=int32#4,<lou2=int32#10,<lou4=int32#2
 2906              	# asm 2: adds >lou2=r3,<lou2=r9,<lou4=r1
 2907 0654 19EB0103 	adds r3,r9,r1
 2908              	
 2909              	# qhasm: hiu2 += hiu4 + carry
 2910              	# asm 1: adc >hiu2=int32#5,<hiu2=int32#11,<hiu4=int32#3
 2911              	# asm 2: adc >hiu2=r4,<hiu2=r10,<hiu4=r2
 2912 0658 4AEB0204 	adc r4,r10,r2
 2913              	
 2914              	# qhasm: lod7 = lou2
 2915              	# asm 1: str <lou2=int32#4,>lod7=stack32#35
 2916              	# asm 2: str <lou2=r3,>lod7=[sp,#136]
 2917              	# copy-collector input: str r3,[sp,#136]
 2918              	
 2919              	# qhasm: hid7 = hiu2
 2920              	# asm 1: str <hiu2=int32#5,>hid7=stack32#36
 2921              	# asm 2: str <hiu2=r4,>hid7=[sp,#140]
 2922              	# copy-collector input: str r4,[sp,#140]
 2923              	
 2924              	# qhasm: lou0 = lod4
 2925              	# asm 1: ldr >lou0=int32#6,<lod4=stack32#70
 2926              	# asm 2: ldr >lou0=r5,<lod4=[sp,#276]
 2927              	# copy-collector input: ldr r5,[sp,#276]
 2928              	
 2929              	# qhasm: hiu0 = hid4
 2930              	# asm 1: ldr >hiu0=int32#7,<hid4=stack32#71
 2931              	# asm 2: ldr >hiu0=r6,<hid4=[sp,#280]
 2932              	# copy-collector input: ldr r6,[sp,#280]
 2933              	
 2934              	# qhasm: lou1 = lod5
 2935              	# asm 1: ldr >lou1=int32#8,<lod5=stack32#13
 2936              	# asm 2: ldr >lou1=r7,<lod5=[sp,#48]
 2937              	# copy-collector input: ldr r7,[sp,#48]
 2938              	
 2939              	# qhasm: hiu1 = hid5
 2940              	# asm 1: ldr >hiu1=int32#9,<hid5=stack32#14
 2941              	# asm 2: ldr >hiu1=r8,<hid5=[sp,#52]
 2942              	# copy-collector input: ldr r8,[sp,#52]
 2943              	
 2944              	# qhasm: lou3 = lod6
 2945              	# asm 1: ldr >lou3=int32#10,<lod6=stack32#15
 2946              	# asm 2: ldr >lou3=r9,<lod6=[sp,#56]
 2947              	# copy-collector input: ldr r9,[sp,#56]
 2948              	
 2949              	# qhasm: hiu3 = hid6
 2950              	# asm 1: ldr >hiu3=int32#11,<hid6=stack32#16
 2951              	# asm 2: ldr >hiu3=r10,<hid6=[sp,#60]
 2952              	# copy-collector input: ldr r10,[sp,#60]
 2953              	
 2954              	# qhasm: two25 = 0x2000000 simple
 2955              	# asm 1: mov >two25=int32#12,0x2000000
 2956              	# asm 2: mov >two25=r11,0x2000000
 2957              	# copy-collector output starts
 2958 065c CDE92234 	strd r3,r4,[sp,#136]
 2959 0660 459D     	ldr r5,[sp,#276]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 53


 2960 0662 469E     	ldr r6,[sp,#280]
 2961 0664 DDF83070 	ldr.w r7,[sp,#48]
 2962 0668 DDF83480 	ldr r8,[sp,#52]
 2963 066c DDF83890 	ldr r9,[sp,#56]
 2964 0670 DDF83CA0 	ldr r10,[sp,#60]
 2965              	# copy-collector output ends
 2966 0674 4FF0007B 	mov r11,0x2000000
 2967              	
 2968              	# qhasm: hitmp lotmp = lou0 * two25
 2969              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<lou0=int32#6,<two25=int32#12
 2970              	# asm 2: umull >lotmp=r14,>hitmp=r12,<lou0=r5,<two25=r11
 2971 0678 A5FB0BEC 	umull r14,r12,r5,r11
 2972              	
 2973              	# qhasm: lotmp hitmp += hiu0 * two25
 2974              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<hiu0=int32#7,<two25=int32#12
 2975              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<hiu0=r6,<two25=r11
 2976 067c E6FB0BCE 	umlal r12,r14,r6,r11
 2977              	
 2978              	# qhasm: lotmp ^= (hiu0 unsigned>> 2)
 2979              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#14,<hiu0=int32#7,LSR #2
 2980              	# asm 2: eor >lotmp=r11,<lotmp=r14,<hiu0=r6,LSR #2
 2981 0680 8EEA960B 	eor r11,r14,r6,LSR #2
 2982              	
 2983              	# qhasm: lotmp ^= (lou0 << 30)
 2984              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSL #30
 2985              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSL #30
 2986 0684 8BEA857B 	eor r11,r11,r5,LSL #30
 2987              	
 2988              	# qhasm: lotmp ^= (lou0 unsigned>> 28)
 2989              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSR #28
 2990              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSR #28
 2991 0688 8BEA157B 	eor r11,r11,r5,LSR #28
 2992              	
 2993              	# qhasm: lotmp ^= (hiu0 << 4)
 2994              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu0=int32#7,LSL #4
 2995              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu0=r6,LSL #4
 2996 068c 8BEA061B 	eor r11,r11,r6,LSL #4
 2997              	
 2998              	# qhasm: hitmp ^= (lou0 unsigned>> 2)
 2999              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSR #2
 3000              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSR #2
 3001 0690 8CEA950C 	eor r12,r12,r5,LSR #2
 3002              	
 3003              	# qhasm: hitmp ^= (hiu0 << 30)
 3004              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSL #30
 3005              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSL #30
 3006 0694 8CEA867C 	eor r12,r12,r6,LSL #30
 3007              	
 3008              	# qhasm: hitmp ^= (hiu0 unsigned>> 28)
 3009              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSR #28
 3010              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSR #28
 3011 0698 8CEA167C 	eor r12,r12,r6,LSR #28
 3012              	
 3013              	# qhasm: hitmp ^= (lou0 << 4)
 3014              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSL #4
 3015              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSL #4
 3016 069c 8CEA051C 	eor r12,r12,r5,LSL #4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 54


 3017              	
 3018              	# qhasm: carry? lou4 += lotmp
 3019              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#12
 3020              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r11
 3021 06a0 11EB0B01 	adds r1,r1,r11
 3022              	
 3023              	# qhasm: hiu4 += hitmp + carry
 3024              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#13
 3025              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r12
 3026 06a4 42EB0C02 	adc r2,r2,r12
 3027              	
 3028              	# qhasm: lotmp = lou1 ^ lou3
 3029              	# asm 1: eor >lotmp=int32#12,<lou1=int32#8,<lou3=int32#10
 3030              	# asm 2: eor >lotmp=r11,<lou1=r7,<lou3=r9
 3031 06a8 87EA090B 	eor r11,r7,r9
 3032              	
 3033              	# qhasm: lotmp &= lou0
 3034              	# asm 1: and >lotmp=int32#6,<lotmp=int32#12,<lou0=int32#6
 3035              	# asm 2: and >lotmp=r5,<lotmp=r11,<lou0=r5
 3036 06ac 0BEA0505 	and r5,r11,r5
 3037              	
 3038              	# qhasm: lotmp2 = lou1 & lou3
 3039              	# asm 1: and >lotmp2=int32#8,<lou1=int32#8,<lou3=int32#10
 3040              	# asm 2: and >lotmp2=r7,<lou1=r7,<lou3=r9
 3041 06b0 07EA0907 	and r7,r7,r9
 3042              	
 3043              	# qhasm: lotmp ^= lotmp2
 3044              	# asm 1: eor >lotmp=int32#6,<lotmp=int32#6,<lotmp2=int32#8
 3045              	# asm 2: eor >lotmp=r5,<lotmp=r5,<lotmp2=r7
 3046 06b4 85EA0705 	eor r5,r5,r7
 3047              	
 3048              	# qhasm: carry? lou4 += lotmp
 3049              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#6
 3050              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r5
 3051 06b8 11EB0501 	adds.w r1,r1,r5
 3052              	
 3053              	# qhasm: hitmp = hiu1 ^ hiu3
 3054              	# asm 1: eor >hitmp=int32#6,<hiu1=int32#9,<hiu3=int32#11
 3055              	# asm 2: eor >hitmp=r5,<hiu1=r8,<hiu3=r10
 3056 06bc 88EA0A05 	eor r5,r8,r10
 3057              	
 3058              	# qhasm: hitmp &= hiu0
 3059              	# asm 1: and >hitmp=int32#6,<hitmp=int32#6,<hiu0=int32#7
 3060              	# asm 2: and >hitmp=r5,<hitmp=r5,<hiu0=r6
 3061 06c0 05EA0605 	and r5,r5,r6
 3062              	
 3063              	# qhasm: hitmp2 = hiu1 & hiu3
 3064              	# asm 1: and >hitmp2=int32#7,<hiu1=int32#9,<hiu3=int32#11
 3065              	# asm 2: and >hitmp2=r6,<hiu1=r8,<hiu3=r10
 3066 06c4 08EA0A06 	and r6,r8,r10
 3067              	
 3068              	# qhasm: hitmp ^= hitmp2
 3069              	# asm 1: eor >hitmp=int32#6,<hitmp=int32#6,<hitmp2=int32#7
 3070              	# asm 2: eor >hitmp=r5,<hitmp=r5,<hitmp2=r6
 3071 06c8 85EA0605 	eor r5,r5,r6
 3072              	
 3073              	# qhasm: hiu4 += hitmp + carry
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 55


 3074              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#6
 3075              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r5
 3076 06cc 42EB0502 	adc r2,r2,r5
 3077              	
 3078              	# qhasm: lod3 = lou4
 3079              	# asm 1: str <lou4=int32#2,>lod3=stack32#19
 3080              	# asm 2: str <lou4=r1,>lod3=[sp,#72]
 3081              	# copy-collector input: str r1,[sp,#72]
 3082              	
 3083              	# qhasm: hid3 = hiu4
 3084              	# asm 1: str <hiu4=int32#3,>hid3=stack32#20
 3085              	# asm 2: str <hiu4=r2,>hid3=[sp,#76]
 3086              	# copy-collector input: str r2,[sp,#76]
 3087              	
 3088              	# qhasm: lou0 = lod0
 3089              	# asm 1: ldr >lou0=int32#2,<lod0=stack32#29
 3090              	# asm 2: ldr >lou0=r1,<lod0=[sp,#112]
 3091              	# copy-collector input: ldr r1,[sp,#112]
 3092              	
 3093              	# qhasm: hiu0 = hid0
 3094              	# asm 1: ldr >hiu0=int32#3,<hid0=stack32#30
 3095              	# asm 2: ldr >hiu0=r2,<hid0=[sp,#116]
 3096              	# copy-collector input: ldr r2,[sp,#116]
 3097              	
 3098              	# qhasm: lou1 = lod1
 3099              	# asm 1: ldr >lou1=int32#6,<lod1=stack32#31
 3100              	# asm 2: ldr >lou1=r5,<lod1=[sp,#120]
 3101              	# copy-collector input: ldr r5,[sp,#120]
 3102              	
 3103              	# qhasm: hiu1 = hid1
 3104              	# asm 1: ldr >hiu1=int32#7,<hid1=stack32#32
 3105              	# asm 2: ldr >hiu1=r6,<hid1=[sp,#124]
 3106              	# copy-collector input: ldr r6,[sp,#124]
 3107              	
 3108              	# qhasm: lou4 = lod2
 3109              	# asm 1: ldr >lou4=int32#8,<lod2=stack32#33
 3110              	# asm 2: ldr >lou4=r7,<lod2=[sp,#128]
 3111              	# copy-collector input: ldr r7,[sp,#128]
 3112              	
 3113              	# qhasm: hiu4 = hid2
 3114              	# asm 1: ldr >hiu4=int32#9,<hid2=stack32#34
 3115              	# asm 2: ldr >hiu4=r8,<hid2=[sp,#132]
 3116              	# copy-collector input: ldr r8,[sp,#132]
 3117              	
 3118              	# qhasm: lou5 = lod13
 3119              	# asm 1: ldr >lou5=int32#12,<lod13=stack32#47
 3120              	# asm 2: ldr >lou5=r11,<lod13=[sp,#184]
 3121              	# copy-collector input: ldr r11,[sp,#184]
 3122              	
 3123              	# qhasm: hiu5 = hid13
 3124              	# asm 1: ldr >hiu5=int32#13,<hid13=stack32#48
 3125              	# asm 2: ldr >hiu5=r12,<hid13=[sp,#188]
 3126              	# copy-collector input: ldr r12,[sp,#188]
 3127              	
 3128              	# qhasm: two23 = 0x800000 simple
 3129              	# asm 1: mov >two23=int32#14,0x800000
 3130              	# asm 2: mov >two23=r14,0x800000
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 56


 3131              	# copy-collector output starts
 3132 06d0 CDE91212 	strd r1,r2,[sp,#72]
 3133 06d4 1C99     	ldr r1,[sp,#112]
 3134 06d6 1D9A     	ldr r2,[sp,#116]
 3135 06d8 1E9D     	ldr r5,[sp,#120]
 3136 06da 1F9E     	ldr r6,[sp,#124]
 3137 06dc DDF88070 	ldr.w r7,[sp,#128]
 3138 06e0 DDF88480 	ldr r8,[sp,#132]
 3139 06e4 DDF8B8B0 	ldr r11,[sp,#184]
 3140 06e8 DDF8BCC0 	ldr r12,[sp,#188]
 3141              	# copy-collector output ends
 3142 06ec 4FF4000E 	mov r14,0x800000
 3143              	
 3144              	# qhasm: carry?  lou4 += lou5
 3145              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lou5=int32#12
 3146              	# asm 2: adds >lou4=r7,<lou4=r7,<lou5=r11
 3147 06f0 17EB0B07 	adds r7,r7,r11
 3148              	
 3149              	# qhasm: hiu4 += hiu5 + carry
 3150              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hiu5=int32#13
 3151              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hiu5=r12
 3152 06f4 48EB0C08 	adc r8,r8,r12
 3153              	
 3154              	# qhasm: lotmp = mem32[input_0]; input_0 += 4
 3155              	# asm 1: ldr >lotmp=int32#12,[<input_0=int32#1],#4
 3156              	# asm 2: ldr >lotmp=r11,[<input_0=r0],#4
 3157              	# copy-collector input: ldr r11,[r0],#4
 3158              	
 3159              	# qhasm: hitmp = mem32[input_0]; input_0 += 4
 3160              	# asm 1: ldr >hitmp=int32#13,[<input_0=int32#1],#4
 3161              	# asm 2: ldr >hitmp=r12,[<input_0=r0],#4
 3162              	# copy-collector input: ldr r12,[r0],#4
 3163              	
 3164              	# qhasm: carry? lou4 += lotmp
 3165              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#12
 3166              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r11
 3167              	# copy-collector output starts
 3168 06f8 50F804BB 	ldr r11,[r0],#4
 3169 06fc 50F804CB 	ldr r12,[r0],#4
 3170              	# copy-collector output ends
 3171 0700 17EB0B07 	adds r7,r7,r11
 3172              	
 3173              	# qhasm: hiu4 += hitmp + carry
 3174              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#13
 3175              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r12
 3176 0704 48EB0C08 	adc r8,r8,r12
 3177              	
 3178              	# qhasm: hitmp lotmp = lou2 * two23
 3179              	# asm 1: umull >lotmp=int32#13,>hitmp=int32#12,<lou2=int32#4,<two23=int32#14
 3180              	# asm 2: umull >lotmp=r12,>hitmp=r11,<lou2=r3,<two23=r14
 3181 0708 A3FB0ECB 	umull r12,r11,r3,r14
 3182              	
 3183              	# qhasm: lotmp hitmp += hiu2 * two23
 3184              	# asm 1: umlal <hitmp=int32#12,<lotmp=int32#13,<hiu2=int32#5,<two23=int32#14
 3185              	# asm 2: umlal <hitmp=r11,<lotmp=r12,<hiu2=r4,<two23=r14
 3186 070c E4FB0EBC 	umlal r11,r12,r4,r14
 3187              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 57


 3188              	# qhasm: lotmp ^= (lou2 unsigned>> 18)
 3189              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou2=int32#4,LSR #18
 3190              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou2=r3,LSR #18
 3191 0710 8CEA934C 	eor r12,r12,r3,LSR #18
 3192              	
 3193              	# qhasm: lotmp ^= (hiu2 << 14)
 3194              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu2=int32#5,LSL #14
 3195              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu2=r4,LSL #14
 3196 0714 8CEA843C 	eor r12,r12,r4,LSL #14
 3197              	
 3198              	# qhasm: lotmp ^= (lou2 unsigned>> 14)
 3199              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou2=int32#4,LSR #14
 3200              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou2=r3,LSR #14
 3201 0718 8CEA933C 	eor r12,r12,r3,LSR #14
 3202              	
 3203              	# qhasm: lotmp ^= (hiu2 << 18)
 3204              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu2=int32#5,LSL #18
 3205              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu2=r4,LSL #18
 3206 071c 8CEA844C 	eor r12,r12,r4,LSL #18
 3207              	
 3208              	# qhasm: hitmp ^= (hiu2 unsigned>> 18)
 3209              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu2=int32#5,LSR #18
 3210              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu2=r4,LSR #18
 3211 0720 8BEA944B 	eor r11,r11,r4,LSR #18
 3212              	
 3213              	# qhasm: hitmp ^= (lou2 << 14)
 3214              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou2=int32#4,LSL #14
 3215              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou2=r3,LSL #14
 3216 0724 8BEA833B 	eor r11,r11,r3,LSL #14
 3217              	
 3218              	# qhasm: hitmp ^= (hiu2 unsigned>> 14)
 3219              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu2=int32#5,LSR #14
 3220              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu2=r4,LSR #14
 3221 0728 8BEA943B 	eor r11,r11,r4,LSR #14
 3222              	
 3223              	# qhasm: hitmp ^= (lou2 << 18)
 3224              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou2=int32#4,LSL #18
 3225              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou2=r3,LSL #18
 3226 072c 8BEA834B 	eor r11,r11,r3,LSL #18
 3227              	
 3228              	# qhasm: carry? lou4 += lotmp
 3229              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#13
 3230              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r12
 3231 0730 17EB0C07 	adds r7,r7,r12
 3232              	
 3233              	# qhasm: hiu4 += hitmp + carry
 3234              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#12
 3235              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r11
 3236 0734 48EB0B08 	adc r8,r8,r11
 3237              	
 3238              	# qhasm: lotmp = lou2 & lou0
 3239              	# asm 1: and >lotmp=int32#2,<lou2=int32#4,<lou0=int32#2
 3240              	# asm 2: and >lotmp=r1,<lou2=r3,<lou0=r1
 3241 0738 03EA0101 	and r1,r3,r1
 3242              	
 3243              	# qhasm: lotmp2 = lou1 & ~lou2
 3244              	# asm 1: bic >lotmp2=int32#4,<lou1=int32#6,<lou2=int32#4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 58


 3245              	# asm 2: bic >lotmp2=r3,<lou1=r5,<lou2=r3
 3246 073c 25EA0303 	bic r3,r5,r3
 3247              	
 3248              	# qhasm: lotmp ^= lotmp2
 3249              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#2,<lotmp2=int32#4
 3250              	# asm 2: eor >lotmp=r1,<lotmp=r1,<lotmp2=r3
 3251 0740 81EA0301 	eor r1,r1,r3
 3252              	
 3253              	# qhasm: carry? lou4 += lotmp
 3254              	# asm 1: adds >lou4=int32#2,<lou4=int32#8,<lotmp=int32#2
 3255              	# asm 2: adds >lou4=r1,<lou4=r7,<lotmp=r1
 3256 0744 17EB0101 	adds.w r1,r7,r1
 3257              	
 3258              	# qhasm: hitmp = hiu2 & hiu0
 3259              	# asm 1: and >hitmp=int32#3,<hiu2=int32#5,<hiu0=int32#3
 3260              	# asm 2: and >hitmp=r2,<hiu2=r4,<hiu0=r2
 3261 0748 04EA0202 	and r2,r4,r2
 3262              	
 3263              	# qhasm: hitmp2 = hiu1 & ~hiu2
 3264              	# asm 1: bic >hitmp2=int32#4,<hiu1=int32#7,<hiu2=int32#5
 3265              	# asm 2: bic >hitmp2=r3,<hiu1=r6,<hiu2=r4
 3266 074c 26EA0403 	bic r3,r6,r4
 3267              	
 3268              	# qhasm: hitmp ^= hitmp2
 3269              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<hitmp2=int32#4
 3270              	# asm 2: eor >hitmp=r2,<hitmp=r2,<hitmp2=r3
 3271 0750 82EA0302 	eor r2,r2,r3
 3272              	
 3273              	# qhasm: hiu4 += hitmp + carry
 3274              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#9,<hitmp=int32#3
 3275              	# asm 2: adc >hiu4=r2,<hiu4=r8,<hitmp=r2
 3276 0754 48EB0202 	adc r2,r8,r2
 3277              	
 3278              	# qhasm: carry? lou3 += lou4
 3279              	# asm 1: adds >lou3=int32#4,<lou3=int32#10,<lou4=int32#2
 3280              	# asm 2: adds >lou3=r3,<lou3=r9,<lou4=r1
 3281 0758 19EB0103 	adds r3,r9,r1
 3282              	
 3283              	# qhasm: hiu3 += hiu4 + carry
 3284              	# asm 1: adc >hiu3=int32#5,<hiu3=int32#11,<hiu4=int32#3
 3285              	# asm 2: adc >hiu3=r4,<hiu3=r10,<hiu4=r2
 3286 075c 4AEB0204 	adc r4,r10,r2
 3287              	
 3288              	# qhasm: lod6 = lou3
 3289              	# asm 1: str <lou3=int32#4,>lod6=stack32#33
 3290              	# asm 2: str <lou3=r3,>lod6=[sp,#128]
 3291              	# copy-collector input: str r3,[sp,#128]
 3292              	
 3293              	# qhasm: hid6 = hiu3
 3294              	# asm 1: str <hiu3=int32#5,>hid6=stack32#34
 3295              	# asm 2: str <hiu3=r4,>hid6=[sp,#132]
 3296              	# copy-collector input: str r4,[sp,#132]
 3297              	
 3298              	# qhasm: lou0 = lod3
 3299              	# asm 1: ldr >lou0=int32#6,<lod3=stack32#19
 3300              	# asm 2: ldr >lou0=r5,<lod3=[sp,#72]
 3301              	# copy-collector input: ldr r5,[sp,#72]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 59


 3302              	
 3303              	# qhasm: hiu0 = hid3
 3304              	# asm 1: ldr >hiu0=int32#7,<hid3=stack32#20
 3305              	# asm 2: ldr >hiu0=r6,<hid3=[sp,#76]
 3306              	# copy-collector input: ldr r6,[sp,#76]
 3307              	
 3308              	# qhasm: lou1 = lod4
 3309              	# asm 1: ldr >lou1=int32#8,<lod4=stack32#70
 3310              	# asm 2: ldr >lou1=r7,<lod4=[sp,#276]
 3311              	# copy-collector input: ldr r7,[sp,#276]
 3312              	
 3313              	# qhasm: hiu1 = hid4
 3314              	# asm 1: ldr >hiu1=int32#9,<hid4=stack32#71
 3315              	# asm 2: ldr >hiu1=r8,<hid4=[sp,#280]
 3316              	# copy-collector input: ldr r8,[sp,#280]
 3317              	
 3318              	# qhasm: lou2 = lod5
 3319              	# asm 1: ldr >lou2=int32#10,<lod5=stack32#13
 3320              	# asm 2: ldr >lou2=r9,<lod5=[sp,#48]
 3321              	# copy-collector input: ldr r9,[sp,#48]
 3322              	
 3323              	# qhasm: hiu2 = hid5
 3324              	# asm 1: ldr >hiu2=int32#11,<hid5=stack32#14
 3325              	# asm 2: ldr >hiu2=r10,<hid5=[sp,#52]
 3326              	# copy-collector input: ldr r10,[sp,#52]
 3327              	
 3328              	# qhasm: two25 = 0x2000000 simple
 3329              	# asm 1: mov >two25=int32#12,0x2000000
 3330              	# asm 2: mov >two25=r11,0x2000000
 3331              	# copy-collector output starts
 3332 0760 CDE92034 	strd r3,r4,[sp,#128]
 3333 0764 129D     	ldr r5,[sp,#72]
 3334 0766 139E     	ldr r6,[sp,#76]
 3335 0768 DDF81471 	ldr.w r7,[sp,#276]
 3336 076c DDF81881 	ldr r8,[sp,#280]
 3337 0770 DDF83090 	ldr r9,[sp,#48]
 3338 0774 DDF834A0 	ldr r10,[sp,#52]
 3339              	# copy-collector output ends
 3340 0778 4FF0007B 	mov r11,0x2000000
 3341              	
 3342              	# qhasm: hitmp lotmp = lou0 * two25
 3343              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<lou0=int32#6,<two25=int32#12
 3344              	# asm 2: umull >lotmp=r14,>hitmp=r12,<lou0=r5,<two25=r11
 3345 077c A5FB0BEC 	umull r14,r12,r5,r11
 3346              	
 3347              	# qhasm: lotmp hitmp += hiu0 * two25
 3348              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<hiu0=int32#7,<two25=int32#12
 3349              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<hiu0=r6,<two25=r11
 3350 0780 E6FB0BCE 	umlal r12,r14,r6,r11
 3351              	
 3352              	# qhasm: lotmp ^= (hiu0 unsigned>> 2)
 3353              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#14,<hiu0=int32#7,LSR #2
 3354              	# asm 2: eor >lotmp=r11,<lotmp=r14,<hiu0=r6,LSR #2
 3355 0784 8EEA960B 	eor r11,r14,r6,LSR #2
 3356              	
 3357              	# qhasm: lotmp ^= (lou0 << 30)
 3358              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSL #30
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 60


 3359              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSL #30
 3360 0788 8BEA857B 	eor r11,r11,r5,LSL #30
 3361              	
 3362              	# qhasm: lotmp ^= (lou0 unsigned>> 28)
 3363              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSR #28
 3364              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSR #28
 3365 078c 8BEA157B 	eor r11,r11,r5,LSR #28
 3366              	
 3367              	# qhasm: lotmp ^= (hiu0 << 4)
 3368              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu0=int32#7,LSL #4
 3369              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu0=r6,LSL #4
 3370 0790 8BEA061B 	eor r11,r11,r6,LSL #4
 3371              	
 3372              	# qhasm: hitmp ^= (lou0 unsigned>> 2)
 3373              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSR #2
 3374              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSR #2
 3375 0794 8CEA950C 	eor r12,r12,r5,LSR #2
 3376              	
 3377              	# qhasm: hitmp ^= (hiu0 << 30)
 3378              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSL #30
 3379              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSL #30
 3380 0798 8CEA867C 	eor r12,r12,r6,LSL #30
 3381              	
 3382              	# qhasm: hitmp ^= (hiu0 unsigned>> 28)
 3383              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSR #28
 3384              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSR #28
 3385 079c 8CEA167C 	eor r12,r12,r6,LSR #28
 3386              	
 3387              	# qhasm: hitmp ^= (lou0 << 4)
 3388              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSL #4
 3389              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSL #4
 3390 07a0 8CEA051C 	eor r12,r12,r5,LSL #4
 3391              	
 3392              	# qhasm: carry? lou4 += lotmp
 3393              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#12
 3394              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r11
 3395 07a4 11EB0B01 	adds r1,r1,r11
 3396              	
 3397              	# qhasm: hiu4 += hitmp + carry
 3398              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#13
 3399              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r12
 3400 07a8 42EB0C02 	adc r2,r2,r12
 3401              	
 3402              	# qhasm: lotmp = lou1 ^ lou2
 3403              	# asm 1: eor >lotmp=int32#12,<lou1=int32#8,<lou2=int32#10
 3404              	# asm 2: eor >lotmp=r11,<lou1=r7,<lou2=r9
 3405 07ac 87EA090B 	eor r11,r7,r9
 3406              	
 3407              	# qhasm: lotmp &= lou0
 3408              	# asm 1: and >lotmp=int32#6,<lotmp=int32#12,<lou0=int32#6
 3409              	# asm 2: and >lotmp=r5,<lotmp=r11,<lou0=r5
 3410 07b0 0BEA0505 	and r5,r11,r5
 3411              	
 3412              	# qhasm: lotmp2 = lou1 & lou2
 3413              	# asm 1: and >lotmp2=int32#8,<lou1=int32#8,<lou2=int32#10
 3414              	# asm 2: and >lotmp2=r7,<lou1=r7,<lou2=r9
 3415 07b4 07EA0907 	and r7,r7,r9
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 61


 3416              	
 3417              	# qhasm: lotmp ^= lotmp2
 3418              	# asm 1: eor >lotmp=int32#6,<lotmp=int32#6,<lotmp2=int32#8
 3419              	# asm 2: eor >lotmp=r5,<lotmp=r5,<lotmp2=r7
 3420 07b8 85EA0705 	eor r5,r5,r7
 3421              	
 3422              	# qhasm: carry? lou4 += lotmp
 3423              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#6
 3424              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r5
 3425 07bc 11EB0501 	adds.w r1,r1,r5
 3426              	
 3427              	# qhasm: hitmp = hiu1 ^ hiu2
 3428              	# asm 1: eor >hitmp=int32#6,<hiu1=int32#9,<hiu2=int32#11
 3429              	# asm 2: eor >hitmp=r5,<hiu1=r8,<hiu2=r10
 3430 07c0 88EA0A05 	eor r5,r8,r10
 3431              	
 3432              	# qhasm: hitmp &= hiu0
 3433              	# asm 1: and >hitmp=int32#6,<hitmp=int32#6,<hiu0=int32#7
 3434              	# asm 2: and >hitmp=r5,<hitmp=r5,<hiu0=r6
 3435 07c4 05EA0605 	and r5,r5,r6
 3436              	
 3437              	# qhasm: hitmp2 = hiu1 & hiu2
 3438              	# asm 1: and >hitmp2=int32#7,<hiu1=int32#9,<hiu2=int32#11
 3439              	# asm 2: and >hitmp2=r6,<hiu1=r8,<hiu2=r10
 3440 07c8 08EA0A06 	and r6,r8,r10
 3441              	
 3442              	# qhasm: hitmp ^= hitmp2
 3443              	# asm 1: eor >hitmp=int32#6,<hitmp=int32#6,<hitmp2=int32#7
 3444              	# asm 2: eor >hitmp=r5,<hitmp=r5,<hitmp2=r6
 3445 07cc 85EA0605 	eor r5,r5,r6
 3446              	
 3447              	# qhasm: hiu4 += hitmp + carry
 3448              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#6
 3449              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r5
 3450 07d0 42EB0502 	adc r2,r2,r5
 3451              	
 3452              	# qhasm: lod2 = lou4
 3453              	# asm 1: str <lou4=int32#2,>lod2=stack32#17
 3454              	# asm 2: str <lou4=r1,>lod2=[sp,#64]
 3455              	# copy-collector input: str r1,[sp,#64]
 3456              	
 3457              	# qhasm: hid2 = hiu4
 3458              	# asm 1: str <hiu4=int32#3,>hid2=stack32#18
 3459              	# asm 2: str <hiu4=r2,>hid2=[sp,#68]
 3460              	# copy-collector input: str r2,[sp,#68]
 3461              	
 3462              	# qhasm: lou0 = lod7
 3463              	# asm 1: ldr >lou0=int32#2,<lod7=stack32#35
 3464              	# asm 2: ldr >lou0=r1,<lod7=[sp,#136]
 3465              	# copy-collector input: ldr r1,[sp,#136]
 3466              	
 3467              	# qhasm: hiu0 = hid7
 3468              	# asm 1: ldr >hiu0=int32#3,<hid7=stack32#36
 3469              	# asm 2: ldr >hiu0=r2,<hid7=[sp,#140]
 3470              	# copy-collector input: ldr r2,[sp,#140]
 3471              	
 3472              	# qhasm: lou1 = lod0
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 62


 3473              	# asm 1: ldr >lou1=int32#6,<lod0=stack32#29
 3474              	# asm 2: ldr >lou1=r5,<lod0=[sp,#112]
 3475              	# copy-collector input: ldr r5,[sp,#112]
 3476              	
 3477              	# qhasm: hiu1 = hid0
 3478              	# asm 1: ldr >hiu1=int32#7,<hid0=stack32#30
 3479              	# asm 2: ldr >hiu1=r6,<hid0=[sp,#116]
 3480              	# copy-collector input: ldr r6,[sp,#116]
 3481              	
 3482              	# qhasm: lou4 = lod1
 3483              	# asm 1: ldr >lou4=int32#8,<lod1=stack32#31
 3484              	# asm 2: ldr >lou4=r7,<lod1=[sp,#120]
 3485              	# copy-collector input: ldr r7,[sp,#120]
 3486              	
 3487              	# qhasm: hiu4 = hid1
 3488              	# asm 1: ldr >hiu4=int32#9,<hid1=stack32#32
 3489              	# asm 2: ldr >hiu4=r8,<hid1=[sp,#124]
 3490              	# copy-collector input: ldr r8,[sp,#124]
 3491              	
 3492              	# qhasm: lou5 = lod14
 3493              	# asm 1: ldr >lou5=int32#12,<lod14=stack32#49
 3494              	# asm 2: ldr >lou5=r11,<lod14=[sp,#192]
 3495              	# copy-collector input: ldr r11,[sp,#192]
 3496              	
 3497              	# qhasm: hiu5 = hid14
 3498              	# asm 1: ldr >hiu5=int32#13,<hid14=stack32#50
 3499              	# asm 2: ldr >hiu5=r12,<hid14=[sp,#196]
 3500              	# copy-collector input: ldr r12,[sp,#196]
 3501              	
 3502              	# qhasm: two23 = 0x800000 simple
 3503              	# asm 1: mov >two23=int32#14,0x800000
 3504              	# asm 2: mov >two23=r14,0x800000
 3505              	# copy-collector output starts
 3506 07d4 CDE91012 	strd r1,r2,[sp,#64]
 3507 07d8 2299     	ldr r1,[sp,#136]
 3508 07da 239A     	ldr r2,[sp,#140]
 3509 07dc 1C9D     	ldr r5,[sp,#112]
 3510 07de 1D9E     	ldr r6,[sp,#116]
 3511 07e0 DDF87870 	ldr.w r7,[sp,#120]
 3512 07e4 DDF87C80 	ldr r8,[sp,#124]
 3513 07e8 DDF8C0B0 	ldr r11,[sp,#192]
 3514 07ec DDF8C4C0 	ldr r12,[sp,#196]
 3515              	# copy-collector output ends
 3516 07f0 4FF4000E 	mov r14,0x800000
 3517              	
 3518              	# qhasm: carry?  lou4 += lou5
 3519              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lou5=int32#12
 3520              	# asm 2: adds >lou4=r7,<lou4=r7,<lou5=r11
 3521 07f4 17EB0B07 	adds r7,r7,r11
 3522              	
 3523              	# qhasm: hiu4 += hiu5 + carry
 3524              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hiu5=int32#13
 3525              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hiu5=r12
 3526 07f8 48EB0C08 	adc r8,r8,r12
 3527              	
 3528              	# qhasm: lotmp = mem32[input_0]; input_0 += 4
 3529              	# asm 1: ldr >lotmp=int32#12,[<input_0=int32#1],#4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 63


 3530              	# asm 2: ldr >lotmp=r11,[<input_0=r0],#4
 3531              	# copy-collector input: ldr r11,[r0],#4
 3532              	
 3533              	# qhasm: hitmp = mem32[input_0]; input_0 += 4
 3534              	# asm 1: ldr >hitmp=int32#13,[<input_0=int32#1],#4
 3535              	# asm 2: ldr >hitmp=r12,[<input_0=r0],#4
 3536              	# copy-collector input: ldr r12,[r0],#4
 3537              	
 3538              	# qhasm: carry? lou4 += lotmp
 3539              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#12
 3540              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r11
 3541              	# copy-collector output starts
 3542 07fc 50F804BB 	ldr r11,[r0],#4
 3543 0800 50F804CB 	ldr r12,[r0],#4
 3544              	# copy-collector output ends
 3545 0804 17EB0B07 	adds r7,r7,r11
 3546              	
 3547              	# qhasm: hiu4 += hitmp + carry
 3548              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#13
 3549              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r12
 3550 0808 48EB0C08 	adc r8,r8,r12
 3551              	
 3552              	# qhasm: hitmp lotmp = lou3 * two23
 3553              	# asm 1: umull >lotmp=int32#13,>hitmp=int32#12,<lou3=int32#4,<two23=int32#14
 3554              	# asm 2: umull >lotmp=r12,>hitmp=r11,<lou3=r3,<two23=r14
 3555 080c A3FB0ECB 	umull r12,r11,r3,r14
 3556              	
 3557              	# qhasm: lotmp hitmp += hiu3 * two23
 3558              	# asm 1: umlal <hitmp=int32#12,<lotmp=int32#13,<hiu3=int32#5,<two23=int32#14
 3559              	# asm 2: umlal <hitmp=r11,<lotmp=r12,<hiu3=r4,<two23=r14
 3560 0810 E4FB0EBC 	umlal r11,r12,r4,r14
 3561              	
 3562              	# qhasm: lotmp ^= (lou3 unsigned>> 18)
 3563              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou3=int32#4,LSR #18
 3564              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou3=r3,LSR #18
 3565 0814 8CEA934C 	eor r12,r12,r3,LSR #18
 3566              	
 3567              	# qhasm: lotmp ^= (hiu3 << 14)
 3568              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu3=int32#5,LSL #14
 3569              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu3=r4,LSL #14
 3570 0818 8CEA843C 	eor r12,r12,r4,LSL #14
 3571              	
 3572              	# qhasm: lotmp ^= (lou3 unsigned>> 14)
 3573              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou3=int32#4,LSR #14
 3574              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou3=r3,LSR #14
 3575 081c 8CEA933C 	eor r12,r12,r3,LSR #14
 3576              	
 3577              	# qhasm: lotmp ^= (hiu3 << 18)
 3578              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu3=int32#5,LSL #18
 3579              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu3=r4,LSL #18
 3580 0820 8CEA844C 	eor r12,r12,r4,LSL #18
 3581              	
 3582              	# qhasm: hitmp ^= (hiu3 unsigned>> 18)
 3583              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu3=int32#5,LSR #18
 3584              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu3=r4,LSR #18
 3585 0824 8BEA944B 	eor r11,r11,r4,LSR #18
 3586              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 64


 3587              	# qhasm: hitmp ^= (lou3 << 14)
 3588              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou3=int32#4,LSL #14
 3589              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou3=r3,LSL #14
 3590 0828 8BEA833B 	eor r11,r11,r3,LSL #14
 3591              	
 3592              	# qhasm: hitmp ^= (hiu3 unsigned>> 14)
 3593              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu3=int32#5,LSR #14
 3594              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu3=r4,LSR #14
 3595 082c 8BEA943B 	eor r11,r11,r4,LSR #14
 3596              	
 3597              	# qhasm: hitmp ^= (lou3 << 18)
 3598              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou3=int32#4,LSL #18
 3599              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou3=r3,LSL #18
 3600 0830 8BEA834B 	eor r11,r11,r3,LSL #18
 3601              	
 3602              	# qhasm: carry? lou4 += lotmp
 3603              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#13
 3604              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r12
 3605 0834 17EB0C07 	adds r7,r7,r12
 3606              	
 3607              	# qhasm: hiu4 += hitmp + carry
 3608              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#12
 3609              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r11
 3610 0838 48EB0B08 	adc r8,r8,r11
 3611              	
 3612              	# qhasm: lotmp = lou3 & lou0
 3613              	# asm 1: and >lotmp=int32#2,<lou3=int32#4,<lou0=int32#2
 3614              	# asm 2: and >lotmp=r1,<lou3=r3,<lou0=r1
 3615 083c 03EA0101 	and r1,r3,r1
 3616              	
 3617              	# qhasm: lotmp2 = lou1 & ~lou3
 3618              	# asm 1: bic >lotmp2=int32#4,<lou1=int32#6,<lou3=int32#4
 3619              	# asm 2: bic >lotmp2=r3,<lou1=r5,<lou3=r3
 3620 0840 25EA0303 	bic r3,r5,r3
 3621              	
 3622              	# qhasm: lotmp ^= lotmp2
 3623              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#2,<lotmp2=int32#4
 3624              	# asm 2: eor >lotmp=r1,<lotmp=r1,<lotmp2=r3
 3625 0844 81EA0301 	eor r1,r1,r3
 3626              	
 3627              	# qhasm: carry? lou4 += lotmp
 3628              	# asm 1: adds >lou4=int32#2,<lou4=int32#8,<lotmp=int32#2
 3629              	# asm 2: adds >lou4=r1,<lou4=r7,<lotmp=r1
 3630 0848 17EB0101 	adds.w r1,r7,r1
 3631              	
 3632              	# qhasm: hitmp = hiu3 & hiu0
 3633              	# asm 1: and >hitmp=int32#3,<hiu3=int32#5,<hiu0=int32#3
 3634              	# asm 2: and >hitmp=r2,<hiu3=r4,<hiu0=r2
 3635 084c 04EA0202 	and r2,r4,r2
 3636              	
 3637              	# qhasm: hitmp2 = hiu1 & ~hiu3
 3638              	# asm 1: bic >hitmp2=int32#4,<hiu1=int32#7,<hiu3=int32#5
 3639              	# asm 2: bic >hitmp2=r3,<hiu1=r6,<hiu3=r4
 3640 0850 26EA0403 	bic r3,r6,r4
 3641              	
 3642              	# qhasm: hitmp ^= hitmp2
 3643              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<hitmp2=int32#4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 65


 3644              	# asm 2: eor >hitmp=r2,<hitmp=r2,<hitmp2=r3
 3645 0854 82EA0302 	eor r2,r2,r3
 3646              	
 3647              	# qhasm: hiu4 += hitmp + carry
 3648              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#9,<hitmp=int32#3
 3649              	# asm 2: adc >hiu4=r2,<hiu4=r8,<hitmp=r2
 3650 0858 48EB0202 	adc r2,r8,r2
 3651              	
 3652              	# qhasm: carry? lou2 += lou4
 3653              	# asm 1: adds >lou2=int32#4,<lou2=int32#10,<lou4=int32#2
 3654              	# asm 2: adds >lou2=r3,<lou2=r9,<lou4=r1
 3655 085c 19EB0103 	adds r3,r9,r1
 3656              	
 3657              	# qhasm: hiu2 += hiu4 + carry
 3658              	# asm 1: adc >hiu2=int32#5,<hiu2=int32#11,<hiu4=int32#3
 3659              	# asm 2: adc >hiu2=r4,<hiu2=r10,<hiu4=r2
 3660 0860 4AEB0204 	adc r4,r10,r2
 3661              	
 3662              	# qhasm: lod5 = lou2
 3663              	# asm 1: str <lou2=int32#4,>lod5=stack32#31
 3664              	# asm 2: str <lou2=r3,>lod5=[sp,#120]
 3665              	# copy-collector input: str r3,[sp,#120]
 3666              	
 3667              	# qhasm: hid5 = hiu2
 3668              	# asm 1: str <hiu2=int32#5,>hid5=stack32#32
 3669              	# asm 2: str <hiu2=r4,>hid5=[sp,#124]
 3670              	# copy-collector input: str r4,[sp,#124]
 3671              	
 3672              	# qhasm: lou0 = lod2
 3673              	# asm 1: ldr >lou0=int32#6,<lod2=stack32#17
 3674              	# asm 2: ldr >lou0=r5,<lod2=[sp,#64]
 3675              	# copy-collector input: ldr r5,[sp,#64]
 3676              	
 3677              	# qhasm: hiu0 = hid2
 3678              	# asm 1: ldr >hiu0=int32#7,<hid2=stack32#18
 3679              	# asm 2: ldr >hiu0=r6,<hid2=[sp,#68]
 3680              	# copy-collector input: ldr r6,[sp,#68]
 3681              	
 3682              	# qhasm: lou1 = lod3
 3683              	# asm 1: ldr >lou1=int32#8,<lod3=stack32#19
 3684              	# asm 2: ldr >lou1=r7,<lod3=[sp,#72]
 3685              	# copy-collector input: ldr r7,[sp,#72]
 3686              	
 3687              	# qhasm: hiu1 = hid3
 3688              	# asm 1: ldr >hiu1=int32#9,<hid3=stack32#20
 3689              	# asm 2: ldr >hiu1=r8,<hid3=[sp,#76]
 3690              	# copy-collector input: ldr r8,[sp,#76]
 3691              	
 3692              	# qhasm: lou3 = lod4
 3693              	# asm 1: ldr >lou3=int32#10,<lod4=stack32#70
 3694              	# asm 2: ldr >lou3=r9,<lod4=[sp,#276]
 3695              	# copy-collector input: ldr r9,[sp,#276]
 3696              	
 3697              	# qhasm: hiu3 = hid4
 3698              	# asm 1: ldr >hiu3=int32#11,<hid4=stack32#71
 3699              	# asm 2: ldr >hiu3=r10,<hid4=[sp,#280]
 3700              	# copy-collector input: ldr r10,[sp,#280]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 66


 3701              	
 3702              	# qhasm: two25 = 0x2000000 simple
 3703              	# asm 1: mov >two25=int32#12,0x2000000
 3704              	# asm 2: mov >two25=r11,0x2000000
 3705              	# copy-collector output starts
 3706 0864 CDE91E34 	strd r3,r4,[sp,#120]
 3707 0868 109D     	ldr r5,[sp,#64]
 3708 086a 119E     	ldr r6,[sp,#68]
 3709 086c DDF84870 	ldr.w r7,[sp,#72]
 3710 0870 DDF84C80 	ldr r8,[sp,#76]
 3711 0874 DDF81491 	ldr r9,[sp,#276]
 3712 0878 DDF818A1 	ldr r10,[sp,#280]
 3713              	# copy-collector output ends
 3714 087c 4FF0007B 	mov r11,0x2000000
 3715              	
 3716              	# qhasm: hitmp lotmp = lou0 * two25
 3717              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<lou0=int32#6,<two25=int32#12
 3718              	# asm 2: umull >lotmp=r14,>hitmp=r12,<lou0=r5,<two25=r11
 3719 0880 A5FB0BEC 	umull r14,r12,r5,r11
 3720              	
 3721              	# qhasm: lotmp hitmp += hiu0 * two25
 3722              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<hiu0=int32#7,<two25=int32#12
 3723              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<hiu0=r6,<two25=r11
 3724 0884 E6FB0BCE 	umlal r12,r14,r6,r11
 3725              	
 3726              	# qhasm: lotmp ^= (hiu0 unsigned>> 2)
 3727              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#14,<hiu0=int32#7,LSR #2
 3728              	# asm 2: eor >lotmp=r11,<lotmp=r14,<hiu0=r6,LSR #2
 3729 0888 8EEA960B 	eor r11,r14,r6,LSR #2
 3730              	
 3731              	# qhasm: lotmp ^= (lou0 << 30)
 3732              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSL #30
 3733              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSL #30
 3734 088c 8BEA857B 	eor r11,r11,r5,LSL #30
 3735              	
 3736              	# qhasm: lotmp ^= (lou0 unsigned>> 28)
 3737              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou0=int32#6,LSR #28
 3738              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou0=r5,LSR #28
 3739 0890 8BEA157B 	eor r11,r11,r5,LSR #28
 3740              	
 3741              	# qhasm: lotmp ^= (hiu0 << 4)
 3742              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu0=int32#7,LSL #4
 3743              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu0=r6,LSL #4
 3744 0894 8BEA061B 	eor r11,r11,r6,LSL #4
 3745              	
 3746              	# qhasm: hitmp ^= (lou0 unsigned>> 2)
 3747              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSR #2
 3748              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSR #2
 3749 0898 8CEA950C 	eor r12,r12,r5,LSR #2
 3750              	
 3751              	# qhasm: hitmp ^= (hiu0 << 30)
 3752              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSL #30
 3753              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSL #30
 3754 089c 8CEA867C 	eor r12,r12,r6,LSL #30
 3755              	
 3756              	# qhasm: hitmp ^= (hiu0 unsigned>> 28)
 3757              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#7,LSR #28
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 67


 3758              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r6,LSR #28
 3759 08a0 8CEA167C 	eor r12,r12,r6,LSR #28
 3760              	
 3761              	# qhasm: hitmp ^= (lou0 << 4)
 3762              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<lou0=int32#6,LSL #4
 3763              	# asm 2: eor >hitmp=r12,<hitmp=r12,<lou0=r5,LSL #4
 3764 08a4 8CEA051C 	eor r12,r12,r5,LSL #4
 3765              	
 3766              	# qhasm: carry? lou4 += lotmp
 3767              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#12
 3768              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r11
 3769 08a8 11EB0B01 	adds r1,r1,r11
 3770              	
 3771              	# qhasm: hiu4 += hitmp + carry
 3772              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#13
 3773              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r12
 3774 08ac 42EB0C02 	adc r2,r2,r12
 3775              	
 3776              	# qhasm: lotmp = lou1 ^ lou3
 3777              	# asm 1: eor >lotmp=int32#12,<lou1=int32#8,<lou3=int32#10
 3778              	# asm 2: eor >lotmp=r11,<lou1=r7,<lou3=r9
 3779 08b0 87EA090B 	eor r11,r7,r9
 3780              	
 3781              	# qhasm: lotmp &= lou0
 3782              	# asm 1: and >lotmp=int32#6,<lotmp=int32#12,<lou0=int32#6
 3783              	# asm 2: and >lotmp=r5,<lotmp=r11,<lou0=r5
 3784 08b4 0BEA0505 	and r5,r11,r5
 3785              	
 3786              	# qhasm: lotmp2 = lou1 & lou3
 3787              	# asm 1: and >lotmp2=int32#8,<lou1=int32#8,<lou3=int32#10
 3788              	# asm 2: and >lotmp2=r7,<lou1=r7,<lou3=r9
 3789 08b8 07EA0907 	and r7,r7,r9
 3790              	
 3791              	# qhasm: lotmp ^= lotmp2
 3792              	# asm 1: eor >lotmp=int32#6,<lotmp=int32#6,<lotmp2=int32#8
 3793              	# asm 2: eor >lotmp=r5,<lotmp=r5,<lotmp2=r7
 3794 08bc 85EA0705 	eor r5,r5,r7
 3795              	
 3796              	# qhasm: carry? lou4 += lotmp
 3797              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#6
 3798              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r5
 3799 08c0 11EB0501 	adds.w r1,r1,r5
 3800              	
 3801              	# qhasm: hitmp = hiu1 ^ hiu3
 3802              	# asm 1: eor >hitmp=int32#6,<hiu1=int32#9,<hiu3=int32#11
 3803              	# asm 2: eor >hitmp=r5,<hiu1=r8,<hiu3=r10
 3804 08c4 88EA0A05 	eor r5,r8,r10
 3805              	
 3806              	# qhasm: hitmp &= hiu0
 3807              	# asm 1: and >hitmp=int32#6,<hitmp=int32#6,<hiu0=int32#7
 3808              	# asm 2: and >hitmp=r5,<hitmp=r5,<hiu0=r6
 3809 08c8 05EA0605 	and r5,r5,r6
 3810              	
 3811              	# qhasm: hitmp2 = hiu1 & hiu3
 3812              	# asm 1: and >hitmp2=int32#7,<hiu1=int32#9,<hiu3=int32#11
 3813              	# asm 2: and >hitmp2=r6,<hiu1=r8,<hiu3=r10
 3814 08cc 08EA0A06 	and r6,r8,r10
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 68


 3815              	
 3816              	# qhasm: hitmp ^= hitmp2
 3817              	# asm 1: eor >hitmp=int32#6,<hitmp=int32#6,<hitmp2=int32#7
 3818              	# asm 2: eor >hitmp=r5,<hitmp=r5,<hitmp2=r6
 3819 08d0 85EA0605 	eor r5,r5,r6
 3820              	
 3821              	# qhasm: hiu4 += hitmp + carry
 3822              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#6
 3823              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r5
 3824 08d4 42EB0502 	adc r2,r2,r5
 3825              	
 3826              	# qhasm: lod1 = lou4
 3827              	# asm 1: str <lou4=int32#2,>lod1=stack32#15
 3828              	# asm 2: str <lou4=r1,>lod1=[sp,#56]
 3829              	# copy-collector input: str r1,[sp,#56]
 3830              	
 3831              	# qhasm: hid1 = hiu4
 3832              	# asm 1: str <hiu4=int32#3,>hid1=stack32#16
 3833              	# asm 2: str <hiu4=r2,>hid1=[sp,#60]
 3834              	# copy-collector input: str r2,[sp,#60]
 3835              	
 3836              	# qhasm: lou0 = lod6
 3837              	# asm 1: ldr >lou0=int32#2,<lod6=stack32#33
 3838              	# asm 2: ldr >lou0=r1,<lod6=[sp,#128]
 3839              	# copy-collector input: ldr r1,[sp,#128]
 3840              	
 3841              	# qhasm: hiu0 = hid6
 3842              	# asm 1: ldr >hiu0=int32#3,<hid6=stack32#34
 3843              	# asm 2: ldr >hiu0=r2,<hid6=[sp,#132]
 3844              	# copy-collector input: ldr r2,[sp,#132]
 3845              	
 3846              	# qhasm: lou1 = lod7
 3847              	# asm 1: ldr >lou1=int32#6,<lod7=stack32#35
 3848              	# asm 2: ldr >lou1=r5,<lod7=[sp,#136]
 3849              	# copy-collector input: ldr r5,[sp,#136]
 3850              	
 3851              	# qhasm: hiu1 = hid7
 3852              	# asm 1: ldr >hiu1=int32#7,<hid7=stack32#36
 3853              	# asm 2: ldr >hiu1=r6,<hid7=[sp,#140]
 3854              	# copy-collector input: ldr r6,[sp,#140]
 3855              	
 3856              	# qhasm: lou4 = lod0
 3857              	# asm 1: ldr >lou4=int32#8,<lod0=stack32#29
 3858              	# asm 2: ldr >lou4=r7,<lod0=[sp,#112]
 3859              	# copy-collector input: ldr r7,[sp,#112]
 3860              	
 3861              	# qhasm: hiu4 = hid0
 3862              	# asm 1: ldr >hiu4=int32#9,<hid0=stack32#30
 3863              	# asm 2: ldr >hiu4=r8,<hid0=[sp,#116]
 3864              	# copy-collector input: ldr r8,[sp,#116]
 3865              	
 3866              	# qhasm: lou5 = lod15
 3867              	# asm 1: ldr >lou5=int32#12,<lod15=stack32#51
 3868              	# asm 2: ldr >lou5=r11,<lod15=[sp,#200]
 3869              	# copy-collector input: ldr r11,[sp,#200]
 3870              	
 3871              	# qhasm: hiu5 = hid15
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 69


 3872              	# asm 1: ldr >hiu5=int32#13,<hid15=stack32#52
 3873              	# asm 2: ldr >hiu5=r12,<hid15=[sp,#204]
 3874              	# copy-collector input: ldr r12,[sp,#204]
 3875              	
 3876              	# qhasm: two23 = 0x800000 simple
 3877              	# asm 1: mov >two23=int32#14,0x800000
 3878              	# asm 2: mov >two23=r14,0x800000
 3879              	# copy-collector output starts
 3880 08d8 CDE90E12 	strd r1,r2,[sp,#56]
 3881 08dc 2099     	ldr r1,[sp,#128]
 3882 08de 219A     	ldr r2,[sp,#132]
 3883 08e0 229D     	ldr r5,[sp,#136]
 3884 08e2 239E     	ldr r6,[sp,#140]
 3885 08e4 DDF87070 	ldr.w r7,[sp,#112]
 3886 08e8 DDF87480 	ldr r8,[sp,#116]
 3887 08ec DDF8C8B0 	ldr r11,[sp,#200]
 3888 08f0 DDF8CCC0 	ldr r12,[sp,#204]
 3889              	# copy-collector output ends
 3890 08f4 4FF4000E 	mov r14,0x800000
 3891              	
 3892              	# qhasm: carry?  lou4 += lou5
 3893              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lou5=int32#12
 3894              	# asm 2: adds >lou4=r7,<lou4=r7,<lou5=r11
 3895 08f8 17EB0B07 	adds r7,r7,r11
 3896              	
 3897              	# qhasm: hiu4 += hiu5 + carry
 3898              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hiu5=int32#13
 3899              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hiu5=r12
 3900 08fc 48EB0C08 	adc r8,r8,r12
 3901              	
 3902              	# qhasm: lotmp = mem32[input_0]; input_0 += 4
 3903              	# asm 1: ldr >lotmp=int32#12,[<input_0=int32#1],#4
 3904              	# asm 2: ldr >lotmp=r11,[<input_0=r0],#4
 3905              	# copy-collector input: ldr r11,[r0],#4
 3906              	
 3907              	# qhasm: hitmp = mem32[input_0]; input_0 += 4
 3908              	# asm 1: ldr >hitmp=int32#13,[<input_0=int32#1],#4
 3909              	# asm 2: ldr >hitmp=r12,[<input_0=r0],#4
 3910              	# copy-collector input: ldr r12,[r0],#4
 3911              	
 3912              	# qhasm: carry? lou4 += lotmp
 3913              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#12
 3914              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r11
 3915              	# copy-collector output starts
 3916 0900 50F804BB 	ldr r11,[r0],#4
 3917 0904 50F804CB 	ldr r12,[r0],#4
 3918              	# copy-collector output ends
 3919 0908 17EB0B07 	adds r7,r7,r11
 3920              	
 3921              	# qhasm: hiu4 += hitmp + carry
 3922              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#13
 3923              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r12
 3924 090c 48EB0C08 	adc r8,r8,r12
 3925              	
 3926              	# qhasm: hitmp lotmp = lou2 * two23
 3927              	# asm 1: umull >lotmp=int32#13,>hitmp=int32#12,<lou2=int32#4,<two23=int32#14
 3928              	# asm 2: umull >lotmp=r12,>hitmp=r11,<lou2=r3,<two23=r14
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 70


 3929 0910 A3FB0ECB 	umull r12,r11,r3,r14
 3930              	
 3931              	# qhasm: lotmp hitmp += hiu2 * two23
 3932              	# asm 1: umlal <hitmp=int32#12,<lotmp=int32#13,<hiu2=int32#5,<two23=int32#14
 3933              	# asm 2: umlal <hitmp=r11,<lotmp=r12,<hiu2=r4,<two23=r14
 3934 0914 E4FB0EBC 	umlal r11,r12,r4,r14
 3935              	
 3936              	# qhasm: lotmp ^= (lou2 unsigned>> 18)
 3937              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou2=int32#4,LSR #18
 3938              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou2=r3,LSR #18
 3939 0918 8CEA934C 	eor r12,r12,r3,LSR #18
 3940              	
 3941              	# qhasm: lotmp ^= (hiu2 << 14)
 3942              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu2=int32#5,LSL #14
 3943              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu2=r4,LSL #14
 3944 091c 8CEA843C 	eor r12,r12,r4,LSL #14
 3945              	
 3946              	# qhasm: lotmp ^= (lou2 unsigned>> 14)
 3947              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<lou2=int32#4,LSR #14
 3948              	# asm 2: eor >lotmp=r12,<lotmp=r12,<lou2=r3,LSR #14
 3949 0920 8CEA933C 	eor r12,r12,r3,LSR #14
 3950              	
 3951              	# qhasm: lotmp ^= (hiu2 << 18)
 3952              	# asm 1: eor >lotmp=int32#13,<lotmp=int32#13,<hiu2=int32#5,LSL #18
 3953              	# asm 2: eor >lotmp=r12,<lotmp=r12,<hiu2=r4,LSL #18
 3954 0924 8CEA844C 	eor r12,r12,r4,LSL #18
 3955              	
 3956              	# qhasm: hitmp ^= (hiu2 unsigned>> 18)
 3957              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu2=int32#5,LSR #18
 3958              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu2=r4,LSR #18
 3959 0928 8BEA944B 	eor r11,r11,r4,LSR #18
 3960              	
 3961              	# qhasm: hitmp ^= (lou2 << 14)
 3962              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou2=int32#4,LSL #14
 3963              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou2=r3,LSL #14
 3964 092c 8BEA833B 	eor r11,r11,r3,LSL #14
 3965              	
 3966              	# qhasm: hitmp ^= (hiu2 unsigned>> 14)
 3967              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<hiu2=int32#5,LSR #14
 3968              	# asm 2: eor >hitmp=r11,<hitmp=r11,<hiu2=r4,LSR #14
 3969 0930 8BEA943B 	eor r11,r11,r4,LSR #14
 3970              	
 3971              	# qhasm: hitmp ^= (lou2 << 18)
 3972              	# asm 1: eor >hitmp=int32#12,<hitmp=int32#12,<lou2=int32#4,LSL #18
 3973              	# asm 2: eor >hitmp=r11,<hitmp=r11,<lou2=r3,LSL #18
 3974 0934 8BEA834B 	eor r11,r11,r3,LSL #18
 3975              	
 3976              	# qhasm: carry? lou4 += lotmp
 3977              	# asm 1: adds >lou4=int32#8,<lou4=int32#8,<lotmp=int32#13
 3978              	# asm 2: adds >lou4=r7,<lou4=r7,<lotmp=r12
 3979 0938 17EB0C07 	adds r7,r7,r12
 3980              	
 3981              	# qhasm: hiu4 += hitmp + carry
 3982              	# asm 1: adc >hiu4=int32#9,<hiu4=int32#9,<hitmp=int32#12
 3983              	# asm 2: adc >hiu4=r8,<hiu4=r8,<hitmp=r11
 3984 093c 48EB0B08 	adc r8,r8,r11
 3985              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 71


 3986              	# qhasm: lotmp = lou2 & lou0
 3987              	# asm 1: and >lotmp=int32#2,<lou2=int32#4,<lou0=int32#2
 3988              	# asm 2: and >lotmp=r1,<lou2=r3,<lou0=r1
 3989 0940 03EA0101 	and r1,r3,r1
 3990              	
 3991              	# qhasm: lotmp2 = lou1 & ~lou2
 3992              	# asm 1: bic >lotmp2=int32#4,<lou1=int32#6,<lou2=int32#4
 3993              	# asm 2: bic >lotmp2=r3,<lou1=r5,<lou2=r3
 3994 0944 25EA0303 	bic r3,r5,r3
 3995              	
 3996              	# qhasm: lotmp ^= lotmp2
 3997              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#2,<lotmp2=int32#4
 3998              	# asm 2: eor >lotmp=r1,<lotmp=r1,<lotmp2=r3
 3999 0948 81EA0301 	eor r1,r1,r3
 4000              	
 4001              	# qhasm: carry? lou4 += lotmp
 4002              	# asm 1: adds >lou4=int32#2,<lou4=int32#8,<lotmp=int32#2
 4003              	# asm 2: adds >lou4=r1,<lou4=r7,<lotmp=r1
 4004 094c 17EB0101 	adds.w r1,r7,r1
 4005              	
 4006              	# qhasm: hitmp = hiu2 & hiu0
 4007              	# asm 1: and >hitmp=int32#3,<hiu2=int32#5,<hiu0=int32#3
 4008              	# asm 2: and >hitmp=r2,<hiu2=r4,<hiu0=r2
 4009 0950 04EA0202 	and r2,r4,r2
 4010              	
 4011              	# qhasm: hitmp2 = hiu1 & ~hiu2
 4012              	# asm 1: bic >hitmp2=int32#4,<hiu1=int32#7,<hiu2=int32#5
 4013              	# asm 2: bic >hitmp2=r3,<hiu1=r6,<hiu2=r4
 4014 0954 26EA0403 	bic r3,r6,r4
 4015              	
 4016              	# qhasm: hitmp ^= hitmp2
 4017              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<hitmp2=int32#4
 4018              	# asm 2: eor >hitmp=r2,<hitmp=r2,<hitmp2=r3
 4019 0958 82EA0302 	eor r2,r2,r3
 4020              	
 4021              	# qhasm: hiu4 += hitmp + carry
 4022              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#9,<hitmp=int32#3
 4023              	# asm 2: adc >hiu4=r2,<hiu4=r8,<hitmp=r2
 4024 095c 48EB0202 	adc r2,r8,r2
 4025              	
 4026              	# qhasm: carry? lou3 += lou4
 4027              	# asm 1: adds >lou3=int32#4,<lou3=int32#10,<lou4=int32#2
 4028              	# asm 2: adds >lou3=r3,<lou3=r9,<lou4=r1
 4029 0960 19EB0103 	adds r3,r9,r1
 4030              	
 4031              	# qhasm: hiu3 += hiu4 + carry
 4032              	# asm 1: adc >hiu3=int32#5,<hiu3=int32#11,<hiu4=int32#3
 4033              	# asm 2: adc >hiu3=r4,<hiu3=r10,<hiu4=r2
 4034 0964 4AEB0204 	adc r4,r10,r2
 4035              	
 4036              	# qhasm: lod4 = lou3
 4037              	# asm 1: str <lou3=int32#4,>lod4=stack32#29
 4038              	# asm 2: str <lou3=r3,>lod4=[sp,#112]
 4039              	# copy-collector input: str r3,[sp,#112]
 4040              	
 4041              	# qhasm: hid4 = hiu3
 4042              	# asm 1: str <hiu3=int32#5,>hid4=stack32#30
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 72


 4043              	# asm 2: str <hiu3=r4,>hid4=[sp,#116]
 4044              	# copy-collector input: str r4,[sp,#116]
 4045              	
 4046              	# qhasm: lou0 = lod1
 4047              	# asm 1: ldr >lou0=int32#4,<lod1=stack32#15
 4048              	# asm 2: ldr >lou0=r3,<lod1=[sp,#56]
 4049              	# copy-collector input: ldr r3,[sp,#56]
 4050              	
 4051              	# qhasm: hiu0 = hid1
 4052              	# asm 1: ldr >hiu0=int32#5,<hid1=stack32#16
 4053              	# asm 2: ldr >hiu0=r4,<hid1=[sp,#60]
 4054              	# copy-collector input: ldr r4,[sp,#60]
 4055              	
 4056              	# qhasm: lou1 = lod2
 4057              	# asm 1: ldr >lou1=int32#6,<lod2=stack32#17
 4058              	# asm 2: ldr >lou1=r5,<lod2=[sp,#64]
 4059              	# copy-collector input: ldr r5,[sp,#64]
 4060              	
 4061              	# qhasm: hiu1 = hid2
 4062              	# asm 1: ldr >hiu1=int32#7,<hid2=stack32#18
 4063              	# asm 2: ldr >hiu1=r6,<hid2=[sp,#68]
 4064              	# copy-collector input: ldr r6,[sp,#68]
 4065              	
 4066              	# qhasm: lou2 = lod3
 4067              	# asm 1: ldr >lou2=int32#8,<lod3=stack32#19
 4068              	# asm 2: ldr >lou2=r7,<lod3=[sp,#72]
 4069              	# copy-collector input: ldr r7,[sp,#72]
 4070              	
 4071              	# qhasm: hiu2 = hid3
 4072              	# asm 1: ldr >hiu2=int32#9,<hid3=stack32#20
 4073              	# asm 2: ldr >hiu2=r8,<hid3=[sp,#76]
 4074              	# copy-collector input: ldr r8,[sp,#76]
 4075              	
 4076              	# qhasm: two25 = 0x2000000 simple
 4077              	# asm 1: mov >two25=int32#10,0x2000000
 4078              	# asm 2: mov >two25=r9,0x2000000
 4079              	# copy-collector output starts
 4080 0968 CDE91C34 	strd r3,r4,[sp,#112]
 4081 096c 0E9B     	ldr r3,[sp,#56]
 4082 096e 0F9C     	ldr r4,[sp,#60]
 4083 0970 109D     	ldr r5,[sp,#64]
 4084 0972 119E     	ldr r6,[sp,#68]
 4085 0974 DDF84870 	ldr.w r7,[sp,#72]
 4086 0978 DDF84C80 	ldr r8,[sp,#76]
 4087              	# copy-collector output ends
 4088 097c 4FF00079 	mov r9,0x2000000
 4089              	
 4090              	# qhasm: hitmp lotmp = lou0 * two25
 4091              	# asm 1: umull >lotmp=int32#12,>hitmp=int32#11,<lou0=int32#4,<two25=int32#10
 4092              	# asm 2: umull >lotmp=r11,>hitmp=r10,<lou0=r3,<two25=r9
 4093 0980 A3FB09BA 	umull r11,r10,r3,r9
 4094              	
 4095              	# qhasm: lotmp hitmp += hiu0 * two25
 4096              	# asm 1: umlal <hitmp=int32#11,<lotmp=int32#12,<hiu0=int32#5,<two25=int32#10
 4097              	# asm 2: umlal <hitmp=r10,<lotmp=r11,<hiu0=r4,<two25=r9
 4098 0984 E4FB09AB 	umlal r10,r11,r4,r9
 4099              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 73


 4100              	# qhasm: lotmp ^= (hiu0 unsigned>> 2)
 4101              	# asm 1: eor >lotmp=int32#10,<lotmp=int32#12,<hiu0=int32#5,LSR #2
 4102              	# asm 2: eor >lotmp=r9,<lotmp=r11,<hiu0=r4,LSR #2
 4103 0988 8BEA9409 	eor r9,r11,r4,LSR #2
 4104              	
 4105              	# qhasm: lotmp ^= (lou0 << 30)
 4106              	# asm 1: eor >lotmp=int32#10,<lotmp=int32#10,<lou0=int32#4,LSL #30
 4107              	# asm 2: eor >lotmp=r9,<lotmp=r9,<lou0=r3,LSL #30
 4108 098c 89EA8379 	eor r9,r9,r3,LSL #30
 4109              	
 4110              	# qhasm: lotmp ^= (lou0 unsigned>> 28)
 4111              	# asm 1: eor >lotmp=int32#10,<lotmp=int32#10,<lou0=int32#4,LSR #28
 4112              	# asm 2: eor >lotmp=r9,<lotmp=r9,<lou0=r3,LSR #28
 4113 0990 89EA1379 	eor r9,r9,r3,LSR #28
 4114              	
 4115              	# qhasm: lotmp ^= (hiu0 << 4)
 4116              	# asm 1: eor >lotmp=int32#10,<lotmp=int32#10,<hiu0=int32#5,LSL #4
 4117              	# asm 2: eor >lotmp=r9,<lotmp=r9,<hiu0=r4,LSL #4
 4118 0994 89EA0419 	eor r9,r9,r4,LSL #4
 4119              	
 4120              	# qhasm: hitmp ^= (lou0 unsigned>> 2)
 4121              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<lou0=int32#4,LSR #2
 4122              	# asm 2: eor >hitmp=r10,<hitmp=r10,<lou0=r3,LSR #2
 4123 0998 8AEA930A 	eor r10,r10,r3,LSR #2
 4124              	
 4125              	# qhasm: hitmp ^= (hiu0 << 30)
 4126              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<hiu0=int32#5,LSL #30
 4127              	# asm 2: eor >hitmp=r10,<hitmp=r10,<hiu0=r4,LSL #30
 4128 099c 8AEA847A 	eor r10,r10,r4,LSL #30
 4129              	
 4130              	# qhasm: hitmp ^= (hiu0 unsigned>> 28)
 4131              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<hiu0=int32#5,LSR #28
 4132              	# asm 2: eor >hitmp=r10,<hitmp=r10,<hiu0=r4,LSR #28
 4133 09a0 8AEA147A 	eor r10,r10,r4,LSR #28
 4134              	
 4135              	# qhasm: hitmp ^= (lou0 << 4)
 4136              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<lou0=int32#4,LSL #4
 4137              	# asm 2: eor >hitmp=r10,<hitmp=r10,<lou0=r3,LSL #4
 4138 09a4 8AEA031A 	eor r10,r10,r3,LSL #4
 4139              	
 4140              	# qhasm: carry? lou4 += lotmp
 4141              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#10
 4142              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r9
 4143 09a8 11EB0901 	adds r1,r1,r9
 4144              	
 4145              	# qhasm: hiu4 += hitmp + carry
 4146              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#11
 4147              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r10
 4148 09ac 42EB0A02 	adc r2,r2,r10
 4149              	
 4150              	# qhasm: lotmp = lou1 ^ lou2
 4151              	# asm 1: eor >lotmp=int32#10,<lou1=int32#6,<lou2=int32#8
 4152              	# asm 2: eor >lotmp=r9,<lou1=r5,<lou2=r7
 4153 09b0 85EA0709 	eor r9,r5,r7
 4154              	
 4155              	# qhasm: lotmp &= lou0
 4156              	# asm 1: and >lotmp=int32#4,<lotmp=int32#10,<lou0=int32#4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 74


 4157              	# asm 2: and >lotmp=r3,<lotmp=r9,<lou0=r3
 4158 09b4 09EA0303 	and r3,r9,r3
 4159              	
 4160              	# qhasm: lotmp2 = lou1 & lou2
 4161              	# asm 1: and >lotmp2=int32#6,<lou1=int32#6,<lou2=int32#8
 4162              	# asm 2: and >lotmp2=r5,<lou1=r5,<lou2=r7
 4163 09b8 05EA0705 	and r5,r5,r7
 4164              	
 4165              	# qhasm: lotmp ^= lotmp2
 4166              	# asm 1: eor >lotmp=int32#4,<lotmp=int32#4,<lotmp2=int32#6
 4167              	# asm 2: eor >lotmp=r3,<lotmp=r3,<lotmp2=r5
 4168 09bc 83EA0503 	eor r3,r3,r5
 4169              	
 4170              	# qhasm: carry? lou4 += lotmp
 4171              	# asm 1: adds >lou4=int32#2,<lou4=int32#2,<lotmp=int32#4
 4172              	# asm 2: adds >lou4=r1,<lou4=r1,<lotmp=r3
 4173 09c0 11EB0301 	adds.w r1,r1,r3
 4174              	
 4175              	# qhasm: hitmp = hiu1 ^ hiu2
 4176              	# asm 1: eor >hitmp=int32#4,<hiu1=int32#7,<hiu2=int32#9
 4177              	# asm 2: eor >hitmp=r3,<hiu1=r6,<hiu2=r8
 4178 09c4 86EA0803 	eor r3,r6,r8
 4179              	
 4180              	# qhasm: hitmp &= hiu0
 4181              	# asm 1: and >hitmp=int32#4,<hitmp=int32#4,<hiu0=int32#5
 4182              	# asm 2: and >hitmp=r3,<hitmp=r3,<hiu0=r4
 4183 09c8 03EA0403 	and r3,r3,r4
 4184              	
 4185              	# qhasm: hitmp2 = hiu1 & hiu2
 4186              	# asm 1: and >hitmp2=int32#5,<hiu1=int32#7,<hiu2=int32#9
 4187              	# asm 2: and >hitmp2=r4,<hiu1=r6,<hiu2=r8
 4188 09cc 06EA0804 	and r4,r6,r8
 4189              	
 4190              	# qhasm: hitmp ^= hitmp2
 4191              	# asm 1: eor >hitmp=int32#4,<hitmp=int32#4,<hitmp2=int32#5
 4192              	# asm 2: eor >hitmp=r3,<hitmp=r3,<hitmp2=r4
 4193 09d0 83EA0403 	eor r3,r3,r4
 4194              	
 4195              	# qhasm: hiu4 += hitmp + carry
 4196              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#4
 4197              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r3
 4198 09d4 42EB0302 	adc r2,r2,r3
 4199              	
 4200              	# qhasm: lod0 = lou4
 4201              	# asm 1: str <lou4=int32#2,>lod0=stack32#13
 4202              	# asm 2: str <lou4=r1,>lod0=[sp,#48]
 4203              	# copy-collector input: str r1,[sp,#48]
 4204              	
 4205              	# qhasm: hid0 = hiu4
 4206              	# asm 1: str <hiu4=int32#3,>hid0=stack32#14
 4207              	# asm 2: str <hiu4=r2,>hid0=[sp,#52]
 4208              	# copy-collector input: str r2,[sp,#52]
 4209              	
 4210              	# qhasm: o3 = input_0
 4211              	# asm 1: str <input_0=int32#1,>o3=stack32#4
 4212              	# asm 2: str <input_0=r0,>o3=[sp,#12]
 4213              	# copy-collector input: str r0,[sp,#12]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 75


 4214              	
 4215              	# qhasm: input_0 = o4
 4216              	# asm 1: ldr >input_0=int32#1,<o4=stack32#69
 4217              	# asm 2: ldr >input_0=r0,<o4=[sp,#272]
 4218              	# copy-collector input: ldr r0,[sp,#272]
 4219              	
 4220              	# qhasm: =? unsigned<? input_0 -= 8
 4221              	# asm 1: subs >input_0=int32#1,<input_0=int32#1,#8
 4222              	# asm 2: subs >input_0=r0,<input_0=r0,#8
 4223              	# copy-collector output starts
 4224 09d8 CDE90C12 	strd r1,r2,[sp,#48]
 4225 09dc 0390     	str r0,[sp,#12]
 4226 09de 4498     	ldr r0,[sp,#272]
 4227              	# copy-collector output ends
 4228 09e0 0838     	subs r0,r0,#8
 4229              	
 4230              	# qhasm: goto endinnerloop if =
 4231 09e2 00F0E181 	beq ._endinnerloop
 4232              	
 4233              	# qhasm: o4 = input_0
 4234              	# asm 1: str <input_0=int32#1,>o4=stack32#69
 4235              	# asm 2: str <input_0=r0,>o4=[sp,#272]
 4236              	# copy-collector input: str r0,[sp,#272]
 4237              	
 4238              	# qhasm: =? input_0 - 8
 4239              	# asm 1: cmp <input_0=int32#1,#8
 4240              	# asm 2: cmp <input_0=r0,#8
 4241              	# copy-collector output starts
 4242 09e6 4490     	str r0,[sp,#272]
 4243              	# copy-collector output ends
 4244 09e8 0828     	cmp r0,#8
 4245              	
 4246              	# qhasm: goto nearend if =
 4247 09ea 00F0BB81 	beq ._nearend
 4248              	
 4249              	# qhasm: two24 = 0x1000000 simple
 4250              	# asm 1: mov >two24=int32#1,0x1000000
 4251              	# asm 2: mov >two24=r0,0x1000000
 4252 09ee 4FF08070 	mov r0,0x1000000
 4253              	
 4254              	# qhasm: two13 = 0x2000 simple
 4255              	# asm 1: mov >two13=int32#2,0x2000
 4256              	# asm 2: mov >two13=r1,0x2000
 4257 09f2 4FF40051 	mov r1,0x2000
 4258              	
 4259              	# qhasm: lou0 = lod8
 4260              	# asm 1: ldr >lou0=int32#3,<lod8=stack32#37
 4261              	# asm 2: ldr >lou0=r2,<lod8=[sp,#144]
 4262              	# copy-collector input: ldr r2,[sp,#144]
 4263              	
 4264              	# qhasm: hiu0 = hid8
 4265              	# asm 1: ldr >hiu0=int32#4,<hid8=stack32#38
 4266              	# asm 2: ldr >hiu0=r3,<hid8=[sp,#148]
 4267              	# copy-collector input: ldr r3,[sp,#148]
 4268              	
 4269              	# qhasm: lou1 = lod9
 4270              	# asm 1: ldr >lou1=int32#5,<lod9=stack32#39
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 76


 4271              	# asm 2: ldr >lou1=r4,<lod9=[sp,#152]
 4272              	# copy-collector input: ldr r4,[sp,#152]
 4273              	
 4274              	# qhasm: hiu1 = hid9
 4275              	# asm 1: ldr >hiu1=int32#6,<hid9=stack32#40
 4276              	# asm 2: ldr >hiu1=r5,<hid9=[sp,#156]
 4277              	# copy-collector input: ldr r5,[sp,#156]
 4278              	
 4279              	# qhasm: lou2 = lom14
 4280              	# asm 1: ldr >lou2=int32#7,<lom14=stack32#65
 4281              	# asm 2: ldr >lou2=r6,<lom14=[sp,#256]
 4282              	# copy-collector input: ldr r6,[sp,#256]
 4283              	
 4284              	# qhasm: hiu2 = him14
 4285              	# asm 1: ldr >hiu2=int32#8,<him14=stack32#66
 4286              	# asm 2: ldr >hiu2=r7,<him14=[sp,#260]
 4287              	# copy-collector input: ldr r7,[sp,#260]
 4288              	
 4289              	# qhasm: lou3 = lom9
 4290              	# asm 1: ldr >lou3=int32#9,<lom9=stack32#55
 4291              	# asm 2: ldr >lou3=r8,<lom9=[sp,#216]
 4292              	# copy-collector input: ldr r8,[sp,#216]
 4293              	
 4294              	# qhasm: hiu3 = him9
 4295              	# asm 1: ldr >hiu3=int32#10,<him9=stack32#56
 4296              	# asm 2: ldr >hiu3=r9,<him9=[sp,#220]
 4297              	# copy-collector input: ldr r9,[sp,#220]
 4298              	
 4299              	# qhasm: hitmp lotmp = hiu2 * two13
 4300              	# asm 1: umull >lotmp=int32#12,>hitmp=int32#11,<hiu2=int32#8,<two13=int32#2
 4301              	# asm 2: umull >lotmp=r11,>hitmp=r10,<hiu2=r7,<two13=r1
 4302              	# copy-collector output starts
 4303 09f6 249A     	ldr r2,[sp,#144]
 4304 09f8 259B     	ldr r3,[sp,#148]
 4305 09fa 269C     	ldr r4,[sp,#152]
 4306 09fc 279D     	ldr r5,[sp,#156]
 4307 09fe 409E     	ldr r6,[sp,#256]
 4308 0a00 DDF80471 	ldr.w r7,[sp,#260]
 4309 0a04 DDF8D880 	ldr r8,[sp,#216]
 4310 0a08 DDF8DC90 	ldr r9,[sp,#220]
 4311              	# copy-collector output ends
 4312 0a0c A7FB01BA 	umull r11,r10,r7,r1
 4313              	
 4314              	# qhasm: lotmp hitmp += lou2 * two13
 4315              	# asm 1: umlal <hitmp=int32#11,<lotmp=int32#12,<lou2=int32#7,<two13=int32#2
 4316              	# asm 2: umlal <hitmp=r10,<lotmp=r11,<lou2=r6,<two13=r1
 4317 0a10 E6FB01AB 	umlal r10,r11,r6,r1
 4318              	
 4319              	# qhasm: lotmp ^= (lou2 unsigned>> 6)
 4320              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou2=int32#7,LSR #6
 4321              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou2=r6,LSR #6
 4322 0a14 8BEA961B 	eor r11,r11,r6,LSR #6
 4323              	
 4324              	# qhasm: lotmp ^= (hiu2 << 26)
 4325              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu2=int32#8,LSL #26
 4326              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu2=r7,LSL #26
 4327 0a18 8BEA876B 	eor r11,r11,r7,LSL #26
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 77


 4328              	
 4329              	# qhasm: lotmp ^= (hiu2 unsigned>> 29)
 4330              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu2=int32#8,LSR #29
 4331              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu2=r7,LSR #29
 4332 0a1c 8BEA577B 	eor r11,r11,r7,LSR #29
 4333              	
 4334              	# qhasm: lotmp ^= (lou2 << 3)
 4335              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou2=int32#7,LSL #3
 4336              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou2=r6,LSL #3
 4337 0a20 8BEAC60B 	eor r11,r11,r6,LSL #3
 4338              	
 4339              	# qhasm: hitmp ^= (hiu2 unsigned>> 6)
 4340              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<hiu2=int32#8,LSR #6
 4341              	# asm 2: eor >hitmp=r10,<hitmp=r10,<hiu2=r7,LSR #6
 4342 0a24 8AEA971A 	eor r10,r10,r7,LSR #6
 4343              	
 4344              	# qhasm: hitmp ^= (lou2 unsigned>> 29)
 4345              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<lou2=int32#7,LSR #29
 4346              	# asm 2: eor >hitmp=r10,<hitmp=r10,<lou2=r6,LSR #29
 4347 0a28 8AEA567A 	eor r10,r10,r6,LSR #29
 4348              	
 4349              	# qhasm: hitmp ^= (hiu2 << 3)
 4350              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<hiu2=int32#8,LSL #3
 4351              	# asm 2: eor >hitmp=r10,<hitmp=r10,<hiu2=r7,LSL #3
 4352 0a2c 8AEAC70A 	eor r10,r10,r7,LSL #3
 4353              	
 4354              	# qhasm: carry? lou0 += lotmp
 4355              	# asm 1: adds >lou0=int32#3,<lou0=int32#3,<lotmp=int32#12
 4356              	# asm 2: adds >lou0=r2,<lou0=r2,<lotmp=r11
 4357 0a30 12EB0B02 	adds r2,r2,r11
 4358              	
 4359              	# qhasm: hiu0 += hitmp + carry
 4360              	# asm 1: adc >hiu0=int32#4,<hiu0=int32#4,<hitmp=int32#11
 4361              	# asm 2: adc >hiu0=r3,<hiu0=r3,<hitmp=r10
 4362 0a34 43EB0A03 	adc r3,r3,r10
 4363              	
 4364              	# qhasm: hitmp lotmp = hiu1 * two24
 4365              	# asm 1: umull >lotmp=int32#12,>hitmp=int32#11,<hiu1=int32#6,<two24=int32#1
 4366              	# asm 2: umull >lotmp=r11,>hitmp=r10,<hiu1=r5,<two24=r0
 4367 0a38 A5FB00BA 	umull r11,r10,r5,r0
 4368              	
 4369              	# qhasm: lotmp hitmp += lou1 * two24
 4370              	# asm 1: umlal <hitmp=int32#11,<lotmp=int32#12,<lou1=int32#5,<two24=int32#1
 4371              	# asm 2: umlal <hitmp=r10,<lotmp=r11,<lou1=r4,<two24=r0
 4372 0a3c E4FB00AB 	umlal r10,r11,r4,r0
 4373              	
 4374              	# qhasm: carry? lotmp ^= (lou1 unsigned>> 1)
 4375              	# asm 1: eors >lotmp=int32#12,<lotmp=int32#12,<lou1=int32#5,LSR #1
 4376              	# asm 2: eors >lotmp=r11,<lotmp=r11,<lou1=r4,LSR #1
 4377 0a40 9BEA540B 	eors r11,r11,r4,LSR #1
 4378              	
 4379              	# qhasm: hitmp ^= (carry,hiu1 unsigned>> 1)
 4380              	# asm 1: eors >hitmp=int32#11,<hitmp=int32#11,<hiu1=int32#6,RRX
 4381              	# asm 2: eors >hitmp=r10,<hitmp=r10,<hiu1=r5,RRX
 4382 0a44 9AEA350A 	eors r10,r10,r5,RRX
 4383              	
 4384              	# qhasm: lotmp ^= (hiu1 << 31)
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 78


 4385              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu1=int32#6,LSL #31
 4386              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu1=r5,LSL #31
 4387 0a48 8BEAC57B 	eor r11,r11,r5,LSL #31
 4388              	
 4389              	# qhasm: lotmp ^= (lou1 unsigned>>7)
 4390              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou1=int32#5,LSR #7
 4391              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou1=r4,LSR #7
 4392 0a4c 8BEAD41B 	eor r11,r11,r4,LSR #7
 4393              	
 4394              	# qhasm: lotmp ^= (hiu1 << 25)
 4395              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu1=int32#6,LSL #25
 4396              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu1=r5,LSL #25
 4397 0a50 8BEA456B 	eor r11,r11,r5,LSL #25
 4398              	
 4399              	# qhasm: hitmp ^= (hiu1 unsigned>>7)
 4400              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<hiu1=int32#6,LSR #7
 4401              	# asm 2: eor >hitmp=r10,<hitmp=r10,<hiu1=r5,LSR #7
 4402 0a54 8AEAD51A 	eor r10,r10,r5,LSR #7
 4403              	
 4404              	# qhasm: carry? lou0 += lotmp
 4405              	# asm 1: adds >lou0=int32#3,<lou0=int32#3,<lotmp=int32#12
 4406              	# asm 2: adds >lou0=r2,<lou0=r2,<lotmp=r11
 4407 0a58 12EB0B02 	adds r2,r2,r11
 4408              	
 4409              	# qhasm: hiu0 += hitmp + carry
 4410              	# asm 1: adc >hiu0=int32#4,<hiu0=int32#4,<hitmp=int32#11
 4411              	# asm 2: adc >hiu0=r3,<hiu0=r3,<hitmp=r10
 4412 0a5c 43EB0A03 	adc r3,r3,r10
 4413              	
 4414              	# qhasm: carry? lou0 += lou3
 4415              	# asm 1: adds >lou0=int32#3,<lou0=int32#3,<lou3=int32#9
 4416              	# asm 2: adds >lou0=r2,<lou0=r2,<lou3=r8
 4417 0a60 12EB0802 	adds r2,r2,r8
 4418              	
 4419              	# qhasm: hiu0 += hiu3 + carry
 4420              	# asm 1: adc >hiu0=int32#4,<hiu0=int32#4,<hiu3=int32#10
 4421              	# asm 2: adc >hiu0=r3,<hiu0=r3,<hiu3=r9
 4422 0a64 43EB0903 	adc r3,r3,r9
 4423              	
 4424              	# qhasm: lod9 = lou3
 4425              	# asm 1: str <lou3=int32#9,>lod9=stack32#39
 4426              	# asm 2: str <lou3=r8,>lod9=[sp,#152]
 4427              	# copy-collector input: str r8,[sp,#152]
 4428              	
 4429              	# qhasm: hid9 = hiu3
 4430              	# asm 1: str <hiu3=int32#10,>hid9=stack32#40
 4431              	# asm 2: str <hiu3=r9,>hid9=[sp,#156]
 4432              	# copy-collector input: str r9,[sp,#156]
 4433              	
 4434              	# qhasm: lou3 = lom15
 4435              	# asm 1: ldr >lou3=int32#9,<lom15=stack32#67
 4436              	# asm 2: ldr >lou3=r8,<lom15=[sp,#264]
 4437              	# copy-collector input: ldr r8,[sp,#264]
 4438              	
 4439              	# qhasm: hiu3 = him15
 4440              	# asm 1: ldr >hiu3=int32#10,<him15=stack32#68
 4441              	# asm 2: ldr >hiu3=r9,<him15=[sp,#268]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 79


 4442              	# copy-collector input: ldr r9,[sp,#268]
 4443              	
 4444              	# qhasm: lom15 = lou0
 4445              	# asm 1: str <lou0=int32#3,>lom15=stack32#37
 4446              	# asm 2: str <lou0=r2,>lom15=[sp,#144]
 4447              	# copy-collector input: str r2,[sp,#144]
 4448              	
 4449              	# qhasm: him15 = hiu0
 4450              	# asm 1: str <hiu0=int32#4,>him15=stack32#38
 4451              	# asm 2: str <hiu0=r3,>him15=[sp,#148]
 4452              	# copy-collector input: str r3,[sp,#148]
 4453              	
 4454              	# qhasm: hitmp lotmp = hiu3 * two13
 4455              	# asm 1: umull >lotmp=int32#12,>hitmp=int32#11,<hiu3=int32#10,<two13=int32#2
 4456              	# asm 2: umull >lotmp=r11,>hitmp=r10,<hiu3=r9,<two13=r1
 4457              	# copy-collector output starts
 4458 0a68 CDE92689 	strd r8,r9,[sp,#152]
 4459 0a6c DDE94289 	ldrd r8,r9,[sp,#264]
 4460 0a70 CDE92423 	strd r2,r3,[sp,#144]
 4461              	# copy-collector output ends
 4462 0a74 A9FB01BA 	umull r11,r10,r9,r1
 4463              	
 4464              	# qhasm: lotmp hitmp += lou3 * two13
 4465              	# asm 1: umlal <hitmp=int32#11,<lotmp=int32#12,<lou3=int32#9,<two13=int32#2
 4466              	# asm 2: umlal <hitmp=r10,<lotmp=r11,<lou3=r8,<two13=r1
 4467 0a78 E8FB01AB 	umlal r10,r11,r8,r1
 4468              	
 4469              	# qhasm: lotmp ^= (lou3 unsigned>> 6)
 4470              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou3=int32#9,LSR #6
 4471              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou3=r8,LSR #6
 4472 0a7c 8BEA981B 	eor r11,r11,r8,LSR #6
 4473              	
 4474              	# qhasm: lotmp ^= (hiu3 << 26)
 4475              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu3=int32#10,LSL #26
 4476              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu3=r9,LSL #26
 4477 0a80 8BEA896B 	eor r11,r11,r9,LSL #26
 4478              	
 4479              	# qhasm: lotmp ^= (hiu3 unsigned>> 29)
 4480              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu3=int32#10,LSR #29
 4481              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu3=r9,LSR #29
 4482 0a84 8BEA597B 	eor r11,r11,r9,LSR #29
 4483              	
 4484              	# qhasm: lotmp ^= (lou3 << 3)
 4485              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou3=int32#9,LSL #3
 4486              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou3=r8,LSL #3
 4487 0a88 8BEAC80B 	eor r11,r11,r8,LSL #3
 4488              	
 4489              	# qhasm: hitmp ^= (hiu3 unsigned>> 6)
 4490              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<hiu3=int32#10,LSR #6
 4491              	# asm 2: eor >hitmp=r10,<hitmp=r10,<hiu3=r9,LSR #6
 4492 0a8c 8AEA991A 	eor r10,r10,r9,LSR #6
 4493              	
 4494              	# qhasm: hitmp ^= (lou3 unsigned>> 29)
 4495              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<lou3=int32#9,LSR #29
 4496              	# asm 2: eor >hitmp=r10,<hitmp=r10,<lou3=r8,LSR #29
 4497 0a90 8AEA587A 	eor r10,r10,r8,LSR #29
 4498              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 80


 4499              	# qhasm: hitmp ^= (hiu3 << 3)
 4500              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<hiu3=int32#10,LSL #3
 4501              	# asm 2: eor >hitmp=r10,<hitmp=r10,<hiu3=r9,LSL #3
 4502 0a94 8AEAC90A 	eor r10,r10,r9,LSL #3
 4503              	
 4504              	# qhasm: carry? lou1 += lotmp
 4505              	# asm 1: adds >lou1=int32#5,<lou1=int32#5,<lotmp=int32#12
 4506              	# asm 2: adds >lou1=r4,<lou1=r4,<lotmp=r11
 4507 0a98 14EB0B04 	adds r4,r4,r11
 4508              	
 4509              	# qhasm: hiu1 += hitmp + carry
 4510              	# asm 1: adc >hiu1=int32#6,<hiu1=int32#6,<hitmp=int32#11
 4511              	# asm 2: adc >hiu1=r5,<hiu1=r5,<hitmp=r10
 4512 0a9c 45EB0A05 	adc r5,r5,r10
 4513              	
 4514              	# qhasm: lou4 = lod10
 4515              	# asm 1: ldr >lou4=int32#11,<lod10=stack32#41
 4516              	# asm 2: ldr >lou4=r10,<lod10=[sp,#160]
 4517              	# copy-collector input: ldr r10,[sp,#160]
 4518              	
 4519              	# qhasm: hiu4 = hid10
 4520              	# asm 1: ldr >hiu4=int32#12,<hid10=stack32#42
 4521              	# asm 2: ldr >hiu4=r11,<hid10=[sp,#164]
 4522              	# copy-collector input: ldr r11,[sp,#164]
 4523              	
 4524              	# qhasm: hitmp lotmp = hiu4 * two24
 4525              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<hiu4=int32#12,<two24=int32#1
 4526              	# asm 2: umull >lotmp=r14,>hitmp=r12,<hiu4=r11,<two24=r0
 4527              	# copy-collector output starts
 4528 0aa0 DDE928AB 	ldrd r10,r11,[sp,#160]
 4529              	# copy-collector output ends
 4530 0aa4 ABFB00EC 	umull r14,r12,r11,r0
 4531              	
 4532              	# qhasm: lotmp hitmp += lou4 * two24
 4533              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<lou4=int32#11,<two24=int32#1
 4534              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<lou4=r10,<two24=r0
 4535 0aa8 EAFB00CE 	umlal r12,r14,r10,r0
 4536              	
 4537              	# qhasm: carry? lotmp ^= (lou4 unsigned>> 1)
 4538              	# asm 1: eors >lotmp=int32#14,<lotmp=int32#14,<lou4=int32#11,LSR #1
 4539              	# asm 2: eors >lotmp=r14,<lotmp=r14,<lou4=r10,LSR #1
 4540 0aac 9EEA5A0E 	eors r14,r14,r10,LSR #1
 4541              	
 4542              	# qhasm: hitmp ^= (carry,hiu4 unsigned>> 1)
 4543              	# asm 1: eors >hitmp=int32#13,<hitmp=int32#13,<hiu4=int32#12,RRX
 4544              	# asm 2: eors >hitmp=r12,<hitmp=r12,<hiu4=r11,RRX
 4545 0ab0 9CEA3B0C 	eors r12,r12,r11,RRX
 4546              	
 4547              	# qhasm: lotmp ^= (hiu4 << 31)
 4548              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu4=int32#12,LSL #31
 4549              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu4=r11,LSL #31
 4550 0ab4 8EEACB7E 	eor r14,r14,r11,LSL #31
 4551              	
 4552              	# qhasm: lotmp ^= (lou4 unsigned>>7)
 4553              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou4=int32#11,LSR #7
 4554              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou4=r10,LSR #7
 4555 0ab8 8EEADA1E 	eor r14,r14,r10,LSR #7
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 81


 4556              	
 4557              	# qhasm: lotmp ^= (hiu4 << 25)
 4558              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu4=int32#12,LSL #25
 4559              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu4=r11,LSL #25
 4560 0abc 8EEA4B6E 	eor r14,r14,r11,LSL #25
 4561              	
 4562              	# qhasm: hitmp ^= (hiu4 unsigned>>7)
 4563              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu4=int32#12,LSR #7
 4564              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu4=r11,LSR #7
 4565 0ac0 8CEADB1C 	eor r12,r12,r11,LSR #7
 4566              	
 4567              	# qhasm: carry? lou1 += lotmp
 4568              	# asm 1: adds >lou1=int32#5,<lou1=int32#5,<lotmp=int32#14
 4569              	# asm 2: adds >lou1=r4,<lou1=r4,<lotmp=r14
 4570 0ac4 14EB0E04 	adds r4,r4,r14
 4571              	
 4572              	# qhasm: hiu1 += hitmp + carry
 4573              	# asm 1: adc >hiu1=int32#6,<hiu1=int32#6,<hitmp=int32#13
 4574              	# asm 2: adc >hiu1=r5,<hiu1=r5,<hitmp=r12
 4575 0ac8 45EB0C05 	adc r5,r5,r12
 4576              	
 4577              	# qhasm: lou5 = lom10
 4578              	# asm 1: ldr >lou5=int32#13,<lom10=stack32#57
 4579              	# asm 2: ldr >lou5=r12,<lom10=[sp,#224]
 4580              	# copy-collector input: ldr r12,[sp,#224]
 4581              	
 4582              	# qhasm: hiu5 = him10
 4583              	# asm 1: ldr >hiu5=int32#14,<him10=stack32#58
 4584              	# asm 2: ldr >hiu5=r14,<him10=[sp,#228]
 4585              	# copy-collector input: ldr r14,[sp,#228]
 4586              	
 4587              	# qhasm: carry? lou1 += lou5
 4588              	# asm 1: adds >lou1=int32#5,<lou1=int32#5,<lou5=int32#13
 4589              	# asm 2: adds >lou1=r4,<lou1=r4,<lou5=r12
 4590              	# copy-collector output starts
 4591 0acc DDE938CE 	ldrd r12,r14,[sp,#224]
 4592              	# copy-collector output ends
 4593 0ad0 14EB0C04 	adds r4,r4,r12
 4594              	
 4595              	# qhasm: hiu1 += hiu5 + carry
 4596              	# asm 1: adc >hiu1=int32#6,<hiu1=int32#6,<hiu5=int32#14
 4597              	# asm 2: adc >hiu1=r5,<hiu1=r5,<hiu5=r14
 4598 0ad4 45EB0E05 	adc r5,r5,r14
 4599              	
 4600              	# qhasm: lod10 = lou5
 4601              	# asm 1: str <lou5=int32#13,>lod10=stack32#41
 4602              	# asm 2: str <lou5=r12,>lod10=[sp,#160]
 4603              	# copy-collector input: str r12,[sp,#160]
 4604              	
 4605              	# qhasm: hid10 = hiu5
 4606              	# asm 1: str <hiu5=int32#14,>hid10=stack32#42
 4607              	# asm 2: str <hiu5=r14,>hid10=[sp,#164]
 4608              	# copy-collector input: str r14,[sp,#164]
 4609              	
 4610              	# qhasm: lom9 = lou1
 4611              	# asm 1: str <lou1=int32#5,>lom9=stack32#55
 4612              	# asm 2: str <lou1=r4,>lom9=[sp,#216]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 82


 4613              	# copy-collector input: str r4,[sp,#216]
 4614              	
 4615              	# qhasm: him9 = hiu1
 4616              	# asm 1: str <hiu1=int32#6,>him9=stack32#56
 4617              	# asm 2: str <hiu1=r5,>him9=[sp,#220]
 4618              	# copy-collector input: str r5,[sp,#220]
 4619              	
 4620              	# qhasm: hitmp lotmp = hiu0 * two13
 4621              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<hiu0=int32#4,<two13=int32#2
 4622              	# asm 2: umull >lotmp=r14,>hitmp=r12,<hiu0=r3,<two13=r1
 4623              	# copy-collector output starts
 4624 0ad8 CDE928CE 	strd r12,r14,[sp,#160]
 4625 0adc CDE93645 	strd r4,r5,[sp,#216]
 4626              	# copy-collector output ends
 4627 0ae0 A3FB01EC 	umull r14,r12,r3,r1
 4628              	
 4629              	# qhasm: lotmp hitmp += lou0 * two13
 4630              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<lou0=int32#3,<two13=int32#2
 4631              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<lou0=r2,<two13=r1
 4632 0ae4 E2FB01CE 	umlal r12,r14,r2,r1
 4633              	
 4634              	# qhasm: lotmp ^= (lou0 unsigned>> 6)
 4635              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou0=int32#3,LSR #6
 4636              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou0=r2,LSR #6
 4637 0ae8 8EEA921E 	eor r14,r14,r2,LSR #6
 4638              	
 4639              	# qhasm: lotmp ^= (hiu0 << 26)
 4640              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu0=int32#4,LSL #26
 4641              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu0=r3,LSL #26
 4642 0aec 8EEA836E 	eor r14,r14,r3,LSL #26
 4643              	
 4644              	# qhasm: lotmp ^= (hiu0 unsigned>> 29)
 4645              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu0=int32#4,LSR #29
 4646              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu0=r3,LSR #29
 4647 0af0 8EEA537E 	eor r14,r14,r3,LSR #29
 4648              	
 4649              	# qhasm: lotmp ^= (lou0 << 3)
 4650              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou0=int32#3,LSL #3
 4651              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou0=r2,LSL #3
 4652 0af4 8EEAC20E 	eor r14,r14,r2,LSL #3
 4653              	
 4654              	# qhasm: hitmp ^= (hiu0 unsigned>> 6)
 4655              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#4,LSR #6
 4656              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r3,LSR #6
 4657 0af8 8CEA931C 	eor r12,r12,r3,LSR #6
 4658              	
 4659              	# qhasm: hitmp ^= (lou0 unsigned>> 29)
 4660              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#13,<lou0=int32#3,LSR #29
 4661              	# asm 2: eor >hitmp=r2,<hitmp=r12,<lou0=r2,LSR #29
 4662 0afc 8CEA5272 	eor r2,r12,r2,LSR #29
 4663              	
 4664              	# qhasm: hitmp ^= (hiu0 << 3)
 4665              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<hiu0=int32#4,LSL #3
 4666              	# asm 2: eor >hitmp=r2,<hitmp=r2,<hiu0=r3,LSL #3
 4667 0b00 82EAC302 	eor r2,r2,r3,LSL #3
 4668              	
 4669              	# qhasm: carry? lou4 += lotmp
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 83


 4670              	# asm 1: adds >lou4=int32#4,<lou4=int32#11,<lotmp=int32#14
 4671              	# asm 2: adds >lou4=r3,<lou4=r10,<lotmp=r14
 4672 0b04 1AEB0E03 	adds r3,r10,r14
 4673              	
 4674              	# qhasm: hiu4 += hitmp + carry
 4675              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#12,<hitmp=int32#3
 4676              	# asm 2: adc >hiu4=r2,<hiu4=r11,<hitmp=r2
 4677 0b08 4BEB0202 	adc r2,r11,r2
 4678              	
 4679              	# qhasm: lou0 = lod11
 4680              	# asm 1: ldr >lou0=int32#11,<lod11=stack32#43
 4681              	# asm 2: ldr >lou0=r10,<lod11=[sp,#168]
 4682              	# copy-collector input: ldr r10,[sp,#168]
 4683              	
 4684              	# qhasm: hiu0 = hid11
 4685              	# asm 1: ldr >hiu0=int32#12,<hid11=stack32#44
 4686              	# asm 2: ldr >hiu0=r11,<hid11=[sp,#172]
 4687              	# copy-collector input: ldr r11,[sp,#172]
 4688              	
 4689              	# qhasm: hitmp lotmp = hiu0 * two24
 4690              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<hiu0=int32#12,<two24=int32#1
 4691              	# asm 2: umull >lotmp=r14,>hitmp=r12,<hiu0=r11,<two24=r0
 4692              	# copy-collector output starts
 4693 0b0c DDE92AAB 	ldrd r10,r11,[sp,#168]
 4694              	# copy-collector output ends
 4695 0b10 ABFB00EC 	umull r14,r12,r11,r0
 4696              	
 4697              	# qhasm: lotmp hitmp += lou0 * two24
 4698              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<lou0=int32#11,<two24=int32#1
 4699              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<lou0=r10,<two24=r0
 4700 0b14 EAFB00CE 	umlal r12,r14,r10,r0
 4701              	
 4702              	# qhasm: carry? lotmp ^= (lou0 unsigned>> 1)
 4703              	# asm 1: eors >lotmp=int32#14,<lotmp=int32#14,<lou0=int32#11,LSR #1
 4704              	# asm 2: eors >lotmp=r14,<lotmp=r14,<lou0=r10,LSR #1
 4705 0b18 9EEA5A0E 	eors r14,r14,r10,LSR #1
 4706              	
 4707              	# qhasm: hitmp ^= (carry,hiu0 unsigned>> 1)
 4708              	# asm 1: eors >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#12,RRX
 4709              	# asm 2: eors >hitmp=r12,<hitmp=r12,<hiu0=r11,RRX
 4710 0b1c 9CEA3B0C 	eors r12,r12,r11,RRX
 4711              	
 4712              	# qhasm: lotmp ^= (hiu0 << 31)
 4713              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu0=int32#12,LSL #31
 4714              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu0=r11,LSL #31
 4715 0b20 8EEACB7E 	eor r14,r14,r11,LSL #31
 4716              	
 4717              	# qhasm: lotmp ^= (lou0 unsigned>>7)
 4718              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou0=int32#11,LSR #7
 4719              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou0=r10,LSR #7
 4720 0b24 8EEADA1E 	eor r14,r14,r10,LSR #7
 4721              	
 4722              	# qhasm: lotmp ^= (hiu0 << 25)
 4723              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu0=int32#12,LSL #25
 4724              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu0=r11,LSL #25
 4725 0b28 8EEA4B6E 	eor r14,r14,r11,LSL #25
 4726              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 84


 4727              	# qhasm: hitmp ^= (hiu0 unsigned>>7)
 4728              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#12,LSR #7
 4729              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r11,LSR #7
 4730 0b2c 8CEADB1C 	eor r12,r12,r11,LSR #7
 4731              	
 4732              	# qhasm: carry? lou4 += lotmp
 4733              	# asm 1: adds >lou4=int32#4,<lou4=int32#4,<lotmp=int32#14
 4734              	# asm 2: adds >lou4=r3,<lou4=r3,<lotmp=r14
 4735 0b30 13EB0E03 	adds r3,r3,r14
 4736              	
 4737              	# qhasm: hiu4 += hitmp + carry
 4738              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hitmp=int32#13
 4739              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hitmp=r12
 4740 0b34 42EB0C02 	adc r2,r2,r12
 4741              	
 4742              	# qhasm: lou5 = lom11
 4743              	# asm 1: ldr >lou5=int32#13,<lom11=stack32#59
 4744              	# asm 2: ldr >lou5=r12,<lom11=[sp,#232]
 4745              	# copy-collector input: ldr r12,[sp,#232]
 4746              	
 4747              	# qhasm: hiu5 = him11
 4748              	# asm 1: ldr >hiu5=int32#14,<him11=stack32#60
 4749              	# asm 2: ldr >hiu5=r14,<him11=[sp,#236]
 4750              	# copy-collector input: ldr r14,[sp,#236]
 4751              	
 4752              	# qhasm: carry? lou4 += lou5
 4753              	# asm 1: adds >lou4=int32#4,<lou4=int32#4,<lou5=int32#13
 4754              	# asm 2: adds >lou4=r3,<lou4=r3,<lou5=r12
 4755              	# copy-collector output starts
 4756 0b38 DDE93ACE 	ldrd r12,r14,[sp,#232]
 4757              	# copy-collector output ends
 4758 0b3c 13EB0C03 	adds r3,r3,r12
 4759              	
 4760              	# qhasm: hiu4 += hiu5 + carry
 4761              	# asm 1: adc >hiu4=int32#3,<hiu4=int32#3,<hiu5=int32#14
 4762              	# asm 2: adc >hiu4=r2,<hiu4=r2,<hiu5=r14
 4763 0b40 42EB0E02 	adc r2,r2,r14
 4764              	
 4765              	# qhasm: lod11 = lou5
 4766              	# asm 1: str <lou5=int32#13,>lod11=stack32#43
 4767              	# asm 2: str <lou5=r12,>lod11=[sp,#168]
 4768              	# copy-collector input: str r12,[sp,#168]
 4769              	
 4770              	# qhasm: hid11 = hiu5
 4771              	# asm 1: str <hiu5=int32#14,>hid11=stack32#44
 4772              	# asm 2: str <hiu5=r14,>hid11=[sp,#172]
 4773              	# copy-collector input: str r14,[sp,#172]
 4774              	
 4775              	# qhasm: lom10 = lou4
 4776              	# asm 1: str <lou4=int32#4,>lom10=stack32#57
 4777              	# asm 2: str <lou4=r3,>lom10=[sp,#224]
 4778              	# copy-collector input: str r3,[sp,#224]
 4779              	
 4780              	# qhasm: him10 = hiu4
 4781              	# asm 1: str <hiu4=int32#3,>him10=stack32#58
 4782              	# asm 2: str <hiu4=r2,>him10=[sp,#228]
 4783              	# copy-collector input: str r2,[sp,#228]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 85


 4784              	
 4785              	# qhasm: hitmp lotmp = hiu1 * two13
 4786              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<hiu1=int32#6,<two13=int32#2
 4787              	# asm 2: umull >lotmp=r14,>hitmp=r12,<hiu1=r5,<two13=r1
 4788              	# copy-collector output starts
 4789 0b44 CDE92ACE 	strd r12,r14,[sp,#168]
 4790 0b48 CDE93832 	strd r3,r2,[sp,#224]
 4791              	# copy-collector output ends
 4792 0b4c A5FB01EC 	umull r14,r12,r5,r1
 4793              	
 4794              	# qhasm: lotmp hitmp += lou1 * two13
 4795              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<lou1=int32#5,<two13=int32#2
 4796              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<lou1=r4,<two13=r1
 4797 0b50 E4FB01CE 	umlal r12,r14,r4,r1
 4798              	
 4799              	# qhasm: lotmp ^= (lou1 unsigned>> 6)
 4800              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou1=int32#5,LSR #6
 4801              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou1=r4,LSR #6
 4802 0b54 8EEA941E 	eor r14,r14,r4,LSR #6
 4803              	
 4804              	# qhasm: lotmp ^= (hiu1 << 26)
 4805              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu1=int32#6,LSL #26
 4806              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu1=r5,LSL #26
 4807 0b58 8EEA856E 	eor r14,r14,r5,LSL #26
 4808              	
 4809              	# qhasm: lotmp ^= (hiu1 unsigned>> 29)
 4810              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu1=int32#6,LSR #29
 4811              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu1=r5,LSR #29
 4812 0b5c 8EEA557E 	eor r14,r14,r5,LSR #29
 4813              	
 4814              	# qhasm: lotmp ^= (lou1 << 3)
 4815              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou1=int32#5,LSL #3
 4816              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou1=r4,LSL #3
 4817 0b60 8EEAC40E 	eor r14,r14,r4,LSL #3
 4818              	
 4819              	# qhasm: hitmp ^= (hiu1 unsigned>> 6)
 4820              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu1=int32#6,LSR #6
 4821              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu1=r5,LSR #6
 4822 0b64 8CEA951C 	eor r12,r12,r5,LSR #6
 4823              	
 4824              	# qhasm: hitmp ^= (lou1 unsigned>> 29)
 4825              	# asm 1: eor >hitmp=int32#5,<hitmp=int32#13,<lou1=int32#5,LSR #29
 4826              	# asm 2: eor >hitmp=r4,<hitmp=r12,<lou1=r4,LSR #29
 4827 0b68 8CEA5474 	eor r4,r12,r4,LSR #29
 4828              	
 4829              	# qhasm: hitmp ^= (hiu1 << 3)
 4830              	# asm 1: eor >hitmp=int32#5,<hitmp=int32#5,<hiu1=int32#6,LSL #3
 4831              	# asm 2: eor >hitmp=r4,<hitmp=r4,<hiu1=r5,LSL #3
 4832 0b6c 84EAC504 	eor r4,r4,r5,LSL #3
 4833              	
 4834              	# qhasm: carry? lou0 += lotmp
 4835              	# asm 1: adds >lou0=int32#6,<lou0=int32#11,<lotmp=int32#14
 4836              	# asm 2: adds >lou0=r5,<lou0=r10,<lotmp=r14
 4837 0b70 1AEB0E05 	adds r5,r10,r14
 4838              	
 4839              	# qhasm: hiu0 += hitmp + carry
 4840              	# asm 1: adc >hiu0=int32#5,<hiu0=int32#12,<hitmp=int32#5
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 86


 4841              	# asm 2: adc >hiu0=r4,<hiu0=r11,<hitmp=r4
 4842 0b74 4BEB0404 	adc r4,r11,r4
 4843              	
 4844              	# qhasm: lou1 = lod12
 4845              	# asm 1: ldr >lou1=int32#11,<lod12=stack32#45
 4846              	# asm 2: ldr >lou1=r10,<lod12=[sp,#176]
 4847              	# copy-collector input: ldr r10,[sp,#176]
 4848              	
 4849              	# qhasm: hiu1 = hid12
 4850              	# asm 1: ldr >hiu1=int32#12,<hid12=stack32#46
 4851              	# asm 2: ldr >hiu1=r11,<hid12=[sp,#180]
 4852              	# copy-collector input: ldr r11,[sp,#180]
 4853              	
 4854              	# qhasm: hitmp lotmp = hiu1 * two24
 4855              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<hiu1=int32#12,<two24=int32#1
 4856              	# asm 2: umull >lotmp=r14,>hitmp=r12,<hiu1=r11,<two24=r0
 4857              	# copy-collector output starts
 4858 0b78 DDE92CAB 	ldrd r10,r11,[sp,#176]
 4859              	# copy-collector output ends
 4860 0b7c ABFB00EC 	umull r14,r12,r11,r0
 4861              	
 4862              	# qhasm: lotmp hitmp += lou1 * two24
 4863              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<lou1=int32#11,<two24=int32#1
 4864              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<lou1=r10,<two24=r0
 4865 0b80 EAFB00CE 	umlal r12,r14,r10,r0
 4866              	
 4867              	# qhasm: carry? lotmp ^= (lou1 unsigned>> 1)
 4868              	# asm 1: eors >lotmp=int32#14,<lotmp=int32#14,<lou1=int32#11,LSR #1
 4869              	# asm 2: eors >lotmp=r14,<lotmp=r14,<lou1=r10,LSR #1
 4870 0b84 9EEA5A0E 	eors r14,r14,r10,LSR #1
 4871              	
 4872              	# qhasm: hitmp ^= (carry,hiu1 unsigned>> 1)
 4873              	# asm 1: eors >hitmp=int32#13,<hitmp=int32#13,<hiu1=int32#12,RRX
 4874              	# asm 2: eors >hitmp=r12,<hitmp=r12,<hiu1=r11,RRX
 4875 0b88 9CEA3B0C 	eors r12,r12,r11,RRX
 4876              	
 4877              	# qhasm: lotmp ^= (hiu1 << 31)
 4878              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu1=int32#12,LSL #31
 4879              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu1=r11,LSL #31
 4880 0b8c 8EEACB7E 	eor r14,r14,r11,LSL #31
 4881              	
 4882              	# qhasm: lotmp ^= (lou1 unsigned>>7)
 4883              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou1=int32#11,LSR #7
 4884              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou1=r10,LSR #7
 4885 0b90 8EEADA1E 	eor r14,r14,r10,LSR #7
 4886              	
 4887              	# qhasm: lotmp ^= (hiu1 << 25)
 4888              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu1=int32#12,LSL #25
 4889              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu1=r11,LSL #25
 4890 0b94 8EEA4B6E 	eor r14,r14,r11,LSL #25
 4891              	
 4892              	# qhasm: hitmp ^= (hiu1 unsigned>>7)
 4893              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu1=int32#12,LSR #7
 4894              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu1=r11,LSR #7
 4895 0b98 8CEADB1C 	eor r12,r12,r11,LSR #7
 4896              	
 4897              	# qhasm: carry? lou0 += lotmp
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 87


 4898              	# asm 1: adds >lou0=int32#6,<lou0=int32#6,<lotmp=int32#14
 4899              	# asm 2: adds >lou0=r5,<lou0=r5,<lotmp=r14
 4900 0b9c 15EB0E05 	adds r5,r5,r14
 4901              	
 4902              	# qhasm: hiu0 += hitmp + carry
 4903              	# asm 1: adc >hiu0=int32#5,<hiu0=int32#5,<hitmp=int32#13
 4904              	# asm 2: adc >hiu0=r4,<hiu0=r4,<hitmp=r12
 4905 0ba0 44EB0C04 	adc r4,r4,r12
 4906              	
 4907              	# qhasm: lou5 = lom12
 4908              	# asm 1: ldr >lou5=int32#13,<lom12=stack32#61
 4909              	# asm 2: ldr >lou5=r12,<lom12=[sp,#240]
 4910              	# copy-collector input: ldr r12,[sp,#240]
 4911              	
 4912              	# qhasm: hiu5 = him12
 4913              	# asm 1: ldr >hiu5=int32#14,<him12=stack32#62
 4914              	# asm 2: ldr >hiu5=r14,<him12=[sp,#244]
 4915              	# copy-collector input: ldr r14,[sp,#244]
 4916              	
 4917              	# qhasm: carry? lou0 += lou5
 4918              	# asm 1: adds >lou0=int32#6,<lou0=int32#6,<lou5=int32#13
 4919              	# asm 2: adds >lou0=r5,<lou0=r5,<lou5=r12
 4920              	# copy-collector output starts
 4921 0ba4 DDE93CCE 	ldrd r12,r14,[sp,#240]
 4922              	# copy-collector output ends
 4923 0ba8 15EB0C05 	adds r5,r5,r12
 4924              	
 4925              	# qhasm: hiu0 += hiu5 + carry
 4926              	# asm 1: adc >hiu0=int32#5,<hiu0=int32#5,<hiu5=int32#14
 4927              	# asm 2: adc >hiu0=r4,<hiu0=r4,<hiu5=r14
 4928 0bac 44EB0E04 	adc r4,r4,r14
 4929              	
 4930              	# qhasm: lod12 = lou5
 4931              	# asm 1: str <lou5=int32#13,>lod12=stack32#45
 4932              	# asm 2: str <lou5=r12,>lod12=[sp,#176]
 4933              	# copy-collector input: str r12,[sp,#176]
 4934              	
 4935              	# qhasm: hid12 = hiu5
 4936              	# asm 1: str <hiu5=int32#14,>hid12=stack32#46
 4937              	# asm 2: str <hiu5=r14,>hid12=[sp,#180]
 4938              	# copy-collector input: str r14,[sp,#180]
 4939              	
 4940              	# qhasm: lom11 = lou0
 4941              	# asm 1: str <lou0=int32#6,>lom11=stack32#59
 4942              	# asm 2: str <lou0=r5,>lom11=[sp,#232]
 4943              	# copy-collector input: str r5,[sp,#232]
 4944              	
 4945              	# qhasm: him11 = hiu0
 4946              	# asm 1: str <hiu0=int32#5,>him11=stack32#60
 4947              	# asm 2: str <hiu0=r4,>him11=[sp,#236]
 4948              	# copy-collector input: str r4,[sp,#236]
 4949              	
 4950              	# qhasm: hitmp lotmp = hiu4 * two13
 4951              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<hiu4=int32#3,<two13=int32#2
 4952              	# asm 2: umull >lotmp=r14,>hitmp=r12,<hiu4=r2,<two13=r1
 4953              	# copy-collector output starts
 4954 0bb0 CDE92CCE 	strd r12,r14,[sp,#176]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 88


 4955 0bb4 CDE93A54 	strd r5,r4,[sp,#232]
 4956              	# copy-collector output ends
 4957 0bb8 A2FB01EC 	umull r14,r12,r2,r1
 4958              	
 4959              	# qhasm: lotmp hitmp += lou4 * two13
 4960              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<lou4=int32#4,<two13=int32#2
 4961              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<lou4=r3,<two13=r1
 4962 0bbc E3FB01CE 	umlal r12,r14,r3,r1
 4963              	
 4964              	# qhasm: lotmp ^= (lou4 unsigned>> 6)
 4965              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou4=int32#4,LSR #6
 4966              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou4=r3,LSR #6
 4967 0bc0 8EEA931E 	eor r14,r14,r3,LSR #6
 4968              	
 4969              	# qhasm: lotmp ^= (hiu4 << 26)
 4970              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu4=int32#3,LSL #26
 4971              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu4=r2,LSL #26
 4972 0bc4 8EEA826E 	eor r14,r14,r2,LSL #26
 4973              	
 4974              	# qhasm: lotmp ^= (hiu4 unsigned>> 29)
 4975              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu4=int32#3,LSR #29
 4976              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu4=r2,LSR #29
 4977 0bc8 8EEA527E 	eor r14,r14,r2,LSR #29
 4978              	
 4979              	# qhasm: lotmp ^= (lou4 << 3)
 4980              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou4=int32#4,LSL #3
 4981              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou4=r3,LSL #3
 4982 0bcc 8EEAC30E 	eor r14,r14,r3,LSL #3
 4983              	
 4984              	# qhasm: hitmp ^= (hiu4 unsigned>> 6)
 4985              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu4=int32#3,LSR #6
 4986              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu4=r2,LSR #6
 4987 0bd0 8CEA921C 	eor r12,r12,r2,LSR #6
 4988              	
 4989              	# qhasm: hitmp ^= (lou4 unsigned>> 29)
 4990              	# asm 1: eor >hitmp=int32#4,<hitmp=int32#13,<lou4=int32#4,LSR #29
 4991              	# asm 2: eor >hitmp=r3,<hitmp=r12,<lou4=r3,LSR #29
 4992 0bd4 8CEA5373 	eor r3,r12,r3,LSR #29
 4993              	
 4994              	# qhasm: hitmp ^= (hiu4 << 3)
 4995              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#4,<hiu4=int32#3,LSL #3
 4996              	# asm 2: eor >hitmp=r2,<hitmp=r3,<hiu4=r2,LSL #3
 4997 0bd8 83EAC202 	eor r2,r3,r2,LSL #3
 4998              	
 4999              	# qhasm: carry? lou1 += lotmp
 5000              	# asm 1: adds >lou1=int32#4,<lou1=int32#11,<lotmp=int32#14
 5001              	# asm 2: adds >lou1=r3,<lou1=r10,<lotmp=r14
 5002 0bdc 1AEB0E03 	adds r3,r10,r14
 5003              	
 5004              	# qhasm: hiu1 += hitmp + carry
 5005              	# asm 1: adc >hiu1=int32#3,<hiu1=int32#12,<hitmp=int32#3
 5006              	# asm 2: adc >hiu1=r2,<hiu1=r11,<hitmp=r2
 5007 0be0 4BEB0202 	adc r2,r11,r2
 5008              	
 5009              	# qhasm: lou4 = lod13
 5010              	# asm 1: ldr >lou4=int32#11,<lod13=stack32#47
 5011              	# asm 2: ldr >lou4=r10,<lod13=[sp,#184]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 89


 5012              	# copy-collector input: ldr r10,[sp,#184]
 5013              	
 5014              	# qhasm: hiu4 = hid13
 5015              	# asm 1: ldr >hiu4=int32#12,<hid13=stack32#48
 5016              	# asm 2: ldr >hiu4=r11,<hid13=[sp,#188]
 5017              	# copy-collector input: ldr r11,[sp,#188]
 5018              	
 5019              	# qhasm: hitmp lotmp = hiu4 * two24
 5020              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<hiu4=int32#12,<two24=int32#1
 5021              	# asm 2: umull >lotmp=r14,>hitmp=r12,<hiu4=r11,<two24=r0
 5022              	# copy-collector output starts
 5023 0be4 DDE92EAB 	ldrd r10,r11,[sp,#184]
 5024              	# copy-collector output ends
 5025 0be8 ABFB00EC 	umull r14,r12,r11,r0
 5026              	
 5027              	# qhasm: lotmp hitmp += lou4 * two24
 5028              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<lou4=int32#11,<two24=int32#1
 5029              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<lou4=r10,<two24=r0
 5030 0bec EAFB00CE 	umlal r12,r14,r10,r0
 5031              	
 5032              	# qhasm: carry? lotmp ^= (lou4 unsigned>> 1)
 5033              	# asm 1: eors >lotmp=int32#14,<lotmp=int32#14,<lou4=int32#11,LSR #1
 5034              	# asm 2: eors >lotmp=r14,<lotmp=r14,<lou4=r10,LSR #1
 5035 0bf0 9EEA5A0E 	eors r14,r14,r10,LSR #1
 5036              	
 5037              	# qhasm: hitmp ^= (carry,hiu4 unsigned>> 1)
 5038              	# asm 1: eors >hitmp=int32#13,<hitmp=int32#13,<hiu4=int32#12,RRX
 5039              	# asm 2: eors >hitmp=r12,<hitmp=r12,<hiu4=r11,RRX
 5040 0bf4 9CEA3B0C 	eors r12,r12,r11,RRX
 5041              	
 5042              	# qhasm: lotmp ^= (hiu4 << 31)
 5043              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu4=int32#12,LSL #31
 5044              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu4=r11,LSL #31
 5045 0bf8 8EEACB7E 	eor r14,r14,r11,LSL #31
 5046              	
 5047              	# qhasm: lotmp ^= (lou4 unsigned>>7)
 5048              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou4=int32#11,LSR #7
 5049              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou4=r10,LSR #7
 5050 0bfc 8EEADA1E 	eor r14,r14,r10,LSR #7
 5051              	
 5052              	# qhasm: lotmp ^= (hiu4 << 25)
 5053              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu4=int32#12,LSL #25
 5054              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu4=r11,LSL #25
 5055 0c00 8EEA4B6E 	eor r14,r14,r11,LSL #25
 5056              	
 5057              	# qhasm: hitmp ^= (hiu4 unsigned>>7)
 5058              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu4=int32#12,LSR #7
 5059              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu4=r11,LSR #7
 5060 0c04 8CEADB1C 	eor r12,r12,r11,LSR #7
 5061              	
 5062              	# qhasm: carry? lou1 += lotmp
 5063              	# asm 1: adds >lou1=int32#4,<lou1=int32#4,<lotmp=int32#14
 5064              	# asm 2: adds >lou1=r3,<lou1=r3,<lotmp=r14
 5065 0c08 13EB0E03 	adds r3,r3,r14
 5066              	
 5067              	# qhasm: hiu1 += hitmp + carry
 5068              	# asm 1: adc >hiu1=int32#3,<hiu1=int32#3,<hitmp=int32#13
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 90


 5069              	# asm 2: adc >hiu1=r2,<hiu1=r2,<hitmp=r12
 5070 0c0c 42EB0C02 	adc r2,r2,r12
 5071              	
 5072              	# qhasm: lou5 = lom13
 5073              	# asm 1: ldr >lou5=int32#13,<lom13=stack32#63
 5074              	# asm 2: ldr >lou5=r12,<lom13=[sp,#248]
 5075              	# copy-collector input: ldr r12,[sp,#248]
 5076              	
 5077              	# qhasm: hiu5 = him13
 5078              	# asm 1: ldr >hiu5=int32#14,<him13=stack32#64
 5079              	# asm 2: ldr >hiu5=r14,<him13=[sp,#252]
 5080              	# copy-collector input: ldr r14,[sp,#252]
 5081              	
 5082              	# qhasm: carry? lou1 += lou5
 5083              	# asm 1: adds >lou1=int32#4,<lou1=int32#4,<lou5=int32#13
 5084              	# asm 2: adds >lou1=r3,<lou1=r3,<lou5=r12
 5085              	# copy-collector output starts
 5086 0c10 DDE93ECE 	ldrd r12,r14,[sp,#248]
 5087              	# copy-collector output ends
 5088 0c14 13EB0C03 	adds r3,r3,r12
 5089              	
 5090              	# qhasm: hiu1 += hiu5 + carry
 5091              	# asm 1: adc >hiu1=int32#3,<hiu1=int32#3,<hiu5=int32#14
 5092              	# asm 2: adc >hiu1=r2,<hiu1=r2,<hiu5=r14
 5093 0c18 42EB0E02 	adc r2,r2,r14
 5094              	
 5095              	# qhasm: lod13 = lou5
 5096              	# asm 1: str <lou5=int32#13,>lod13=stack32#47
 5097              	# asm 2: str <lou5=r12,>lod13=[sp,#184]
 5098              	# copy-collector input: str r12,[sp,#184]
 5099              	
 5100              	# qhasm: hid13 = hiu5
 5101              	# asm 1: str <hiu5=int32#14,>hid13=stack32#48
 5102              	# asm 2: str <hiu5=r14,>hid13=[sp,#188]
 5103              	# copy-collector input: str r14,[sp,#188]
 5104              	
 5105              	# qhasm: lom12 = lou1
 5106              	# asm 1: str <lou1=int32#4,>lom12=stack32#61
 5107              	# asm 2: str <lou1=r3,>lom12=[sp,#240]
 5108              	# copy-collector input: str r3,[sp,#240]
 5109              	
 5110              	# qhasm: him12 = hiu1
 5111              	# asm 1: str <hiu1=int32#3,>him12=stack32#62
 5112              	# asm 2: str <hiu1=r2,>him12=[sp,#244]
 5113              	# copy-collector input: str r2,[sp,#244]
 5114              	
 5115              	# qhasm: hitmp lotmp = hiu0 * two13
 5116              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<hiu0=int32#5,<two13=int32#2
 5117              	# asm 2: umull >lotmp=r14,>hitmp=r12,<hiu0=r4,<two13=r1
 5118              	# copy-collector output starts
 5119 0c1c CDE92ECE 	strd r12,r14,[sp,#184]
 5120 0c20 CDE93C32 	strd r3,r2,[sp,#240]
 5121              	# copy-collector output ends
 5122 0c24 A4FB01EC 	umull r14,r12,r4,r1
 5123              	
 5124              	# qhasm: lotmp hitmp += lou0 * two13
 5125              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<lou0=int32#6,<two13=int32#2
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 91


 5126              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<lou0=r5,<two13=r1
 5127 0c28 E5FB01CE 	umlal r12,r14,r5,r1
 5128              	
 5129              	# qhasm: lotmp ^= (lou0 unsigned>> 6)
 5130              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou0=int32#6,LSR #6
 5131              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou0=r5,LSR #6
 5132 0c2c 8EEA951E 	eor r14,r14,r5,LSR #6
 5133              	
 5134              	# qhasm: lotmp ^= (hiu0 << 26)
 5135              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu0=int32#5,LSL #26
 5136              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu0=r4,LSL #26
 5137 0c30 8EEA846E 	eor r14,r14,r4,LSL #26
 5138              	
 5139              	# qhasm: lotmp ^= (hiu0 unsigned>> 29)
 5140              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu0=int32#5,LSR #29
 5141              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu0=r4,LSR #29
 5142 0c34 8EEA547E 	eor r14,r14,r4,LSR #29
 5143              	
 5144              	# qhasm: lotmp ^= (lou0 << 3)
 5145              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou0=int32#6,LSL #3
 5146              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou0=r5,LSL #3
 5147 0c38 8EEAC50E 	eor r14,r14,r5,LSL #3
 5148              	
 5149              	# qhasm: hitmp ^= (hiu0 unsigned>> 6)
 5150              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#5,LSR #6
 5151              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r4,LSR #6
 5152 0c3c 8CEA941C 	eor r12,r12,r4,LSR #6
 5153              	
 5154              	# qhasm: hitmp ^= (lou0 unsigned>> 29)
 5155              	# asm 1: eor >hitmp=int32#6,<hitmp=int32#13,<lou0=int32#6,LSR #29
 5156              	# asm 2: eor >hitmp=r5,<hitmp=r12,<lou0=r5,LSR #29
 5157 0c40 8CEA5575 	eor r5,r12,r5,LSR #29
 5158              	
 5159              	# qhasm: hitmp ^= (hiu0 << 3)
 5160              	# asm 1: eor >hitmp=int32#5,<hitmp=int32#6,<hiu0=int32#5,LSL #3
 5161              	# asm 2: eor >hitmp=r4,<hitmp=r5,<hiu0=r4,LSL #3
 5162 0c44 85EAC404 	eor r4,r5,r4,LSL #3
 5163              	
 5164              	# qhasm: carry? lou4 += lotmp
 5165              	# asm 1: adds >lou4=int32#6,<lou4=int32#11,<lotmp=int32#14
 5166              	# asm 2: adds >lou4=r5,<lou4=r10,<lotmp=r14
 5167 0c48 1AEB0E05 	adds r5,r10,r14
 5168              	
 5169              	# qhasm: hiu4 += hitmp + carry
 5170              	# asm 1: adc >hiu4=int32#5,<hiu4=int32#12,<hitmp=int32#5
 5171              	# asm 2: adc >hiu4=r4,<hiu4=r11,<hitmp=r4
 5172 0c4c 4BEB0404 	adc r4,r11,r4
 5173              	
 5174              	# qhasm: lou0 = lod14
 5175              	# asm 1: ldr >lou0=int32#11,<lod14=stack32#49
 5176              	# asm 2: ldr >lou0=r10,<lod14=[sp,#192]
 5177              	# copy-collector input: ldr r10,[sp,#192]
 5178              	
 5179              	# qhasm: hiu0 = hid14
 5180              	# asm 1: ldr >hiu0=int32#12,<hid14=stack32#50
 5181              	# asm 2: ldr >hiu0=r11,<hid14=[sp,#196]
 5182              	# copy-collector input: ldr r11,[sp,#196]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 92


 5183              	
 5184              	# qhasm: lod14 = lou2
 5185              	# asm 1: str <lou2=int32#7,>lod14=stack32#49
 5186              	# asm 2: str <lou2=r6,>lod14=[sp,#192]
 5187              	# copy-collector input: str r6,[sp,#192]
 5188              	
 5189              	# qhasm: hid14 = hiu2
 5190              	# asm 1: str <hiu2=int32#8,>hid14=stack32#50
 5191              	# asm 2: str <hiu2=r7,>hid14=[sp,#196]
 5192              	# copy-collector input: str r7,[sp,#196]
 5193              	
 5194              	# qhasm: hitmp lotmp = hiu0 * two24
 5195              	# asm 1: umull >lotmp=int32#14,>hitmp=int32#13,<hiu0=int32#12,<two24=int32#1
 5196              	# asm 2: umull >lotmp=r14,>hitmp=r12,<hiu0=r11,<two24=r0
 5197              	# copy-collector output starts
 5198 0c50 DDE930AB 	ldrd r10,r11,[sp,#192]
 5199 0c54 CDE93067 	strd r6,r7,[sp,#192]
 5200              	# copy-collector output ends
 5201 0c58 ABFB00EC 	umull r14,r12,r11,r0
 5202              	
 5203              	# qhasm: lotmp hitmp += lou0 * two24
 5204              	# asm 1: umlal <hitmp=int32#13,<lotmp=int32#14,<lou0=int32#11,<two24=int32#1
 5205              	# asm 2: umlal <hitmp=r12,<lotmp=r14,<lou0=r10,<two24=r0
 5206 0c5c EAFB00CE 	umlal r12,r14,r10,r0
 5207              	
 5208              	# qhasm: carry? lotmp ^= (lou0 unsigned>> 1)
 5209              	# asm 1: eors >lotmp=int32#14,<lotmp=int32#14,<lou0=int32#11,LSR #1
 5210              	# asm 2: eors >lotmp=r14,<lotmp=r14,<lou0=r10,LSR #1
 5211 0c60 9EEA5A0E 	eors r14,r14,r10,LSR #1
 5212              	
 5213              	# qhasm: hitmp ^= (carry,hiu0 unsigned>> 1)
 5214              	# asm 1: eors >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#12,RRX
 5215              	# asm 2: eors >hitmp=r12,<hitmp=r12,<hiu0=r11,RRX
 5216 0c64 9CEA3B0C 	eors r12,r12,r11,RRX
 5217              	
 5218              	# qhasm: lotmp ^= (hiu0 << 31)
 5219              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu0=int32#12,LSL #31
 5220              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu0=r11,LSL #31
 5221 0c68 8EEACB7E 	eor r14,r14,r11,LSL #31
 5222              	
 5223              	# qhasm: lotmp ^= (lou0 unsigned>>7)
 5224              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<lou0=int32#11,LSR #7
 5225              	# asm 2: eor >lotmp=r14,<lotmp=r14,<lou0=r10,LSR #7
 5226 0c6c 8EEADA1E 	eor r14,r14,r10,LSR #7
 5227              	
 5228              	# qhasm: lotmp ^= (hiu0 << 25)
 5229              	# asm 1: eor >lotmp=int32#14,<lotmp=int32#14,<hiu0=int32#12,LSL #25
 5230              	# asm 2: eor >lotmp=r14,<lotmp=r14,<hiu0=r11,LSL #25
 5231 0c70 8EEA4B6E 	eor r14,r14,r11,LSL #25
 5232              	
 5233              	# qhasm: hitmp ^= (hiu0 unsigned>>7)
 5234              	# asm 1: eor >hitmp=int32#13,<hitmp=int32#13,<hiu0=int32#12,LSR #7
 5235              	# asm 2: eor >hitmp=r12,<hitmp=r12,<hiu0=r11,LSR #7
 5236 0c74 8CEADB1C 	eor r12,r12,r11,LSR #7
 5237              	
 5238              	# qhasm: carry? lou4 += lotmp
 5239              	# asm 1: adds >lou4=int32#6,<lou4=int32#6,<lotmp=int32#14
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 93


 5240              	# asm 2: adds >lou4=r5,<lou4=r5,<lotmp=r14
 5241 0c78 15EB0E05 	adds r5,r5,r14
 5242              	
 5243              	# qhasm: hiu4 += hitmp + carry
 5244              	# asm 1: adc >hiu4=int32#5,<hiu4=int32#5,<hitmp=int32#13
 5245              	# asm 2: adc >hiu4=r4,<hiu4=r4,<hitmp=r12
 5246 0c7c 44EB0C04 	adc r4,r4,r12
 5247              	
 5248              	# qhasm: carry? lou4 += lou2
 5249              	# asm 1: adds >lou4=int32#6,<lou4=int32#6,<lou2=int32#7
 5250              	# asm 2: adds >lou4=r5,<lou4=r5,<lou2=r6
 5251 0c80 15EB0605 	adds.w r5,r5,r6
 5252              	
 5253              	# qhasm: hiu4 += hiu2 + carry
 5254              	# asm 1: adc >hiu4=int32#5,<hiu4=int32#5,<hiu2=int32#8
 5255              	# asm 2: adc >hiu4=r4,<hiu4=r4,<hiu2=r7
 5256 0c84 44EB0704 	adc r4,r4,r7
 5257              	
 5258              	# qhasm: lom13 = lou4
 5259              	# asm 1: str <lou4=int32#6,>lom13=stack32#63
 5260              	# asm 2: str <lou4=r5,>lom13=[sp,#248]
 5261              	# copy-collector input: str r5,[sp,#248]
 5262              	
 5263              	# qhasm: him13 = hiu4
 5264              	# asm 1: str <hiu4=int32#5,>him13=stack32#64
 5265              	# asm 2: str <hiu4=r4,>him13=[sp,#252]
 5266              	# copy-collector input: str r4,[sp,#252]
 5267              	
 5268              	# qhasm: hitmp lotmp = hiu1 * two13
 5269              	# asm 1: umull >lotmp=int32#8,>hitmp=int32#7,<hiu1=int32#3,<two13=int32#2
 5270              	# asm 2: umull >lotmp=r7,>hitmp=r6,<hiu1=r2,<two13=r1
 5271              	# copy-collector output starts
 5272 0c88 CDE93E54 	strd r5,r4,[sp,#248]
 5273              	# copy-collector output ends
 5274 0c8c A2FB0176 	umull r7,r6,r2,r1
 5275              	
 5276              	# qhasm: lotmp hitmp += lou1 * two13
 5277              	# asm 1: umlal <hitmp=int32#7,<lotmp=int32#8,<lou1=int32#4,<two13=int32#2
 5278              	# asm 2: umlal <hitmp=r6,<lotmp=r7,<lou1=r3,<two13=r1
 5279 0c90 E3FB0167 	umlal r6,r7,r3,r1
 5280              	
 5281              	# qhasm: lotmp ^= (lou1 unsigned>> 6)
 5282              	# asm 1: eor >lotmp=int32#8,<lotmp=int32#8,<lou1=int32#4,LSR #6
 5283              	# asm 2: eor >lotmp=r7,<lotmp=r7,<lou1=r3,LSR #6
 5284 0c94 87EA9317 	eor r7,r7,r3,LSR #6
 5285              	
 5286              	# qhasm: lotmp ^= (hiu1 << 26)
 5287              	# asm 1: eor >lotmp=int32#8,<lotmp=int32#8,<hiu1=int32#3,LSL #26
 5288              	# asm 2: eor >lotmp=r7,<lotmp=r7,<hiu1=r2,LSL #26
 5289 0c98 87EA8267 	eor r7,r7,r2,LSL #26
 5290              	
 5291              	# qhasm: lotmp ^= (hiu1 unsigned>> 29)
 5292              	# asm 1: eor >lotmp=int32#8,<lotmp=int32#8,<hiu1=int32#3,LSR #29
 5293              	# asm 2: eor >lotmp=r7,<lotmp=r7,<hiu1=r2,LSR #29
 5294 0c9c 87EA5277 	eor r7,r7,r2,LSR #29
 5295              	
 5296              	# qhasm: lotmp ^= (lou1 << 3)
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 94


 5297              	# asm 1: eor >lotmp=int32#8,<lotmp=int32#8,<lou1=int32#4,LSL #3
 5298              	# asm 2: eor >lotmp=r7,<lotmp=r7,<lou1=r3,LSL #3
 5299 0ca0 87EAC307 	eor r7,r7,r3,LSL #3
 5300              	
 5301              	# qhasm: hitmp ^= (hiu1 unsigned>> 6)
 5302              	# asm 1: eor >hitmp=int32#7,<hitmp=int32#7,<hiu1=int32#3,LSR #6
 5303              	# asm 2: eor >hitmp=r6,<hitmp=r6,<hiu1=r2,LSR #6
 5304 0ca4 86EA9216 	eor r6,r6,r2,LSR #6
 5305              	
 5306              	# qhasm: hitmp ^= (lou1 unsigned>> 29)
 5307              	# asm 1: eor >hitmp=int32#4,<hitmp=int32#7,<lou1=int32#4,LSR #29
 5308              	# asm 2: eor >hitmp=r3,<hitmp=r6,<lou1=r3,LSR #29
 5309 0ca8 86EA5373 	eor r3,r6,r3,LSR #29
 5310              	
 5311              	# qhasm: hitmp ^= (hiu1 << 3)
 5312              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#4,<hiu1=int32#3,LSL #3
 5313              	# asm 2: eor >hitmp=r2,<hitmp=r3,<hiu1=r2,LSL #3
 5314 0cac 83EAC202 	eor r2,r3,r2,LSL #3
 5315              	
 5316              	# qhasm: carry? lou0 += lotmp
 5317              	# asm 1: adds >lou0=int32#4,<lou0=int32#11,<lotmp=int32#8
 5318              	# asm 2: adds >lou0=r3,<lou0=r10,<lotmp=r7
 5319 0cb0 1AEB0703 	adds r3,r10,r7
 5320              	
 5321              	# qhasm: hiu0 += hitmp + carry
 5322              	# asm 1: adc >hiu0=int32#3,<hiu0=int32#12,<hitmp=int32#3
 5323              	# asm 2: adc >hiu0=r2,<hiu0=r11,<hitmp=r2
 5324 0cb4 4BEB0202 	adc r2,r11,r2
 5325              	
 5326              	# qhasm: lou1 = lod15
 5327              	# asm 1: ldr >lou1=int32#7,<lod15=stack32#51
 5328              	# asm 2: ldr >lou1=r6,<lod15=[sp,#200]
 5329              	# copy-collector input: ldr r6,[sp,#200]
 5330              	
 5331              	# qhasm: hiu1 = hid15
 5332              	# asm 1: ldr >hiu1=int32#8,<hid15=stack32#52
 5333              	# asm 2: ldr >hiu1=r7,<hid15=[sp,#204]
 5334              	# copy-collector input: ldr r7,[sp,#204]
 5335              	
 5336              	# qhasm: lod15 = lou3
 5337              	# asm 1: str <lou3=int32#9,>lod15=stack32#51
 5338              	# asm 2: str <lou3=r8,>lod15=[sp,#200]
 5339              	# copy-collector input: str r8,[sp,#200]
 5340              	
 5341              	# qhasm: hid15 = hiu3
 5342              	# asm 1: str <hiu3=int32#10,>hid15=stack32#52
 5343              	# asm 2: str <hiu3=r9,>hid15=[sp,#204]
 5344              	# copy-collector input: str r9,[sp,#204]
 5345              	
 5346              	# qhasm: hitmp lotmp = hiu1 * two24
 5347              	# asm 1: umull >lotmp=int32#12,>hitmp=int32#11,<hiu1=int32#8,<two24=int32#1
 5348              	# asm 2: umull >lotmp=r11,>hitmp=r10,<hiu1=r7,<two24=r0
 5349              	# copy-collector output starts
 5350 0cb8 DDE93267 	ldrd r6,r7,[sp,#200]
 5351 0cbc CDE93289 	strd r8,r9,[sp,#200]
 5352              	# copy-collector output ends
 5353 0cc0 A7FB00BA 	umull r11,r10,r7,r0
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 95


 5354              	
 5355              	# qhasm: lotmp hitmp += lou1 * two24
 5356              	# asm 1: umlal <hitmp=int32#11,<lotmp=int32#12,<lou1=int32#7,<two24=int32#1
 5357              	# asm 2: umlal <hitmp=r10,<lotmp=r11,<lou1=r6,<two24=r0
 5358 0cc4 E6FB00AB 	umlal r10,r11,r6,r0
 5359              	
 5360              	# qhasm: carry? lotmp ^= (lou1 unsigned>> 1)
 5361              	# asm 1: eors >lotmp=int32#12,<lotmp=int32#12,<lou1=int32#7,LSR #1
 5362              	# asm 2: eors >lotmp=r11,<lotmp=r11,<lou1=r6,LSR #1
 5363 0cc8 9BEA560B 	eors r11,r11,r6,LSR #1
 5364              	
 5365              	# qhasm: hitmp ^= (carry,hiu1 unsigned>> 1)
 5366              	# asm 1: eors >hitmp=int32#11,<hitmp=int32#11,<hiu1=int32#8,RRX
 5367              	# asm 2: eors >hitmp=r10,<hitmp=r10,<hiu1=r7,RRX
 5368 0ccc 9AEA370A 	eors r10,r10,r7,RRX
 5369              	
 5370              	# qhasm: lotmp ^= (hiu1 << 31)
 5371              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu1=int32#8,LSL #31
 5372              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu1=r7,LSL #31
 5373 0cd0 8BEAC77B 	eor r11,r11,r7,LSL #31
 5374              	
 5375              	# qhasm: lotmp ^= (lou1 unsigned>>7)
 5376              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<lou1=int32#7,LSR #7
 5377              	# asm 2: eor >lotmp=r11,<lotmp=r11,<lou1=r6,LSR #7
 5378 0cd4 8BEAD61B 	eor r11,r11,r6,LSR #7
 5379              	
 5380              	# qhasm: lotmp ^= (hiu1 << 25)
 5381              	# asm 1: eor >lotmp=int32#12,<lotmp=int32#12,<hiu1=int32#8,LSL #25
 5382              	# asm 2: eor >lotmp=r11,<lotmp=r11,<hiu1=r7,LSL #25
 5383 0cd8 8BEA476B 	eor r11,r11,r7,LSL #25
 5384              	
 5385              	# qhasm: hitmp ^= (hiu1 unsigned>>7)
 5386              	# asm 1: eor >hitmp=int32#11,<hitmp=int32#11,<hiu1=int32#8,LSR #7
 5387              	# asm 2: eor >hitmp=r10,<hitmp=r10,<hiu1=r7,LSR #7
 5388 0cdc 8AEAD71A 	eor r10,r10,r7,LSR #7
 5389              	
 5390              	# qhasm: carry? lou0 += lotmp
 5391              	# asm 1: adds >lou0=int32#4,<lou0=int32#4,<lotmp=int32#12
 5392              	# asm 2: adds >lou0=r3,<lou0=r3,<lotmp=r11
 5393 0ce0 13EB0B03 	adds r3,r3,r11
 5394              	
 5395              	# qhasm: hiu0 += hitmp + carry
 5396              	# asm 1: adc >hiu0=int32#3,<hiu0=int32#3,<hitmp=int32#11
 5397              	# asm 2: adc >hiu0=r2,<hiu0=r2,<hitmp=r10
 5398 0ce4 42EB0A02 	adc r2,r2,r10
 5399              	
 5400              	# qhasm: carry? lou0 += lou3
 5401              	# asm 1: adds >lou0=int32#4,<lou0=int32#4,<lou3=int32#9
 5402              	# asm 2: adds >lou0=r3,<lou0=r3,<lou3=r8
 5403 0ce8 13EB0803 	adds r3,r3,r8
 5404              	
 5405              	# qhasm: hiu0 += hiu3 + carry
 5406              	# asm 1: adc >hiu0=int32#3,<hiu0=int32#3,<hiu3=int32#10
 5407              	# asm 2: adc >hiu0=r2,<hiu0=r2,<hiu3=r9
 5408 0cec 42EB0902 	adc r2,r2,r9
 5409              	
 5410              	# qhasm: lom14 = lou0
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 96


 5411              	# asm 1: str <lou0=int32#4,>lom14=stack32#65
 5412              	# asm 2: str <lou0=r3,>lom14=[sp,#256]
 5413              	# copy-collector input: str r3,[sp,#256]
 5414              	
 5415              	# qhasm: him14 = hiu0
 5416              	# asm 1: str <hiu0=int32#3,>him14=stack32#66
 5417              	# asm 2: str <hiu0=r2,>him14=[sp,#260]
 5418              	# copy-collector input: str r2,[sp,#260]
 5419              	
 5420              	# qhasm: hitmp lotmp = hiu4 * two13
 5421              	# asm 1: umull >lotmp=int32#4,>hitmp=int32#3,<hiu4=int32#5,<two13=int32#2
 5422              	# asm 2: umull >lotmp=r3,>hitmp=r2,<hiu4=r4,<two13=r1
 5423              	# copy-collector output starts
 5424 0cf0 CDE94032 	strd r3,r2,[sp,#256]
 5425              	# copy-collector output ends
 5426 0cf4 A4FB0132 	umull r3,r2,r4,r1
 5427              	
 5428              	# qhasm: lotmp hitmp += lou4 * two13
 5429              	# asm 1: umlal <hitmp=int32#3,<lotmp=int32#4,<lou4=int32#6,<two13=int32#2
 5430              	# asm 2: umlal <hitmp=r2,<lotmp=r3,<lou4=r5,<two13=r1
 5431 0cf8 E5FB0123 	umlal r2,r3,r5,r1
 5432              	
 5433              	# qhasm: lotmp ^= (lou4 unsigned>> 6)
 5434              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#4,<lou4=int32#6,LSR #6
 5435              	# asm 2: eor >lotmp=r1,<lotmp=r3,<lou4=r5,LSR #6
 5436 0cfc 83EA9511 	eor r1,r3,r5,LSR #6
 5437              	
 5438              	# qhasm: lotmp ^= (hiu4 << 26)
 5439              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#2,<hiu4=int32#5,LSL #26
 5440              	# asm 2: eor >lotmp=r1,<lotmp=r1,<hiu4=r4,LSL #26
 5441 0d00 81EA8461 	eor r1,r1,r4,LSL #26
 5442              	
 5443              	# qhasm: lotmp ^= (hiu4 unsigned>> 29)
 5444              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#2,<hiu4=int32#5,LSR #29
 5445              	# asm 2: eor >lotmp=r1,<lotmp=r1,<hiu4=r4,LSR #29
 5446 0d04 81EA5471 	eor r1,r1,r4,LSR #29
 5447              	
 5448              	# qhasm: lotmp ^= (lou4 << 3)
 5449              	# asm 1: eor >lotmp=int32#2,<lotmp=int32#2,<lou4=int32#6,LSL #3
 5450              	# asm 2: eor >lotmp=r1,<lotmp=r1,<lou4=r5,LSL #3
 5451 0d08 81EAC501 	eor r1,r1,r5,LSL #3
 5452              	
 5453              	# qhasm: hitmp ^= (hiu4 unsigned>> 6)
 5454              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<hiu4=int32#5,LSR #6
 5455              	# asm 2: eor >hitmp=r2,<hitmp=r2,<hiu4=r4,LSR #6
 5456 0d0c 82EA9412 	eor r2,r2,r4,LSR #6
 5457              	
 5458              	# qhasm: hitmp ^= (lou4 unsigned>> 29)
 5459              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<lou4=int32#6,LSR #29
 5460              	# asm 2: eor >hitmp=r2,<hitmp=r2,<lou4=r5,LSR #29
 5461 0d10 82EA5572 	eor r2,r2,r5,LSR #29
 5462              	
 5463              	# qhasm: hitmp ^= (hiu4 << 3)
 5464              	# asm 1: eor >hitmp=int32#3,<hitmp=int32#3,<hiu4=int32#5,LSL #3
 5465              	# asm 2: eor >hitmp=r2,<hitmp=r2,<hiu4=r4,LSL #3
 5466 0d14 82EAC402 	eor r2,r2,r4,LSL #3
 5467              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 97


 5468              	# qhasm: carry? lou1 += lotmp
 5469              	# asm 1: adds >lou1=int32#2,<lou1=int32#7,<lotmp=int32#2
 5470              	# asm 2: adds >lou1=r1,<lou1=r6,<lotmp=r1
 5471 0d18 7118     	adds r1,r6,r1
 5472              	
 5473              	# qhasm: hiu1 += hitmp + carry
 5474              	# asm 1: adc >hiu1=int32#3,<hiu1=int32#8,<hitmp=int32#3
 5475              	# asm 2: adc >hiu1=r2,<hiu1=r7,<hitmp=r2
 5476 0d1a 47EB0202 	adc r2,r7,r2
 5477              	
 5478              	# qhasm: lou0 = lom8
 5479              	# asm 1: ldr >lou0=int32#4,<lom8=stack32#53
 5480              	# asm 2: ldr >lou0=r3,<lom8=[sp,#208]
 5481              	# copy-collector input: ldr r3,[sp,#208]
 5482              	
 5483              	# qhasm: hiu0 = him8
 5484              	# asm 1: ldr >hiu0=int32#5,<him8=stack32#54
 5485              	# asm 2: ldr >hiu0=r4,<him8=[sp,#212]
 5486              	# copy-collector input: ldr r4,[sp,#212]
 5487              	
 5488              	# qhasm: lou2 = lom15
 5489              	# asm 1: ldr >lou2=int32#6,<lom15=stack32#37
 5490              	# asm 2: ldr >lou2=r5,<lom15=[sp,#144]
 5491              	# copy-collector input: ldr r5,[sp,#144]
 5492              	
 5493              	# qhasm: hiu2 = him15
 5494              	# asm 1: ldr >hiu2=int32#7,<him15=stack32#38
 5495              	# asm 2: ldr >hiu2=r6,<him15=[sp,#148]
 5496              	# copy-collector input: ldr r6,[sp,#148]
 5497              	
 5498              	# qhasm: lom8 = lou2
 5499              	# asm 1: str <lou2=int32#6,>lom8=stack32#53
 5500              	# asm 2: str <lou2=r5,>lom8=[sp,#208]
 5501              	# copy-collector input: str r5,[sp,#208]
 5502              	
 5503              	# qhasm: him8 = hiu2
 5504              	# asm 1: str <hiu2=int32#7,>him8=stack32#54
 5505              	# asm 2: str <hiu2=r6,>him8=[sp,#212]
 5506              	# copy-collector input: str r6,[sp,#212]
 5507              	
 5508              	# qhasm: hitmp lotmp = hiu0 * two24
 5509              	# asm 1: umull >lotmp=int32#9,>hitmp=int32#8,<hiu0=int32#5,<two24=int32#1
 5510              	# asm 2: umull >lotmp=r8,>hitmp=r7,<hiu0=r4,<two24=r0
 5511              	# copy-collector output starts
 5512 0d1e 349B     	ldr r3,[sp,#208]
 5513 0d20 359C     	ldr r4,[sp,#212]
 5514 0d22 249D     	ldr r5,[sp,#144]
 5515 0d24 DDF89460 	ldr.w r6,[sp,#148]
 5516 0d28 CDE93456 	strd r5,r6,[sp,#208]
 5517              	# copy-collector output ends
 5518 0d2c A4FB0087 	umull r8,r7,r4,r0
 5519              	
 5520              	# qhasm: lotmp hitmp += lou0 * two24
 5521              	# asm 1: umlal <hitmp=int32#8,<lotmp=int32#9,<lou0=int32#4,<two24=int32#1
 5522              	# asm 2: umlal <hitmp=r7,<lotmp=r8,<lou0=r3,<two24=r0
 5523 0d30 E3FB0078 	umlal r7,r8,r3,r0
 5524              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 98


 5525              	# qhasm: carry? lotmp ^= (lou0 unsigned>> 1)
 5526              	# asm 1: eors >lotmp=int32#1,<lotmp=int32#9,<lou0=int32#4,LSR #1
 5527              	# asm 2: eors >lotmp=r0,<lotmp=r8,<lou0=r3,LSR #1
 5528 0d34 98EA5300 	eors r0,r8,r3,LSR #1
 5529              	
 5530              	# qhasm: hitmp ^= (carry,hiu0 unsigned>> 1)
 5531              	# asm 1: eors >hitmp=int32#8,<hitmp=int32#8,<hiu0=int32#5,RRX
 5532              	# asm 2: eors >hitmp=r7,<hitmp=r7,<hiu0=r4,RRX
 5533 0d38 97EA3407 	eors r7,r7,r4,RRX
 5534              	
 5535              	# qhasm: lotmp ^= (hiu0 << 31)
 5536              	# asm 1: eor >lotmp=int32#1,<lotmp=int32#1,<hiu0=int32#5,LSL #31
 5537              	# asm 2: eor >lotmp=r0,<lotmp=r0,<hiu0=r4,LSL #31
 5538 0d3c 80EAC470 	eor r0,r0,r4,LSL #31
 5539              	
 5540              	# qhasm: lotmp ^= (lou0 unsigned>>7)
 5541              	# asm 1: eor >lotmp=int32#1,<lotmp=int32#1,<lou0=int32#4,LSR #7
 5542              	# asm 2: eor >lotmp=r0,<lotmp=r0,<lou0=r3,LSR #7
 5543 0d40 80EAD310 	eor r0,r0,r3,LSR #7
 5544              	
 5545              	# qhasm: lotmp ^= (hiu0 << 25)
 5546              	# asm 1: eor >lotmp=int32#1,<lotmp=int32#1,<hiu0=int32#5,LSL #25
 5547              	# asm 2: eor >lotmp=r0,<lotmp=r0,<hiu0=r4,LSL #25
 5548 0d44 80EA4460 	eor r0,r0,r4,LSL #25
 5549              	
 5550              	# qhasm: hitmp ^= (hiu0 unsigned>>7)
 5551              	# asm 1: eor >hitmp=int32#8,<hitmp=int32#8,<hiu0=int32#5,LSR #7
 5552              	# asm 2: eor >hitmp=r7,<hitmp=r7,<hiu0=r4,LSR #7
 5553 0d48 87EAD417 	eor r7,r7,r4,LSR #7
 5554              	
 5555              	# qhasm: carry? lou1 += lotmp
 5556              	# asm 1: adds >lou1=int32#1,<lou1=int32#2,<lotmp=int32#1
 5557              	# asm 2: adds >lou1=r0,<lou1=r1,<lotmp=r0
 5558 0d4c 0818     	adds r0,r1,r0
 5559              	
 5560              	# qhasm: hiu1 += hitmp + carry
 5561              	# asm 1: adc >hiu1=int32#2,<hiu1=int32#3,<hitmp=int32#8
 5562              	# asm 2: adc >hiu1=r1,<hiu1=r2,<hitmp=r7
 5563 0d4e 42EB0701 	adc r1,r2,r7
 5564              	
 5565              	# qhasm: carry? lou1 += lou2
 5566              	# asm 1: adds >lou1=int32#1,<lou1=int32#1,<lou2=int32#6
 5567              	# asm 2: adds >lou1=r0,<lou1=r0,<lou2=r5
 5568 0d52 4019     	adds r0,r0,r5
 5569              	
 5570              	# qhasm: hiu1 += hiu2 + carry
 5571              	# asm 1: adc >hiu1=int32#2,<hiu1=int32#2,<hiu2=int32#7
 5572              	# asm 2: adc >hiu1=r1,<hiu1=r1,<hiu2=r6
 5573 0d54 41EB0601 	adc r1,r1,r6
 5574              	
 5575              	# qhasm: lom15 = lou1
 5576              	# asm 1: str <lou1=int32#1,>lom15=stack32#67
 5577              	# asm 2: str <lou1=r0,>lom15=[sp,#264]
 5578              	# copy-collector input: str r0,[sp,#264]
 5579              	
 5580              	# qhasm: him15 = hiu1
 5581              	# asm 1: str <hiu1=int32#2,>him15=stack32#68
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 99


 5582              	# asm 2: str <hiu1=r1,>him15=[sp,#268]
 5583              	# copy-collector input: str r1,[sp,#268]
 5584              	
 5585              	# qhasm: lod8 = lou0
 5586              	# asm 1: str <lou0=int32#4,>lod8=stack32#37
 5587              	# asm 2: str <lou0=r3,>lod8=[sp,#144]
 5588              	# copy-collector input: str r3,[sp,#144]
 5589              	
 5590              	# qhasm: hid8 = hiu0
 5591              	# asm 1: str <hiu0=int32#5,>hid8=stack32#38
 5592              	# asm 2: str <hiu0=r4,>hid8=[sp,#148]
 5593              	# copy-collector input: str r4,[sp,#148]
 5594              	
 5595              	# qhasm: goto innerloop
 5596              	# copy-collector output starts
 5597 0d58 CDE94201 	strd r0,r1,[sp,#264]
 5598 0d5c CDE92434 	strd r3,r4,[sp,#144]
 5599              	# copy-collector output ends
 5600 0d60 FFF72ABA 	b ._innerloop
 5601              	
 5602              	# qhasm: nearend:
 5603              	._nearend:
 5604              	
 5605              	# qhasm: lou0 = lom8
 5606              	# asm 1: ldr >lou0=int32#1,<lom8=stack32#53
 5607              	# asm 2: ldr >lou0=r0,<lom8=[sp,#208]
 5608              	# copy-collector input: ldr r0,[sp,#208]
 5609              	
 5610              	# qhasm: hiu0 = him8
 5611              	# asm 1: ldr >hiu0=int32#2,<him8=stack32#54
 5612              	# asm 2: ldr >hiu0=r1,<him8=[sp,#212]
 5613              	# copy-collector input: ldr r1,[sp,#212]
 5614              	
 5615              	# qhasm: lou1 = lom9
 5616              	# asm 1: ldr >lou1=int32#3,<lom9=stack32#55
 5617              	# asm 2: ldr >lou1=r2,<lom9=[sp,#216]
 5618              	# copy-collector input: ldr r2,[sp,#216]
 5619              	
 5620              	# qhasm: hiu1 = him9
 5621              	# asm 1: ldr >hiu1=int32#4,<him9=stack32#56
 5622              	# asm 2: ldr >hiu1=r3,<him9=[sp,#220]
 5623              	# copy-collector input: ldr r3,[sp,#220]
 5624              	
 5625              	# qhasm: lou2 = lom10
 5626              	# asm 1: ldr >lou2=int32#5,<lom10=stack32#57
 5627              	# asm 2: ldr >lou2=r4,<lom10=[sp,#224]
 5628              	# copy-collector input: ldr r4,[sp,#224]
 5629              	
 5630              	# qhasm: hiu2 = him10
 5631              	# asm 1: ldr >hiu2=int32#6,<him10=stack32#58
 5632              	# asm 2: ldr >hiu2=r5,<him10=[sp,#228]
 5633              	# copy-collector input: ldr r5,[sp,#228]
 5634              	
 5635              	# qhasm: lou3 = lom11
 5636              	# asm 1: ldr >lou3=int32#7,<lom11=stack32#59
 5637              	# asm 2: ldr >lou3=r6,<lom11=[sp,#232]
 5638              	# copy-collector input: ldr r6,[sp,#232]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 100


 5639              	
 5640              	# qhasm: hiu3 = him11
 5641              	# asm 1: ldr >hiu3=int32#8,<him11=stack32#60
 5642              	# asm 2: ldr >hiu3=r7,<him11=[sp,#236]
 5643              	# copy-collector input: ldr r7,[sp,#236]
 5644              	
 5645              	# qhasm: lod8 = lou0
 5646              	# asm 1: str <lou0=int32#1,>lod8=stack32#37
 5647              	# asm 2: str <lou0=r0,>lod8=[sp,#144]
 5648              	# copy-collector input: str r0,[sp,#144]
 5649              	
 5650              	# qhasm: hid8 = hiu0
 5651              	# asm 1: str <hiu0=int32#2,>hid8=stack32#38
 5652              	# asm 2: str <hiu0=r1,>hid8=[sp,#148]
 5653              	# copy-collector input: str r1,[sp,#148]
 5654              	
 5655              	# qhasm: lod9 = lou1
 5656              	# asm 1: str <lou1=int32#3,>lod9=stack32#39
 5657              	# asm 2: str <lou1=r2,>lod9=[sp,#152]
 5658              	# copy-collector input: str r2,[sp,#152]
 5659              	
 5660              	# qhasm: hid9 = hiu1
 5661              	# asm 1: str <hiu1=int32#4,>hid9=stack32#40
 5662              	# asm 2: str <hiu1=r3,>hid9=[sp,#156]
 5663              	# copy-collector input: str r3,[sp,#156]
 5664              	
 5665              	# qhasm: lod10 = lou2
 5666              	# asm 1: str <lou2=int32#5,>lod10=stack32#41
 5667              	# asm 2: str <lou2=r4,>lod10=[sp,#160]
 5668              	# copy-collector input: str r4,[sp,#160]
 5669              	
 5670              	# qhasm: hid10 = hiu2
 5671              	# asm 1: str <hiu2=int32#6,>hid10=stack32#42
 5672              	# asm 2: str <hiu2=r5,>hid10=[sp,#164]
 5673              	# copy-collector input: str r5,[sp,#164]
 5674              	
 5675              	# qhasm: lod11 = lou3
 5676              	# asm 1: str <lou3=int32#7,>lod11=stack32#43
 5677              	# asm 2: str <lou3=r6,>lod11=[sp,#168]
 5678              	# copy-collector input: str r6,[sp,#168]
 5679              	
 5680              	# qhasm: hid11 = hiu3
 5681              	# asm 1: str <hiu3=int32#8,>hid11=stack32#44
 5682              	# asm 2: str <hiu3=r7,>hid11=[sp,#172]
 5683              	# copy-collector input: str r7,[sp,#172]
 5684              	
 5685              	# qhasm: lou0 = lom12
 5686              	# asm 1: ldr >lou0=int32#1,<lom12=stack32#61
 5687              	# asm 2: ldr >lou0=r0,<lom12=[sp,#240]
 5688              	# copy-collector input: ldr r0,[sp,#240]
 5689              	
 5690              	# qhasm: hiu0 = him12
 5691              	# asm 1: ldr >hiu0=int32#2,<him12=stack32#62
 5692              	# asm 2: ldr >hiu0=r1,<him12=[sp,#244]
 5693              	# copy-collector input: ldr r1,[sp,#244]
 5694              	
 5695              	# qhasm: lou1 = lom13
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 101


 5696              	# asm 1: ldr >lou1=int32#3,<lom13=stack32#63
 5697              	# asm 2: ldr >lou1=r2,<lom13=[sp,#248]
 5698              	# copy-collector input: ldr r2,[sp,#248]
 5699              	
 5700              	# qhasm: hiu1 = him13
 5701              	# asm 1: ldr >hiu1=int32#4,<him13=stack32#64
 5702              	# asm 2: ldr >hiu1=r3,<him13=[sp,#252]
 5703              	# copy-collector input: ldr r3,[sp,#252]
 5704              	
 5705              	# qhasm: lou2 = lom14
 5706              	# asm 1: ldr >lou2=int32#5,<lom14=stack32#65
 5707              	# asm 2: ldr >lou2=r4,<lom14=[sp,#256]
 5708              	# copy-collector input: ldr r4,[sp,#256]
 5709              	
 5710              	# qhasm: hiu2 = him14
 5711              	# asm 1: ldr >hiu2=int32#6,<him14=stack32#66
 5712              	# asm 2: ldr >hiu2=r5,<him14=[sp,#260]
 5713              	# copy-collector input: ldr r5,[sp,#260]
 5714              	
 5715              	# qhasm: lou3 = lom15
 5716              	# asm 1: ldr >lou3=int32#7,<lom15=stack32#67
 5717              	# asm 2: ldr >lou3=r6,<lom15=[sp,#264]
 5718              	# copy-collector input: ldr r6,[sp,#264]
 5719              	
 5720              	# qhasm: hiu3 = him15
 5721              	# asm 1: ldr >hiu3=int32#8,<him15=stack32#68
 5722              	# asm 2: ldr >hiu3=r7,<him15=[sp,#268]
 5723              	# copy-collector input: ldr r7,[sp,#268]
 5724              	
 5725              	# qhasm: lod12 = lou0
 5726              	# asm 1: str <lou0=int32#1,>lod12=stack32#45
 5727              	# asm 2: str <lou0=r0,>lod12=[sp,#176]
 5728              	# copy-collector input: str r0,[sp,#176]
 5729              	
 5730              	# qhasm: hid12 = hiu0
 5731              	# asm 1: str <hiu0=int32#2,>hid12=stack32#46
 5732              	# asm 2: str <hiu0=r1,>hid12=[sp,#180]
 5733              	# copy-collector input: str r1,[sp,#180]
 5734              	
 5735              	# qhasm: lod13 = lou1
 5736              	# asm 1: str <lou1=int32#3,>lod13=stack32#47
 5737              	# asm 2: str <lou1=r2,>lod13=[sp,#184]
 5738              	# copy-collector input: str r2,[sp,#184]
 5739              	
 5740              	# qhasm: hid13 = hiu1
 5741              	# asm 1: str <hiu1=int32#4,>hid13=stack32#48
 5742              	# asm 2: str <hiu1=r3,>hid13=[sp,#188]
 5743              	# copy-collector input: str r3,[sp,#188]
 5744              	
 5745              	# qhasm: lod14 = lou2
 5746              	# asm 1: str <lou2=int32#5,>lod14=stack32#49
 5747              	# asm 2: str <lou2=r4,>lod14=[sp,#192]
 5748              	# copy-collector input: str r4,[sp,#192]
 5749              	
 5750              	# qhasm: hid14 = hiu2
 5751              	# asm 1: str <hiu2=int32#6,>hid14=stack32#50
 5752              	# asm 2: str <hiu2=r5,>hid14=[sp,#196]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 102


 5753              	# copy-collector input: str r5,[sp,#196]
 5754              	
 5755              	# qhasm: lod15 = lou3
 5756              	# asm 1: str <lou3=int32#7,>lod15=stack32#51
 5757              	# asm 2: str <lou3=r6,>lod15=[sp,#200]
 5758              	# copy-collector input: str r6,[sp,#200]
 5759              	
 5760              	# qhasm: hid15 = hiu3
 5761              	# asm 1: str <hiu3=int32#8,>hid15=stack32#52
 5762              	# asm 2: str <hiu3=r7,>hid15=[sp,#204]
 5763              	# copy-collector input: str r7,[sp,#204]
 5764              	
 5765              	# qhasm: goto innerloop
 5766              	# copy-collector output starts
 5767 0d64 3498     	ldr r0,[sp,#208]
 5768 0d66 3599     	ldr r1,[sp,#212]
 5769 0d68 369A     	ldr r2,[sp,#216]
 5770 0d6a 379B     	ldr r3,[sp,#220]
 5771 0d6c 389C     	ldr r4,[sp,#224]
 5772 0d6e 399D     	ldr r5,[sp,#228]
 5773 0d70 3A9E     	ldr r6,[sp,#232]
 5774 0d72 3B9F     	ldr r7,[sp,#236]
 5775 0d74 CDE92401 	strd r0,r1,[sp,#144]
 5776 0d78 CDE92623 	strd r2,r3,[sp,#152]
 5777 0d7c CDE92845 	strd r4,r5,[sp,#160]
 5778 0d80 CDE92A67 	strd r6,r7,[sp,#168]
 5779 0d84 3C98     	ldr r0,[sp,#240]
 5780 0d86 3D99     	ldr r1,[sp,#244]
 5781 0d88 3E9A     	ldr r2,[sp,#248]
 5782 0d8a 3F9B     	ldr r3,[sp,#252]
 5783 0d8c 409C     	ldr r4,[sp,#256]
 5784 0d8e 419D     	ldr r5,[sp,#260]
 5785 0d90 429E     	ldr r6,[sp,#264]
 5786 0d92 439F     	ldr r7,[sp,#268]
 5787 0d94 CDE92C01 	strd r0,r1,[sp,#176]
 5788 0d98 CDE92E23 	strd r2,r3,[sp,#184]
 5789 0d9c CDE93045 	strd r4,r5,[sp,#192]
 5790 0da0 CDE93267 	strd r6,r7,[sp,#200]
 5791              	# copy-collector output ends
 5792 0da4 FFF708BA 	b ._innerloop
 5793              	
 5794              	# qhasm: endinnerloop:
 5795              	._endinnerloop:
 5796              	
 5797              	# qhasm: input_0 = o3
 5798              	# asm 1: ldr >input_0=int32#1,<o3=stack32#4
 5799              	# asm 2: ldr >input_0=r0,<o3=[sp,#12]
 5800              	# copy-collector input: ldr r0,[sp,#12]
 5801              	
 5802              	# qhasm: input_0 -= 640
 5803              	# asm 1: sub >input_0=int32#1,<input_0=int32#1,#640
 5804              	# asm 2: sub >input_0=r0,<input_0=r0,#640
 5805              	# copy-collector output starts
 5806 0da8 0398     	ldr r0,[sp,#12]
 5807              	# copy-collector output ends
 5808 0daa A0F52070 	sub r0,r0,#640
 5809              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 103


 5810              	# qhasm: o3 = input_0
 5811              	# asm 1: str <input_0=int32#1,>o3=stack32#4
 5812              	# asm 2: str <input_0=r0,>o3=[sp,#12]
 5813              	# copy-collector input: str r0,[sp,#12]
 5814              	
 5815              	# qhasm: lou0 = lod0
 5816              	# asm 1: ldr >lou0=int32#1,<lod0=stack32#13
 5817              	# asm 2: ldr >lou0=r0,<lod0=[sp,#48]
 5818              	# copy-collector input: ldr r0,[sp,#48]
 5819              	
 5820              	# qhasm: hiu0 = hid0
 5821              	# asm 1: ldr >hiu0=int32#2,<hid0=stack32#14
 5822              	# asm 2: ldr >hiu0=r1,<hid0=[sp,#52]
 5823              	# copy-collector input: ldr r1,[sp,#52]
 5824              	
 5825              	# qhasm: lou1 = lod1
 5826              	# asm 1: ldr >lou1=int32#3,<lod1=stack32#15
 5827              	# asm 2: ldr >lou1=r2,<lod1=[sp,#56]
 5828              	# copy-collector input: ldr r2,[sp,#56]
 5829              	
 5830              	# qhasm: hiu1 = hid1
 5831              	# asm 1: ldr >hiu1=int32#4,<hid1=stack32#16
 5832              	# asm 2: ldr >hiu1=r3,<hid1=[sp,#60]
 5833              	# copy-collector input: ldr r3,[sp,#60]
 5834              	
 5835              	# qhasm: lou2 = lod2
 5836              	# asm 1: ldr >lou2=int32#5,<lod2=stack32#17
 5837              	# asm 2: ldr >lou2=r4,<lod2=[sp,#64]
 5838              	# copy-collector input: ldr r4,[sp,#64]
 5839              	
 5840              	# qhasm: hiu2 = hid2
 5841              	# asm 1: ldr >hiu2=int32#6,<hid2=stack32#18
 5842              	# asm 2: ldr >hiu2=r5,<hid2=[sp,#68]
 5843              	# copy-collector input: ldr r5,[sp,#68]
 5844              	
 5845              	# qhasm: lou3 = lod3
 5846              	# asm 1: ldr >lou3=int32#7,<lod3=stack32#19
 5847              	# asm 2: ldr >lou3=r6,<lod3=[sp,#72]
 5848              	# copy-collector input: ldr r6,[sp,#72]
 5849              	
 5850              	# qhasm: hiu3 = hid3
 5851              	# asm 1: ldr >hiu3=int32#8,<hid3=stack32#20
 5852              	# asm 2: ldr >hiu3=r7,<hid3=[sp,#76]
 5853              	# copy-collector input: ldr r7,[sp,#76]
 5854              	
 5855              	# qhasm: lotmp = lom0
 5856              	# asm 1: ldr >lotmp=int32#9,<lom0=stack32#5
 5857              	# asm 2: ldr >lotmp=r8,<lom0=[sp,#16]
 5858              	# copy-collector input: ldr r8,[sp,#16]
 5859              	
 5860              	# qhasm: hitmp = him0
 5861              	# asm 1: ldr >hitmp=int32#10,<him0=stack32#6
 5862              	# asm 2: ldr >hitmp=r9,<him0=[sp,#20]
 5863              	# copy-collector input: ldr r9,[sp,#20]
 5864              	
 5865              	# qhasm: carry? lou0 += lotmp
 5866              	# asm 1: adds >lou0=int32#1,<lou0=int32#1,<lotmp=int32#9
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 104


 5867              	# asm 2: adds >lou0=r0,<lou0=r0,<lotmp=r8
 5868              	# copy-collector output starts
 5869 0dae 0390     	str r0,[sp,#12]
 5870 0db0 0C98     	ldr r0,[sp,#48]
 5871 0db2 0D99     	ldr r1,[sp,#52]
 5872 0db4 0E9A     	ldr r2,[sp,#56]
 5873 0db6 0F9B     	ldr r3,[sp,#60]
 5874 0db8 109C     	ldr r4,[sp,#64]
 5875 0dba 119D     	ldr r5,[sp,#68]
 5876 0dbc 129E     	ldr r6,[sp,#72]
 5877 0dbe 139F     	ldr r7,[sp,#76]
 5878 0dc0 DDF81080 	ldr r8,[sp,#16]
 5879 0dc4 DDF81490 	ldr r9,[sp,#20]
 5880              	# copy-collector output ends
 5881 0dc8 10EB0800 	adds r0,r0,r8
 5882              	
 5883              	# qhasm: hiu0 += hitmp + carry
 5884              	# asm 1: adc >hiu0=int32#2,<hiu0=int32#2,<hitmp=int32#10
 5885              	# asm 2: adc >hiu0=r1,<hiu0=r1,<hitmp=r9
 5886 0dcc 41EB0901 	adc r1,r1,r9
 5887              	
 5888              	# qhasm: lotmp = lom1
 5889              	# asm 1: ldr >lotmp=int32#9,<lom1=stack32#7
 5890              	# asm 2: ldr >lotmp=r8,<lom1=[sp,#24]
 5891              	# copy-collector input: ldr r8,[sp,#24]
 5892              	
 5893              	# qhasm: hitmp = him1
 5894              	# asm 1: ldr >hitmp=int32#10,<him1=stack32#8
 5895              	# asm 2: ldr >hitmp=r9,<him1=[sp,#28]
 5896              	# copy-collector input: ldr r9,[sp,#28]
 5897              	
 5898              	# qhasm: carry? lou1 += lotmp
 5899              	# asm 1: adds >lou1=int32#3,<lou1=int32#3,<lotmp=int32#9
 5900              	# asm 2: adds >lou1=r2,<lou1=r2,<lotmp=r8
 5901              	# copy-collector output starts
 5902 0dd0 DDE90689 	ldrd r8,r9,[sp,#24]
 5903              	# copy-collector output ends
 5904 0dd4 12EB0802 	adds r2,r2,r8
 5905              	
 5906              	# qhasm: hiu1 += hitmp + carry
 5907              	# asm 1: adc >hiu1=int32#4,<hiu1=int32#4,<hitmp=int32#10
 5908              	# asm 2: adc >hiu1=r3,<hiu1=r3,<hitmp=r9
 5909 0dd8 43EB0903 	adc r3,r3,r9
 5910              	
 5911              	# qhasm: lotmp = lom2
 5912              	# asm 1: ldr >lotmp=int32#9,<lom2=stack32#9
 5913              	# asm 2: ldr >lotmp=r8,<lom2=[sp,#32]
 5914              	# copy-collector input: ldr r8,[sp,#32]
 5915              	
 5916              	# qhasm: hitmp = him2
 5917              	# asm 1: ldr >hitmp=int32#10,<him2=stack32#10
 5918              	# asm 2: ldr >hitmp=r9,<him2=[sp,#36]
 5919              	# copy-collector input: ldr r9,[sp,#36]
 5920              	
 5921              	# qhasm: carry? lou2 += lotmp
 5922              	# asm 1: adds >lou2=int32#5,<lou2=int32#5,<lotmp=int32#9
 5923              	# asm 2: adds >lou2=r4,<lou2=r4,<lotmp=r8
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 105


 5924              	# copy-collector output starts
 5925 0ddc DDE90889 	ldrd r8,r9,[sp,#32]
 5926              	# copy-collector output ends
 5927 0de0 14EB0804 	adds r4,r4,r8
 5928              	
 5929              	# qhasm: hiu2 += hitmp + carry
 5930              	# asm 1: adc >hiu2=int32#6,<hiu2=int32#6,<hitmp=int32#10
 5931              	# asm 2: adc >hiu2=r5,<hiu2=r5,<hitmp=r9
 5932 0de4 45EB0905 	adc r5,r5,r9
 5933              	
 5934              	# qhasm: lotmp = lom3
 5935              	# asm 1: ldr >lotmp=int32#9,<lom3=stack32#11
 5936              	# asm 2: ldr >lotmp=r8,<lom3=[sp,#40]
 5937              	# copy-collector input: ldr r8,[sp,#40]
 5938              	
 5939              	# qhasm: hitmp = him3
 5940              	# asm 1: ldr >hitmp=int32#10,<him3=stack32#12
 5941              	# asm 2: ldr >hitmp=r9,<him3=[sp,#44]
 5942              	# copy-collector input: ldr r9,[sp,#44]
 5943              	
 5944              	# qhasm: carry? lou3 += lotmp
 5945              	# asm 1: adds >lou3=int32#7,<lou3=int32#7,<lotmp=int32#9
 5946              	# asm 2: adds >lou3=r6,<lou3=r6,<lotmp=r8
 5947              	# copy-collector output starts
 5948 0de8 DDE90A89 	ldrd r8,r9,[sp,#40]
 5949              	# copy-collector output ends
 5950 0dec 16EB0806 	adds r6,r6,r8
 5951              	
 5952              	# qhasm: hiu3 += hitmp + carry
 5953              	# asm 1: adc >hiu3=int32#8,<hiu3=int32#8,<hitmp=int32#10
 5954              	# asm 2: adc >hiu3=r7,<hiu3=r7,<hitmp=r9
 5955 0df0 47EB0907 	adc r7,r7,r9
 5956              	
 5957              	# qhasm: lom0 = lou0
 5958              	# asm 1: str <lou0=int32#1,>lom0=stack32#5
 5959              	# asm 2: str <lou0=r0,>lom0=[sp,#16]
 5960              	# copy-collector input: str r0,[sp,#16]
 5961              	
 5962              	# qhasm: him0 = hiu0
 5963              	# asm 1: str <hiu0=int32#2,>him0=stack32#6
 5964              	# asm 2: str <hiu0=r1,>him0=[sp,#20]
 5965              	# copy-collector input: str r1,[sp,#20]
 5966              	
 5967              	# qhasm: lom1 = lou1
 5968              	# asm 1: str <lou1=int32#3,>lom1=stack32#7
 5969              	# asm 2: str <lou1=r2,>lom1=[sp,#24]
 5970              	# copy-collector input: str r2,[sp,#24]
 5971              	
 5972              	# qhasm: him1 = hiu1
 5973              	# asm 1: str <hiu1=int32#4,>him1=stack32#8
 5974              	# asm 2: str <hiu1=r3,>him1=[sp,#28]
 5975              	# copy-collector input: str r3,[sp,#28]
 5976              	
 5977              	# qhasm: lom2 = lou2
 5978              	# asm 1: str <lou2=int32#5,>lom2=stack32#9
 5979              	# asm 2: str <lou2=r4,>lom2=[sp,#32]
 5980              	# copy-collector input: str r4,[sp,#32]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 106


 5981              	
 5982              	# qhasm: him2 = hiu2
 5983              	# asm 1: str <hiu2=int32#6,>him2=stack32#10
 5984              	# asm 2: str <hiu2=r5,>him2=[sp,#36]
 5985              	# copy-collector input: str r5,[sp,#36]
 5986              	
 5987              	# qhasm: lom3 = lou3
 5988              	# asm 1: str <lou3=int32#7,>lom3=stack32#11
 5989              	# asm 2: str <lou3=r6,>lom3=[sp,#40]
 5990              	# copy-collector input: str r6,[sp,#40]
 5991              	
 5992              	# qhasm: him3 = hiu3
 5993              	# asm 1: str <hiu3=int32#8,>him3=stack32#12
 5994              	# asm 2: str <hiu3=r7,>him3=[sp,#44]
 5995              	# copy-collector input: str r7,[sp,#44]
 5996              	
 5997              	# qhasm: lod0 = lou0
 5998              	# asm 1: str <lou0=int32#1,>lod0=stack32#13
 5999              	# asm 2: str <lou0=r0,>lod0=[sp,#48]
 6000              	# copy-collector input: str r0,[sp,#48]
 6001              	
 6002              	# qhasm: hid0 = hiu0
 6003              	# asm 1: str <hiu0=int32#2,>hid0=stack32#14
 6004              	# asm 2: str <hiu0=r1,>hid0=[sp,#52]
 6005              	# copy-collector input: str r1,[sp,#52]
 6006              	
 6007              	# qhasm: lod1 = lou1
 6008              	# asm 1: str <lou1=int32#3,>lod1=stack32#15
 6009              	# asm 2: str <lou1=r2,>lod1=[sp,#56]
 6010              	# copy-collector input: str r2,[sp,#56]
 6011              	
 6012              	# qhasm: hid1 = hiu1
 6013              	# asm 1: str <hiu1=int32#4,>hid1=stack32#16
 6014              	# asm 2: str <hiu1=r3,>hid1=[sp,#60]
 6015              	# copy-collector input: str r3,[sp,#60]
 6016              	
 6017              	# qhasm: lod2 = lou2
 6018              	# asm 1: str <lou2=int32#5,>lod2=stack32#17
 6019              	# asm 2: str <lou2=r4,>lod2=[sp,#64]
 6020              	# copy-collector input: str r4,[sp,#64]
 6021              	
 6022              	# qhasm: hid2 = hiu2
 6023              	# asm 1: str <hiu2=int32#6,>hid2=stack32#18
 6024              	# asm 2: str <hiu2=r5,>hid2=[sp,#68]
 6025              	# copy-collector input: str r5,[sp,#68]
 6026              	
 6027              	# qhasm: lod3 = lou3
 6028              	# asm 1: str <lou3=int32#7,>lod3=stack32#19
 6029              	# asm 2: str <lou3=r6,>lod3=[sp,#72]
 6030              	# copy-collector input: str r6,[sp,#72]
 6031              	
 6032              	# qhasm: hid3 = hiu3
 6033              	# asm 1: str <hiu3=int32#8,>hid3=stack32#20
 6034              	# asm 2: str <hiu3=r7,>hid3=[sp,#76]
 6035              	# copy-collector input: str r7,[sp,#76]
 6036              	
 6037              	# qhasm: lou0 = lod4
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 107


 6038              	# asm 1: ldr >lou0=int32#1,<lod4=stack32#29
 6039              	# asm 2: ldr >lou0=r0,<lod4=[sp,#112]
 6040              	# copy-collector input: ldr r0,[sp,#112]
 6041              	
 6042              	# qhasm: hiu0 = hid4
 6043              	# asm 1: ldr >hiu0=int32#2,<hid4=stack32#30
 6044              	# asm 2: ldr >hiu0=r1,<hid4=[sp,#116]
 6045              	# copy-collector input: ldr r1,[sp,#116]
 6046              	
 6047              	# qhasm: lou1 = lod5
 6048              	# asm 1: ldr >lou1=int32#3,<lod5=stack32#31
 6049              	# asm 2: ldr >lou1=r2,<lod5=[sp,#120]
 6050              	# copy-collector input: ldr r2,[sp,#120]
 6051              	
 6052              	# qhasm: hiu1 = hid5
 6053              	# asm 1: ldr >hiu1=int32#4,<hid5=stack32#32
 6054              	# asm 2: ldr >hiu1=r3,<hid5=[sp,#124]
 6055              	# copy-collector input: ldr r3,[sp,#124]
 6056              	
 6057              	# qhasm: lou2 = lod6
 6058              	# asm 1: ldr >lou2=int32#5,<lod6=stack32#33
 6059              	# asm 2: ldr >lou2=r4,<lod6=[sp,#128]
 6060              	# copy-collector input: ldr r4,[sp,#128]
 6061              	
 6062              	# qhasm: hiu2 = hid6
 6063              	# asm 1: ldr >hiu2=int32#6,<hid6=stack32#34
 6064              	# asm 2: ldr >hiu2=r5,<hid6=[sp,#132]
 6065              	# copy-collector input: ldr r5,[sp,#132]
 6066              	
 6067              	# qhasm: lou3 = lod7
 6068              	# asm 1: ldr >lou3=int32#7,<lod7=stack32#35
 6069              	# asm 2: ldr >lou3=r6,<lod7=[sp,#136]
 6070              	# copy-collector input: ldr r6,[sp,#136]
 6071              	
 6072              	# qhasm: hiu3 = hid7
 6073              	# asm 1: ldr >hiu3=int32#8,<hid7=stack32#36
 6074              	# asm 2: ldr >hiu3=r7,<hid7=[sp,#140]
 6075              	# copy-collector input: ldr r7,[sp,#140]
 6076              	
 6077              	# qhasm: lotmp = lom4
 6078              	# asm 1: ldr >lotmp=int32#9,<lom4=stack32#21
 6079              	# asm 2: ldr >lotmp=r8,<lom4=[sp,#80]
 6080              	# copy-collector input: ldr r8,[sp,#80]
 6081              	
 6082              	# qhasm: hitmp = him4
 6083              	# asm 1: ldr >hitmp=int32#10,<him4=stack32#22
 6084              	# asm 2: ldr >hitmp=r9,<him4=[sp,#84]
 6085              	# copy-collector input: ldr r9,[sp,#84]
 6086              	
 6087              	# qhasm: carry? lou0 += lotmp
 6088              	# asm 1: adds >lou0=int32#1,<lou0=int32#1,<lotmp=int32#9
 6089              	# asm 2: adds >lou0=r0,<lou0=r0,<lotmp=r8
 6090              	# copy-collector output starts
 6091 0df4 CDE90401 	strd r0,r1,[sp,#16]
 6092 0df8 CDE90623 	strd r2,r3,[sp,#24]
 6093 0dfc CDE90845 	strd r4,r5,[sp,#32]
 6094 0e00 CDE90A67 	strd r6,r7,[sp,#40]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 108


 6095 0e04 CDE90C01 	strd r0,r1,[sp,#48]
 6096 0e08 CDE90E23 	strd r2,r3,[sp,#56]
 6097 0e0c CDE91045 	strd r4,r5,[sp,#64]
 6098 0e10 CDE91267 	strd r6,r7,[sp,#72]
 6099 0e14 1C98     	ldr r0,[sp,#112]
 6100 0e16 1D99     	ldr r1,[sp,#116]
 6101 0e18 1E9A     	ldr r2,[sp,#120]
 6102 0e1a 1F9B     	ldr r3,[sp,#124]
 6103 0e1c 209C     	ldr r4,[sp,#128]
 6104 0e1e 219D     	ldr r5,[sp,#132]
 6105 0e20 229E     	ldr r6,[sp,#136]
 6106 0e22 239F     	ldr r7,[sp,#140]
 6107 0e24 DDF85080 	ldr r8,[sp,#80]
 6108 0e28 DDF85490 	ldr r9,[sp,#84]
 6109              	# copy-collector output ends
 6110 0e2c 10EB0800 	adds r0,r0,r8
 6111              	
 6112              	# qhasm: hiu0 += hitmp + carry
 6113              	# asm 1: adc >hiu0=int32#2,<hiu0=int32#2,<hitmp=int32#10
 6114              	# asm 2: adc >hiu0=r1,<hiu0=r1,<hitmp=r9
 6115 0e30 41EB0901 	adc r1,r1,r9
 6116              	
 6117              	# qhasm: lotmp = lom5
 6118              	# asm 1: ldr >lotmp=int32#9,<lom5=stack32#23
 6119              	# asm 2: ldr >lotmp=r8,<lom5=[sp,#88]
 6120              	# copy-collector input: ldr r8,[sp,#88]
 6121              	
 6122              	# qhasm: hitmp = him5
 6123              	# asm 1: ldr >hitmp=int32#10,<him5=stack32#24
 6124              	# asm 2: ldr >hitmp=r9,<him5=[sp,#92]
 6125              	# copy-collector input: ldr r9,[sp,#92]
 6126              	
 6127              	# qhasm: carry? lou1 += lotmp
 6128              	# asm 1: adds >lou1=int32#3,<lou1=int32#3,<lotmp=int32#9
 6129              	# asm 2: adds >lou1=r2,<lou1=r2,<lotmp=r8
 6130              	# copy-collector output starts
 6131 0e34 DDE91689 	ldrd r8,r9,[sp,#88]
 6132              	# copy-collector output ends
 6133 0e38 12EB0802 	adds r2,r2,r8
 6134              	
 6135              	# qhasm: hiu1 += hitmp + carry
 6136              	# asm 1: adc >hiu1=int32#4,<hiu1=int32#4,<hitmp=int32#10
 6137              	# asm 2: adc >hiu1=r3,<hiu1=r3,<hitmp=r9
 6138 0e3c 43EB0903 	adc r3,r3,r9
 6139              	
 6140              	# qhasm: lotmp = lom6
 6141              	# asm 1: ldr >lotmp=int32#9,<lom6=stack32#25
 6142              	# asm 2: ldr >lotmp=r8,<lom6=[sp,#96]
 6143              	# copy-collector input: ldr r8,[sp,#96]
 6144              	
 6145              	# qhasm: hitmp = him6
 6146              	# asm 1: ldr >hitmp=int32#10,<him6=stack32#26
 6147              	# asm 2: ldr >hitmp=r9,<him6=[sp,#100]
 6148              	# copy-collector input: ldr r9,[sp,#100]
 6149              	
 6150              	# qhasm: carry? lou2 += lotmp
 6151              	# asm 1: adds >lou2=int32#5,<lou2=int32#5,<lotmp=int32#9
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 109


 6152              	# asm 2: adds >lou2=r4,<lou2=r4,<lotmp=r8
 6153              	# copy-collector output starts
 6154 0e40 DDE91889 	ldrd r8,r9,[sp,#96]
 6155              	# copy-collector output ends
 6156 0e44 14EB0804 	adds r4,r4,r8
 6157              	
 6158              	# qhasm: hiu2 += hitmp + carry
 6159              	# asm 1: adc >hiu2=int32#6,<hiu2=int32#6,<hitmp=int32#10
 6160              	# asm 2: adc >hiu2=r5,<hiu2=r5,<hitmp=r9
 6161 0e48 45EB0905 	adc r5,r5,r9
 6162              	
 6163              	# qhasm: lotmp = lom7
 6164              	# asm 1: ldr >lotmp=int32#9,<lom7=stack32#27
 6165              	# asm 2: ldr >lotmp=r8,<lom7=[sp,#104]
 6166              	# copy-collector input: ldr r8,[sp,#104]
 6167              	
 6168              	# qhasm: hitmp = him7
 6169              	# asm 1: ldr >hitmp=int32#10,<him7=stack32#28
 6170              	# asm 2: ldr >hitmp=r9,<him7=[sp,#108]
 6171              	# copy-collector input: ldr r9,[sp,#108]
 6172              	
 6173              	# qhasm: carry? lou3 += lotmp
 6174              	# asm 1: adds >lou3=int32#7,<lou3=int32#7,<lotmp=int32#9
 6175              	# asm 2: adds >lou3=r6,<lou3=r6,<lotmp=r8
 6176              	# copy-collector output starts
 6177 0e4c DDE91A89 	ldrd r8,r9,[sp,#104]
 6178              	# copy-collector output ends
 6179 0e50 16EB0806 	adds r6,r6,r8
 6180              	
 6181              	# qhasm: hiu3 += hitmp + carry
 6182              	# asm 1: adc >hiu3=int32#8,<hiu3=int32#8,<hitmp=int32#10
 6183              	# asm 2: adc >hiu3=r7,<hiu3=r7,<hitmp=r9
 6184 0e54 47EB0907 	adc r7,r7,r9
 6185              	
 6186              	# qhasm: lom4 = lou0
 6187              	# asm 1: str <lou0=int32#1,>lom4=stack32#21
 6188              	# asm 2: str <lou0=r0,>lom4=[sp,#80]
 6189              	# copy-collector input: str r0,[sp,#80]
 6190              	
 6191              	# qhasm: him4 = hiu0
 6192              	# asm 1: str <hiu0=int32#2,>him4=stack32#22
 6193              	# asm 2: str <hiu0=r1,>him4=[sp,#84]
 6194              	# copy-collector input: str r1,[sp,#84]
 6195              	
 6196              	# qhasm: lom5 = lou1
 6197              	# asm 1: str <lou1=int32#3,>lom5=stack32#23
 6198              	# asm 2: str <lou1=r2,>lom5=[sp,#88]
 6199              	# copy-collector input: str r2,[sp,#88]
 6200              	
 6201              	# qhasm: him5 = hiu1
 6202              	# asm 1: str <hiu1=int32#4,>him5=stack32#24
 6203              	# asm 2: str <hiu1=r3,>him5=[sp,#92]
 6204              	# copy-collector input: str r3,[sp,#92]
 6205              	
 6206              	# qhasm: lom6 = lou2
 6207              	# asm 1: str <lou2=int32#5,>lom6=stack32#25
 6208              	# asm 2: str <lou2=r4,>lom6=[sp,#96]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 110


 6209              	# copy-collector input: str r4,[sp,#96]
 6210              	
 6211              	# qhasm: him6 = hiu2
 6212              	# asm 1: str <hiu2=int32#6,>him6=stack32#26
 6213              	# asm 2: str <hiu2=r5,>him6=[sp,#100]
 6214              	# copy-collector input: str r5,[sp,#100]
 6215              	
 6216              	# qhasm: lom7 = lou3
 6217              	# asm 1: str <lou3=int32#7,>lom7=stack32#27
 6218              	# asm 2: str <lou3=r6,>lom7=[sp,#104]
 6219              	# copy-collector input: str r6,[sp,#104]
 6220              	
 6221              	# qhasm: him7 = hiu3
 6222              	# asm 1: str <hiu3=int32#8,>him7=stack32#28
 6223              	# asm 2: str <hiu3=r7,>him7=[sp,#108]
 6224              	# copy-collector input: str r7,[sp,#108]
 6225              	
 6226              	# qhasm: lod4 = lou0
 6227              	# asm 1: str <lou0=int32#1,>lod4=stack32#29
 6228              	# asm 2: str <lou0=r0,>lod4=[sp,#112]
 6229              	# copy-collector input: str r0,[sp,#112]
 6230              	
 6231              	# qhasm: hid4 = hiu0
 6232              	# asm 1: str <hiu0=int32#2,>hid4=stack32#30
 6233              	# asm 2: str <hiu0=r1,>hid4=[sp,#116]
 6234              	# copy-collector input: str r1,[sp,#116]
 6235              	
 6236              	# qhasm: lod5 = lou1
 6237              	# asm 1: str <lou1=int32#3,>lod5=stack32#31
 6238              	# asm 2: str <lou1=r2,>lod5=[sp,#120]
 6239              	# copy-collector input: str r2,[sp,#120]
 6240              	
 6241              	# qhasm: hid5 = hiu1
 6242              	# asm 1: str <hiu1=int32#4,>hid5=stack32#32
 6243              	# asm 2: str <hiu1=r3,>hid5=[sp,#124]
 6244              	# copy-collector input: str r3,[sp,#124]
 6245              	
 6246              	# qhasm: lod6 = lou2
 6247              	# asm 1: str <lou2=int32#5,>lod6=stack32#33
 6248              	# asm 2: str <lou2=r4,>lod6=[sp,#128]
 6249              	# copy-collector input: str r4,[sp,#128]
 6250              	
 6251              	# qhasm: hid6 = hiu2
 6252              	# asm 1: str <hiu2=int32#6,>hid6=stack32#34
 6253              	# asm 2: str <hiu2=r5,>hid6=[sp,#132]
 6254              	# copy-collector input: str r5,[sp,#132]
 6255              	
 6256              	# qhasm: lod7 = lou3
 6257              	# asm 1: str <lou3=int32#7,>lod7=stack32#35
 6258              	# asm 2: str <lou3=r6,>lod7=[sp,#136]
 6259              	# copy-collector input: str r6,[sp,#136]
 6260              	
 6261              	# qhasm: hid7 = hiu3
 6262              	# asm 1: str <hiu3=int32#8,>hid7=stack32#36
 6263              	# asm 2: str <hiu3=r7,>hid7=[sp,#140]
 6264              	# copy-collector input: str r7,[sp,#140]
 6265              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 111


 6266              	# qhasm: input_0 = o2
 6267              	# asm 1: ldr >input_0=int32#1,<o2=stack32#3
 6268              	# asm 2: ldr >input_0=r0,<o2=[sp,#8]
 6269              	# copy-collector input: ldr r0,[sp,#8]
 6270              	
 6271              	# qhasm: =? unsigned<? input_0 -= 128
 6272              	# asm 1: subs >input_0=int32#1,<input_0=int32#1,#128
 6273              	# asm 2: subs >input_0=r0,<input_0=r0,#128
 6274              	# copy-collector output starts
 6275 0e58 CDE91401 	strd r0,r1,[sp,#80]
 6276 0e5c CDE91623 	strd r2,r3,[sp,#88]
 6277 0e60 CDE91845 	strd r4,r5,[sp,#96]
 6278 0e64 CDE91A67 	strd r6,r7,[sp,#104]
 6279 0e68 CDE91C01 	strd r0,r1,[sp,#112]
 6280 0e6c CDE91E23 	strd r2,r3,[sp,#120]
 6281 0e70 CDE92045 	strd r4,r5,[sp,#128]
 6282 0e74 CDE92267 	strd r6,r7,[sp,#136]
 6283 0e78 0298     	ldr r0,[sp,#8]
 6284              	# copy-collector output ends
 6285 0e7a 8038     	subs r0,r0,#128
 6286              	
 6287              	# qhasm: o2 = input_0
 6288              	# asm 1: str <input_0=int32#1,>o2=stack32#3
 6289              	# asm 2: str <input_0=r0,>o2=[sp,#8]
 6290              	# copy-collector input: str r0,[sp,#8]
 6291              	
 6292              	# qhasm: goto mainloop if !unsigned<
 6293              	# copy-collector output starts
 6294 0e7c 0290     	str r0,[sp,#8]
 6295              	# copy-collector output ends
 6296 0e7e BFF40DA9 	bhs ._mainloop
 6297              	
 6298              	# qhasm: endmainloop:
 6299              	._endmainloop:
 6300              	
 6301              	# qhasm: input_1 = o0
 6302              	# asm 1: ldr >input_1=int32#2,<o0=stack32#1
 6303              	# asm 2: ldr >input_1=r1,<o0=[sp,#0]
 6304              	# copy-collector input: ldr r1,[sp,#0]
 6305              	
 6306              	# qhasm: lou0 = lom0
 6307              	# asm 1: ldr >lou0=int32#3,<lom0=stack32#5
 6308              	# asm 2: ldr >lou0=r2,<lom0=[sp,#16]
 6309              	# copy-collector input: ldr r2,[sp,#16]
 6310              	
 6311              	# qhasm: hiu0 = him0
 6312              	# asm 1: ldr >hiu0=int32#4,<him0=stack32#6
 6313              	# asm 2: ldr >hiu0=r3,<him0=[sp,#20]
 6314              	# copy-collector input: ldr r3,[sp,#20]
 6315              	
 6316              	# qhasm: lou1 = lom1
 6317              	# asm 1: ldr >lou1=int32#5,<lom1=stack32#7
 6318              	# asm 2: ldr >lou1=r4,<lom1=[sp,#24]
 6319              	# copy-collector input: ldr r4,[sp,#24]
 6320              	
 6321              	# qhasm: hiu1 = him1
 6322              	# asm 1: ldr >hiu1=int32#6,<him1=stack32#8
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 112


 6323              	# asm 2: ldr >hiu1=r5,<him1=[sp,#28]
 6324              	# copy-collector input: ldr r5,[sp,#28]
 6325              	
 6326              	# qhasm: lou2 = lom2
 6327              	# asm 1: ldr >lou2=int32#7,<lom2=stack32#9
 6328              	# asm 2: ldr >lou2=r6,<lom2=[sp,#32]
 6329              	# copy-collector input: ldr r6,[sp,#32]
 6330              	
 6331              	# qhasm: hiu2 = him2
 6332              	# asm 1: ldr >hiu2=int32#8,<him2=stack32#10
 6333              	# asm 2: ldr >hiu2=r7,<him2=[sp,#36]
 6334              	# copy-collector input: ldr r7,[sp,#36]
 6335              	
 6336              	# qhasm: lou3 = lom3
 6337              	# asm 1: ldr >lou3=int32#9,<lom3=stack32#11
 6338              	# asm 2: ldr >lou3=r8,<lom3=[sp,#40]
 6339              	# copy-collector input: ldr r8,[sp,#40]
 6340              	
 6341              	# qhasm: hiu3 = him3
 6342              	# asm 1: ldr >hiu3=int32#10,<him3=stack32#12
 6343              	# asm 2: ldr >hiu3=r9,<him3=[sp,#44]
 6344              	# copy-collector input: ldr r9,[sp,#44]
 6345              	
 6346              	# qhasm: lou0 = lou0[3]lou0[2]lou0[1]lou0[0]
 6347              	# asm 1: rev >lou0=int32#3,<lou0=int32#3
 6348              	# asm 2: rev >lou0=r2,<lou0=r2
 6349              	# copy-collector output starts
 6350 0e82 0099     	ldr r1,[sp,#0]
 6351 0e84 049A     	ldr r2,[sp,#16]
 6352 0e86 059B     	ldr r3,[sp,#20]
 6353 0e88 069C     	ldr r4,[sp,#24]
 6354 0e8a 079D     	ldr r5,[sp,#28]
 6355 0e8c 089E     	ldr r6,[sp,#32]
 6356 0e8e 099F     	ldr r7,[sp,#36]
 6357 0e90 DDF82880 	ldr r8,[sp,#40]
 6358 0e94 DDF82C90 	ldr r9,[sp,#44]
 6359              	# copy-collector output ends
 6360 0e98 12BA     	rev r2,r2
 6361              	
 6362              	# qhasm: hiu0 = hiu0[3]hiu0[2]hiu0[1]hiu0[0]
 6363              	# asm 1: rev >hiu0=int32#4,<hiu0=int32#4
 6364              	# asm 2: rev >hiu0=r3,<hiu0=r3
 6365 0e9a 1BBA     	rev r3,r3
 6366              	
 6367              	# qhasm: lou1 = lou1[3]lou1[2]lou1[1]lou1[0]
 6368              	# asm 1: rev >lou1=int32#5,<lou1=int32#5
 6369              	# asm 2: rev >lou1=r4,<lou1=r4
 6370 0e9c 24BA     	rev r4,r4
 6371              	
 6372              	# qhasm: hiu1 = hiu1[3]hiu1[2]hiu1[1]hiu1[0]
 6373              	# asm 1: rev >hiu1=int32#6,<hiu1=int32#6
 6374              	# asm 2: rev >hiu1=r5,<hiu1=r5
 6375 0e9e 2DBA     	rev r5,r5
 6376              	
 6377              	# qhasm: lou2 = lou2[3]lou2[2]lou2[1]lou2[0]
 6378              	# asm 1: rev >lou2=int32#7,<lou2=int32#7
 6379              	# asm 2: rev >lou2=r6,<lou2=r6
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 113


 6380 0ea0 36BA     	rev r6,r6
 6381              	
 6382              	# qhasm: hiu2 = hiu2[3]hiu2[2]hiu2[1]hiu2[0]
 6383              	# asm 1: rev >hiu2=int32#8,<hiu2=int32#8
 6384              	# asm 2: rev >hiu2=r7,<hiu2=r7
 6385 0ea2 3FBA     	rev r7,r7
 6386              	
 6387              	# qhasm: lou3 = lou3[3]lou3[2]lou3[1]lou3[0]
 6388              	# asm 1: rev >lou3=int32#9,<lou3=int32#9
 6389              	# asm 2: rev >lou3=r8,<lou3=r8
 6390 0ea4 98FA88F8 	rev r8,r8
 6391              	
 6392              	# qhasm: hiu3 = hiu3[3]hiu3[2]hiu3[1]hiu3[0]
 6393              	# asm 1: rev >hiu3=int32#10,<hiu3=int32#10
 6394              	# asm 2: rev >hiu3=r9,<hiu3=r9
 6395 0ea8 99FA89F9 	rev r9,r9
 6396              	
 6397              	# qhasm: mem32[input_1] = hiu0
 6398              	# asm 1: str <hiu0=int32#4,[<input_1=int32#2]
 6399              	# asm 2: str <hiu0=r3,[<input_1=r1]
 6400              	# copy-collector input: str r3,[r1]
 6401              	
 6402              	# qhasm: mem32[input_1+4] = lou0
 6403              	# asm 1: str <lou0=int32#3,[<input_1=int32#2,#4]
 6404              	# asm 2: str <lou0=r2,[<input_1=r1,#4]
 6405              	# copy-collector input: str r2,[r1,#4]
 6406              	
 6407              	# qhasm: mem32[input_1+8] = hiu1
 6408              	# asm 1: str <hiu1=int32#6,[<input_1=int32#2,#8]
 6409              	# asm 2: str <hiu1=r5,[<input_1=r1,#8]
 6410              	# copy-collector input: str r5,[r1,#8]
 6411              	
 6412              	# qhasm: mem32[input_1+12] = lou1
 6413              	# asm 1: str <lou1=int32#5,[<input_1=int32#2,#12]
 6414              	# asm 2: str <lou1=r4,[<input_1=r1,#12]
 6415              	# copy-collector input: str r4,[r1,#12]
 6416              	
 6417              	# qhasm: mem32[input_1+16] = hiu2
 6418              	# asm 1: str <hiu2=int32#8,[<input_1=int32#2,#16]
 6419              	# asm 2: str <hiu2=r7,[<input_1=r1,#16]
 6420              	# copy-collector input: str r7,[r1,#16]
 6421              	
 6422              	# qhasm: mem32[input_1+20] = lou2
 6423              	# asm 1: str <lou2=int32#7,[<input_1=int32#2,#20]
 6424              	# asm 2: str <lou2=r6,[<input_1=r1,#20]
 6425              	# copy-collector input: str r6,[r1,#20]
 6426              	
 6427              	# qhasm: mem32[input_1+24] = hiu3
 6428              	# asm 1: str <hiu3=int32#10,[<input_1=int32#2,#24]
 6429              	# asm 2: str <hiu3=r9,[<input_1=r1,#24]
 6430              	# copy-collector input: str r9,[r1,#24]
 6431              	
 6432              	# qhasm: mem32[input_1+28] = lou3
 6433              	# asm 1: str <lou3=int32#9,[<input_1=int32#2,#28]
 6434              	# asm 2: str <lou3=r8,[<input_1=r1,#28]
 6435              	# copy-collector input: str r8,[r1,#28]
 6436              	
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 114


 6437              	# qhasm: lou0 = lom4
 6438              	# asm 1: ldr >lou0=int32#3,<lom4=stack32#21
 6439              	# asm 2: ldr >lou0=r2,<lom4=[sp,#80]
 6440              	# copy-collector input: ldr r2,[sp,#80]
 6441              	
 6442              	# qhasm: hiu0 = him4
 6443              	# asm 1: ldr >hiu0=int32#4,<him4=stack32#22
 6444              	# asm 2: ldr >hiu0=r3,<him4=[sp,#84]
 6445              	# copy-collector input: ldr r3,[sp,#84]
 6446              	
 6447              	# qhasm: lou1 = lom5
 6448              	# asm 1: ldr >lou1=int32#5,<lom5=stack32#23
 6449              	# asm 2: ldr >lou1=r4,<lom5=[sp,#88]
 6450              	# copy-collector input: ldr r4,[sp,#88]
 6451              	
 6452              	# qhasm: hiu1 = him5
 6453              	# asm 1: ldr >hiu1=int32#6,<him5=stack32#24
 6454              	# asm 2: ldr >hiu1=r5,<him5=[sp,#92]
 6455              	# copy-collector input: ldr r5,[sp,#92]
 6456              	
 6457              	# qhasm: lou2 = lom6
 6458              	# asm 1: ldr >lou2=int32#7,<lom6=stack32#25
 6459              	# asm 2: ldr >lou2=r6,<lom6=[sp,#96]
 6460              	# copy-collector input: ldr r6,[sp,#96]
 6461              	
 6462              	# qhasm: hiu2 = him6
 6463              	# asm 1: ldr >hiu2=int32#8,<him6=stack32#26
 6464              	# asm 2: ldr >hiu2=r7,<him6=[sp,#100]
 6465              	# copy-collector input: ldr r7,[sp,#100]
 6466              	
 6467              	# qhasm: lou3 = lom7
 6468              	# asm 1: ldr >lou3=int32#9,<lom7=stack32#27
 6469              	# asm 2: ldr >lou3=r8,<lom7=[sp,#104]
 6470              	# copy-collector input: ldr r8,[sp,#104]
 6471              	
 6472              	# qhasm: hiu3 = him7
 6473              	# asm 1: ldr >hiu3=int32#10,<him7=stack32#28
 6474              	# asm 2: ldr >hiu3=r9,<him7=[sp,#108]
 6475              	# copy-collector input: ldr r9,[sp,#108]
 6476              	
 6477              	# qhasm: lou0 = lou0[3]lou0[2]lou0[1]lou0[0]
 6478              	# asm 1: rev >lou0=int32#3,<lou0=int32#3
 6479              	# asm 2: rev >lou0=r2,<lou0=r2
 6480              	# copy-collector output starts
 6481 0eac 0B60     	str r3,[r1]
 6482 0eae 4A60     	str r2,[r1,#4]
 6483 0eb0 8D60     	str r5,[r1,#8]
 6484 0eb2 CC60     	str r4,[r1,#12]
 6485 0eb4 0F61     	str r7,[r1,#16]
 6486 0eb6 4E61     	str r6,[r1,#20]
 6487 0eb8 C1F81890 	str r9,[r1,#24]
 6488 0ebc C1F81C80 	str r8,[r1,#28]
 6489 0ec0 149A     	ldr r2,[sp,#80]
 6490 0ec2 159B     	ldr r3,[sp,#84]
 6491 0ec4 169C     	ldr r4,[sp,#88]
 6492 0ec6 179D     	ldr r5,[sp,#92]
 6493 0ec8 189E     	ldr r6,[sp,#96]
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 115


 6494 0eca 199F     	ldr r7,[sp,#100]
 6495 0ecc DDF86880 	ldr r8,[sp,#104]
 6496 0ed0 DDF86C90 	ldr r9,[sp,#108]
 6497              	# copy-collector output ends
 6498 0ed4 12BA     	rev r2,r2
 6499              	
 6500              	# qhasm: hiu0 = hiu0[3]hiu0[2]hiu0[1]hiu0[0]
 6501              	# asm 1: rev >hiu0=int32#4,<hiu0=int32#4
 6502              	# asm 2: rev >hiu0=r3,<hiu0=r3
 6503 0ed6 1BBA     	rev r3,r3
 6504              	
 6505              	# qhasm: lou1 = lou1[3]lou1[2]lou1[1]lou1[0]
 6506              	# asm 1: rev >lou1=int32#5,<lou1=int32#5
 6507              	# asm 2: rev >lou1=r4,<lou1=r4
 6508 0ed8 24BA     	rev r4,r4
 6509              	
 6510              	# qhasm: hiu1 = hiu1[3]hiu1[2]hiu1[1]hiu1[0]
 6511              	# asm 1: rev >hiu1=int32#6,<hiu1=int32#6
 6512              	# asm 2: rev >hiu1=r5,<hiu1=r5
 6513 0eda 2DBA     	rev r5,r5
 6514              	
 6515              	# qhasm: lou2 = lou2[3]lou2[2]lou2[1]lou2[0]
 6516              	# asm 1: rev >lou2=int32#7,<lou2=int32#7
 6517              	# asm 2: rev >lou2=r6,<lou2=r6
 6518 0edc 36BA     	rev r6,r6
 6519              	
 6520              	# qhasm: hiu2 = hiu2[3]hiu2[2]hiu2[1]hiu2[0]
 6521              	# asm 1: rev >hiu2=int32#8,<hiu2=int32#8
 6522              	# asm 2: rev >hiu2=r7,<hiu2=r7
 6523 0ede 3FBA     	rev r7,r7
 6524              	
 6525              	# qhasm: lou3 = lou3[3]lou3[2]lou3[1]lou3[0]
 6526              	# asm 1: rev >lou3=int32#9,<lou3=int32#9
 6527              	# asm 2: rev >lou3=r8,<lou3=r8
 6528 0ee0 98FA88F8 	rev r8,r8
 6529              	
 6530              	# qhasm: hiu3 = hiu3[3]hiu3[2]hiu3[1]hiu3[0]
 6531              	# asm 1: rev >hiu3=int32#10,<hiu3=int32#10
 6532              	# asm 2: rev >hiu3=r9,<hiu3=r9
 6533 0ee4 99FA89F9 	rev r9,r9
 6534              	
 6535              	# qhasm: mem32[input_1+32] = hiu0
 6536              	# asm 1: str <hiu0=int32#4,[<input_1=int32#2,#32]
 6537              	# asm 2: str <hiu0=r3,[<input_1=r1,#32]
 6538              	# copy-collector input: str r3,[r1,#32]
 6539              	
 6540              	# qhasm: mem32[input_1+36] = lou0
 6541              	# asm 1: str <lou0=int32#3,[<input_1=int32#2,#36]
 6542              	# asm 2: str <lou0=r2,[<input_1=r1,#36]
 6543              	# copy-collector input: str r2,[r1,#36]
 6544              	
 6545              	# qhasm: mem32[input_1+40] = hiu1
 6546              	# asm 1: str <hiu1=int32#6,[<input_1=int32#2,#40]
 6547              	# asm 2: str <hiu1=r5,[<input_1=r1,#40]
 6548              	# copy-collector input: str r5,[r1,#40]
 6549              	
 6550              	# qhasm: mem32[input_1+44] = lou1
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 116


 6551              	# asm 1: str <lou1=int32#5,[<input_1=int32#2,#44]
 6552              	# asm 2: str <lou1=r4,[<input_1=r1,#44]
 6553              	# copy-collector input: str r4,[r1,#44]
 6554              	
 6555              	# qhasm: mem32[input_1+48] = hiu2
 6556              	# asm 1: str <hiu2=int32#8,[<input_1=int32#2,#48]
 6557              	# asm 2: str <hiu2=r7,[<input_1=r1,#48]
 6558              	# copy-collector input: str r7,[r1,#48]
 6559              	
 6560              	# qhasm: mem32[input_1+52] = lou2
 6561              	# asm 1: str <lou2=int32#7,[<input_1=int32#2,#52]
 6562              	# asm 2: str <lou2=r6,[<input_1=r1,#52]
 6563              	# copy-collector input: str r6,[r1,#52]
 6564              	
 6565              	# qhasm: mem32[input_1+56] = hiu3
 6566              	# asm 1: str <hiu3=int32#10,[<input_1=int32#2,#56]
 6567              	# asm 2: str <hiu3=r9,[<input_1=r1,#56]
 6568              	# copy-collector input: str r9,[r1,#56]
 6569              	
 6570              	# qhasm: mem32[input_1+60] = lou3
 6571              	# asm 1: str <lou3=int32#9,[<input_1=int32#2,#60]
 6572              	# asm 2: str <lou3=r8,[<input_1=r1,#60]
 6573              	# copy-collector input: str r8,[r1,#60]
 6574              	
 6575              	# qhasm: input_0 += 128
 6576              	# asm 1: add >input_0=int32#1,<input_0=int32#1,#128
 6577              	# asm 2: add >input_0=r0,<input_0=r0,#128
 6578              	# copy-collector output starts
 6579 0ee8 0B62     	str r3,[r1,#32]
 6580 0eea 4A62     	str r2,[r1,#36]
 6581 0eec 8D62     	str r5,[r1,#40]
 6582 0eee CC62     	str r4,[r1,#44]
 6583 0ef0 0F63     	str r7,[r1,#48]
 6584 0ef2 4E63     	str r6,[r1,#52]
 6585 0ef4 C1F83890 	str r9,[r1,#56]
 6586 0ef8 C1F83C80 	str r8,[r1,#60]
 6587              	# copy-collector output ends
 6588 0efc 00F18000 	add r0,r0,#128
 6589              	
 6590              	# qhasm: rpopreturn input_0
 6591 0f00 0DF5907D 	add.w sp,sp,#288
 6592 0f04 BDE8F04F 	pop {r4,r5,r6,r7,r8,r9,r10,r11,r14}
 6593 0f08 704700BF 	bx lr
ARM GAS  C:\Users\Ridwane\AppData\Local\Temp\ccuMOcMs.s 			page 117


DEFINED SYMBOLS
crypto_hashblocks_sha512_inner32.s:223    .text:00000000 $t
crypto_hashblocks_sha512_inner32.s:228    .text:00000000 crypto_hashblocks_sha512_m4nofpu_inner
crypto_hashblocks_sha512_inner32.s:620    .text:0000009c ._mainloop
crypto_hashblocks_sha512_inner32.s:1186   .text:000001b8 ._innerloop
crypto_hashblocks_sha512_inner32.s:5795   .text:00000da8 ._endinnerloop
crypto_hashblocks_sha512_inner32.s:5603   .text:00000d64 ._nearend
crypto_hashblocks_sha512_inner32.s:6299   .text:00000e82 ._endmainloop

NO UNDEFINED SYMBOLS
